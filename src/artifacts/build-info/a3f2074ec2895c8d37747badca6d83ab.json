{
	"id": "a3f2074ec2895c8d37747badca6d83ab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"openzeppelin-contracts/=lib/openzeppelin-contracts/",
				"@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/",
				"wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"
			]
		},
		"sources": {
			"src/UnfuckGPTPriceData.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport \"@flarenetwork/flare-periphery-contracts/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol\";\nimport \"@flarenetwork/flare-periphery-contracts/coston2/ftso/userInterfaces/IFtsoRegistry.sol\";\nimport \"openzeppelin-contracts/contracts/access/Ownable.sol\";\n\n/* \nSupported symbols: \n[( XRP), (LTC), (XLM), (DOGE), (ADA), (ALGO), (BTC), (ETH), (FIL), (FLR), (ARB), (AVAX), (BNB), (MATIC), (SOL), (USDC), (USDT), (XDC)]\n */\ncontract UnfuckGPTPriceData is Ownable {\n    address private constant FLARE_CONTRACT_REGISTRY =\n        0xaD67FE66660Fb8dFE9d6b1b4240d8650e30F6019;\n\n    IFlareContractRegistry contractRegistry =\n        IFlareContractRegistry(FLARE_CONTRACT_REGISTRY);\n\n    mapping(uint256 => IFtsoRegistry.PriceInfo) public currentPriceInfo;\n\n    uint256 public priceInfosCount;\n\n    constructor() {}\n\n    function refreshPrices() external onlyOwner {\n        IFtsoRegistry ftsoRegistry = IFtsoRegistry(\n            contractRegistry.getContractAddressByName(\"FtsoRegistry\")\n        );\n\n        IFtsoRegistry.PriceInfo[] memory _priceInfos = ftsoRegistry\n            .getAllCurrentPrices();\n\n        priceInfosCount = _priceInfos.length;\n\n        for (uint256 i = 0; i < _priceInfos.length; i++) {\n            currentPriceInfo[_priceInfos[i].ftsoIndex] = _priceInfos[i];\n        }\n    }\n\n    function latestPriceForToken(\n        string memory _symbol\n    ) external view returns (IFtsoRegistry.PriceInfo memory) {\n         IFtsoRegistry ftsoRegistry = IFtsoRegistry(\n            contractRegistry.getContractAddressByName(\"FtsoRegistry\")\n        );\n        uint256 _idx = ftsoRegistry.getFtsoIndex(_symbol);\n        return currentPriceInfo[_idx];\n    }\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\npragma abicoder v2;\n\nimport \"../ftso/interface/IIFtso.sol\";\nimport \"../genesis/interface/IFtsoRegistryGenesis.sol\";\n\ninterface IFtsoRegistry is IFtsoRegistryGenesis {\n\n    struct PriceInfo {\n        uint256 ftsoIndex;\n        uint256 price;\n        uint256 decimals;\n        uint256 timestamp;\n    }\n\n    function getFtso(uint256 _ftsoIndex) external view returns(IIFtso _activeFtsoAddress);\n    function getFtsoBySymbol(string memory _symbol) external view returns(IIFtso _activeFtsoAddress);\n    function getSupportedIndices() external view returns(uint256[] memory _supportedIndices);\n    function getSupportedSymbols() external view returns(string[] memory _supportedSymbols);\n    function getSupportedFtsos() external view returns(IIFtso[] memory _ftsos);\n    function getFtsoIndex(string memory _symbol) external view returns (uint256 _assetIndex);\n    function getFtsoSymbol(uint256 _ftsoIndex) external view returns (string memory _symbol);\n    function getCurrentPrice(uint256 _ftsoIndex) external view returns(uint256 _price, uint256 _timestamp);\n    function getCurrentPrice(string memory _symbol) external view returns(uint256 _price, uint256 _timestamp);\n    function getCurrentPriceWithDecimals(uint256 _assetIndex) external view\n        returns(uint256 _price, uint256 _timestamp, uint256 _assetPriceUsdDecimals);\n    function getCurrentPriceWithDecimals(string memory _symbol) external view\n        returns(uint256 _price, uint256 _timestamp, uint256 _assetPriceUsdDecimals);\n\n    function getAllCurrentPrices() external view returns (PriceInfo[] memory);\n    function getCurrentPricesByIndices(uint256[] memory _indices) external view returns (PriceInfo[] memory);\n    function getCurrentPricesBySymbols(string[] memory _symbols) external view returns (PriceInfo[] memory);\n\n    function getSupportedIndicesAndFtsos() external view \n        returns(uint256[] memory _supportedIndices, IIFtso[] memory _ftsos);\n\n    function getSupportedSymbolsAndFtsos() external view \n        returns(string[] memory _supportedSymbols, IIFtso[] memory _ftsos);\n\n    function getSupportedIndicesAndSymbols() external view \n        returns(uint256[] memory _supportedIndices, string[] memory _supportedSymbols);\n\n    function getSupportedIndicesSymbolsAndFtsos() external view \n        returns(uint256[] memory _supportedIndices, string[] memory _supportedSymbols, IIFtso[] memory _ftsos);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\npragma abicoder v2;\n\ninterface IFlareContractRegistry {\n    /**\n     * @notice Returns contract address for the given name - might be address(0)\n     * @param _name             name of the contract\n     */\n    function getContractAddressByName(string calldata _name) external view returns(address);\n\n    /**\n     * @notice Returns contract address for the given name hash - might be address(0)\n     * @param _nameHash         hash of the contract name (keccak256(abi.encode(name))\n     */\n    function getContractAddressByHash(bytes32 _nameHash) external view returns(address);\n\n    /**\n     * @notice Returns contract addresses for the given names - might be address(0)\n     * @param _names            names of the contracts\n     */\n    function getContractAddressesByName(string[] calldata _names) external view returns(address[] memory);\n\n    /**\n     * @notice Returns contract addresses for the given name hashes - might be address(0)\n     * @param _nameHashes       hashes of the contract names (keccak256(abi.encode(name))\n     */\n    function getContractAddressesByHash(bytes32[] calldata _nameHashes) external view returns(address[] memory);\n\n    /**\n     * @notice Returns all contract names and corresponding addresses\n     */\n    function getAllContracts() external view returns(string[] memory _names, address[] memory _addresses);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\nimport \"./IFtsoGenesis.sol\";\n\n\ninterface IFtsoRegistryGenesis {\n\n    function getFtsos(uint256[] memory _indices) external view returns(IFtsoGenesis[] memory _ftsos);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\nimport \"../../genesis/interface/IFtsoGenesis.sol\";\nimport \"../../userInterfaces/IFtso.sol\";\nimport \"../../../util-contracts/token/token/interface/IIVPToken.sol\";\n\n\ninterface IIFtso is IFtso, IFtsoGenesis {\n\n    /// function finalizePriceReveal\n    /// called by reward manager only on correct timing.\n    /// if price reveal period for epoch x ended. finalize.\n    /// iterate list of price submissions\n    /// find weighted median\n    /// find adjucant 50% of price submissions.\n    /// Allocate reward for any price submission which is same as a \"winning\" submission\n    function finalizePriceEpoch(uint256 _epochId, bool _returnRewardData) external\n        returns(\n            address[] memory _eligibleAddresses,\n            uint256[] memory _natWeights,\n            uint256 _totalNatWeight\n        );\n\n    function fallbackFinalizePriceEpoch(uint256 _epochId) external;\n\n    function forceFinalizePriceEpoch(uint256 _epochId) external;\n\n    // activateFtso will be called by ftso manager once ftso is added \n    // before this is done, FTSO can't run\n    function activateFtso(\n        uint256 _firstEpochStartTs,\n        uint256 _submitPeriodSeconds,\n        uint256 _revealPeriodSeconds\n    ) external;\n\n    function deactivateFtso() external;\n\n    // update initial price and timestamp - only if not active\n    function updateInitialPrice(uint256 _initialPriceUSD, uint256 _initialPriceTimestamp) external;\n\n    function configureEpochs(\n        uint256 _maxVotePowerNatThresholdFraction,\n        uint256 _maxVotePowerAssetThresholdFraction,\n        uint256 _lowAssetUSDThreshold,\n        uint256 _highAssetUSDThreshold,\n        uint256 _highAssetTurnoutThresholdBIPS,\n        uint256 _lowNatTurnoutThresholdBIPS,\n        uint256 _elasticBandRewardBIPS,\n        uint256 _elasticBandWidthPPM,\n        address[] memory _trustedAddresses\n    ) external;\n\n    function setAsset(IIVPToken _asset) external;\n\n    function setAssetFtsos(IIFtso[] memory _assetFtsos) external;\n\n    // current vote power block will update per reward epoch. \n    // the FTSO doesn't have notion of reward epochs.\n    // reward manager only can set this data. \n    function setVotePowerBlock(uint256 _blockNumber) external;\n\n    function initializeCurrentEpochStateForReveal(uint256 _circulatingSupplyNat, bool _fallbackMode) external;\n  \n    /**\n     * @notice Returns ftso manager address\n     */\n    function ftsoManager() external view returns (address);\n\n    /**\n     * @notice Returns the FTSO asset\n     * @dev Asset is null in case of multi-asset FTSO\n     */\n    function getAsset() external view returns (IIVPToken);\n\n    /**\n     * @notice Returns the Asset FTSOs\n     * @dev AssetFtsos is not null only in case of multi-asset FTSO\n     */\n    function getAssetFtsos() external view returns (IIFtso[] memory);\n\n    /**\n     * @notice Returns current configuration of epoch state\n     * @return _maxVotePowerNatThresholdFraction        High threshold for native token vote power per voter\n     * @return _maxVotePowerAssetThresholdFraction      High threshold for asset vote power per voter\n     * @return _lowAssetUSDThreshold            Threshold for low asset vote power\n     * @return _highAssetUSDThreshold           Threshold for high asset vote power\n     * @return _highAssetTurnoutThresholdBIPS   Threshold for high asset turnout\n     * @return _lowNatTurnoutThresholdBIPS      Threshold for low nat turnout\n     * @return _elasticBandRewardBIPS           Hybrid reward band, where _elasticBandRewardBIPS goes to the \n        elastic band (prices within _elasticBandWidthPPM of the median) \n        and 10000 - elasticBandRewardBIPS to the IQR \n     * @return _elasticBandWidthPPM             Prices within _elasticBandWidthPPM of median are rewarded\n     * @return _trustedAddresses                Trusted addresses - use their prices if low nat turnout is not achieved\n     */\n    function epochsConfiguration() external view \n        returns (\n            uint256 _maxVotePowerNatThresholdFraction,\n            uint256 _maxVotePowerAssetThresholdFraction,\n            uint256 _lowAssetUSDThreshold,\n            uint256 _highAssetUSDThreshold,\n            uint256 _highAssetTurnoutThresholdBIPS,\n            uint256 _lowNatTurnoutThresholdBIPS,\n            uint256 _elasticBandRewardBIPS,\n            uint256 _elasticBandWidthPPM,\n            address[] memory _trustedAddresses\n        );\n\n    /**\n     * @notice Returns parameters necessary for approximately replicating vote weighting.\n     * @return _assets                  the list of Assets that are accounted in vote\n     * @return _assetMultipliers        weight of each asset in (multiasset) ftso, mutiplied by TERA\n     * @return _totalVotePowerNat       total native token vote power at block\n     * @return _totalVotePowerAsset     total combined asset vote power at block\n     * @return _assetWeightRatio        ratio of combined asset vp vs. native token vp (in BIPS)\n     * @return _votePowerBlock          vote powewr block for given epoch\n     */\n    function getVoteWeightingParameters() external view \n        returns (\n            IIVPToken[] memory _assets,\n            uint256[] memory _assetMultipliers,\n            uint256 _totalVotePowerNat,\n            uint256 _totalVotePowerAsset,\n            uint256 _assetWeightRatio,\n            uint256 _votePowerBlock\n        );\n\n    function wNat() external view returns (IIVPToken);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol": {
				"content": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\n\ninterface IFtsoGenesis {\n\n    /**\n     * @notice Reveals submitted price during epoch reveal period - only price submitter\n     * @param _voter                Voter address\n     * @param _epochId              Id of the epoch in which the price hash was submitted\n     * @param _price                Submitted price in USD\n     * @notice The hash of _price and _random must be equal to the submitted hash\n     * @notice Emits PriceRevealed event\n     */\n    function revealPriceSubmitter(\n        address _voter,\n        uint256 _epochId,\n        uint256 _price,\n        uint256 _wNatVP\n    ) external;\n\n    /**\n     * @notice Get (and cache) wNat vote power for specified voter and given epoch id\n     * @param _voter                Voter address\n     * @param _epochId              Id of the epoch in which the price hash was submitted\n     * @return wNat vote power\n     */\n    function wNatVotePowerCached(address _voter, uint256 _epochId) external returns (uint256);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\nimport \"../../userInterfaces/IVPToken.sol\";\nimport \"../../../../governance/userInterfaces/IGovernanceVotePower.sol\";\nimport \"./IIVPContract.sol\";\nimport \"./IIGovernanceVotePower.sol\";\nimport \"./IICleanable.sol\";\n\ninterface IIVPToken is IVPToken, IICleanable {\n    /**\n     * Set the contract that is allowed to set cleanupBlockNumber.\n     * Usually this will be an instance of CleanupBlockNumberManager.\n     */\n    function setCleanupBlockNumberManager(address _cleanupBlockNumberManager) external;\n    \n    /**\n     * Sets new governance vote power contract that allows token owners to participate in governance voting\n     * and delegate governance vote power. \n     */\n    function setGovernanceVotePower(IIGovernanceVotePower _governanceVotePower) external;\n    \n    /**\n    * @notice Get the total vote power at block `_blockNumber` using cache.\n    *   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n    *   Can only be used if `_blockNumber` is in the past, otherwise reverts.    \n    * @param _blockNumber The block number at which to fetch.\n    * @return The total vote power at the block (sum of all accounts' vote powers).\n    */\n    function totalVotePowerAtCached(uint256 _blockNumber) external returns(uint256);\n    \n    /**\n    * @notice Get the vote power of `_owner` at block `_blockNumber` using cache.\n    *   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n    *   Can only be used if _blockNumber is in the past, otherwise reverts.    \n    * @param _owner The address to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_owner` at `_blockNumber`.\n    */\n    function votePowerOfAtCached(address _owner, uint256 _blockNumber) external returns(uint256);\n\n    /**\n     * Return vote powers for several addresses in a batch.\n     * @param _owners The list of addresses to fetch vote power of.\n     * @param _blockNumber The block number at which to fetch.\n     * @return A list of vote powers.\n     */    \n    function batchVotePowerOfAt(\n        address[] memory _owners, \n        uint256 _blockNumber\n    ) external view returns(uint256[] memory);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\ninterface IFtso {\n    enum PriceFinalizationType {\n        // initial state\n        NOT_FINALIZED,\n        // median calculation used to find price\n        WEIGHTED_MEDIAN,\n        // low turnout - price calculated from median of trusted addresses\n        TRUSTED_ADDRESSES,\n        // low turnout + no votes from trusted addresses - price copied from previous epoch\n        PREVIOUS_PRICE_COPIED,\n        // price calculated from median of trusted addresses - triggered due to an exception\n        TRUSTED_ADDRESSES_EXCEPTION,\n        // previous price copied - triggered due to an exception\n        PREVIOUS_PRICE_COPIED_EXCEPTION\n    }\n\n    event PriceRevealed(\n        address indexed voter, uint256 indexed epochId, uint256 price, uint256 timestamp,\n        uint256 votePowerNat, uint256 votePowerAsset\n    );\n\n    event PriceFinalized(\n        uint256 indexed epochId, uint256 price, bool rewardedFtso,\n        uint256 lowIQRRewardPrice, uint256 highIQRRewardPrice,\n        uint256 lowElasticBandRewardPrice, uint256 highElasticBandRewardPrice, \n        PriceFinalizationType finalizationType, uint256 timestamp\n    );\n\n    event PriceEpochInitializedOnFtso(\n        uint256 indexed epochId, uint256 endTime, uint256 timestamp\n    );\n\n    event LowTurnout(\n        uint256 indexed epochId,\n        uint256 natTurnout,\n        uint256 lowNatTurnoutThresholdBIPS,\n        uint256 timestamp\n    );\n\n    /**\n     * @notice Returns if FTSO is active\n     */\n    function active() external view returns (bool);\n\n    /**\n     * @notice Returns the FTSO symbol\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @notice Returns current epoch id\n     */\n    function getCurrentEpochId() external view returns (uint256);\n\n    /**\n     * @notice Returns id of the epoch which was opened for price submission at the specified timestamp\n     * @param _timestamp            Timestamp as seconds from unix epoch\n     */\n    function getEpochId(uint256 _timestamp) external view returns (uint256);\n    \n    /**\n     * @notice Returns random number of the specified epoch\n     * @param _epochId              Id of the epoch\n     */\n    function getRandom(uint256 _epochId) external view returns (uint256);\n\n    /**\n     * @notice Returns asset price consented in specific epoch\n     * @param _epochId              Id of the epoch\n     * @return Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     */\n    function getEpochPrice(uint256 _epochId) external view returns (uint256);\n\n    /**\n     * @notice Returns current epoch data\n     * @return _epochId                 Current epoch id\n     * @return _epochSubmitEndTime      End time of the current epoch price submission as seconds from unix epoch\n     * @return _epochRevealEndTime      End time of the current epoch price reveal as seconds from unix epoch\n     * @return _votePowerBlock          Vote power block for the current epoch\n     * @return _fallbackMode            Current epoch in fallback mode - only votes from trusted addresses will be used\n     * @dev half-closed intervals - end time not included\n     */\n    function getPriceEpochData() external view returns (\n        uint256 _epochId,\n        uint256 _epochSubmitEndTime,\n        uint256 _epochRevealEndTime,\n        uint256 _votePowerBlock,\n        bool _fallbackMode\n    );\n\n    /**\n     * @notice Returns current epoch data\n     * @return _firstEpochStartTs           First epoch start timestamp\n     * @return _submitPeriodSeconds         Submit period in seconds\n     * @return _revealPeriodSeconds         Reveal period in seconds\n     */\n    function getPriceEpochConfiguration() external view returns (\n        uint256 _firstEpochStartTs,\n        uint256 _submitPeriodSeconds,\n        uint256 _revealPeriodSeconds\n    );\n    \n    /**\n     * @notice Returns asset price submitted by voter in specific epoch\n     * @param _epochId              Id of the epoch\n     * @param _voter                Address of the voter\n     * @return Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     */\n    function getEpochPriceForVoter(uint256 _epochId, address _voter) external view returns (uint256);\n\n    /**\n     * @notice Returns current asset price\n     * @return _price               Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     * @return _timestamp           Time when price was updated for the last time\n     */\n    function getCurrentPrice() external view returns (uint256 _price, uint256 _timestamp);\n\n    /**\n     * @notice Returns current asset price and number of decimals\n     * @return _price                   Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     * @return _timestamp               Time when price was updated for the last time\n     * @return _assetPriceUsdDecimals   Number of decimals used for USD price\n     */\n    function getCurrentPriceWithDecimals() external view returns (\n        uint256 _price,\n        uint256 _timestamp,\n        uint256 _assetPriceUsdDecimals\n    );\n    \n    /**\n     * @notice Returns current asset price calculated from trusted providers\n     * @return _price               Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     * @return _timestamp           Time when price was updated for the last time\n     */\n    function getCurrentPriceFromTrustedProviders() external view returns (uint256 _price, uint256 _timestamp);\n\n    /**\n     * @notice Returns current asset price calculated from trusted providers and number of decimals\n     * @return _price                   Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     * @return _timestamp               Time when price was updated for the last time\n     * @return _assetPriceUsdDecimals   Number of decimals used for USD price\n     */\n    function getCurrentPriceWithDecimalsFromTrustedProviders() external view returns (\n        uint256 _price,\n        uint256 _timestamp,\n        uint256 _assetPriceUsdDecimals\n    );\n\n    /**\n     * @notice Returns current asset price details\n     * @return _price                                   Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n     * @return _priceTimestamp                          Time when price was updated for the last time\n     * @return _priceFinalizationType                   Finalization type when price was updated for the last time\n     * @return _lastPriceEpochFinalizationTimestamp     Time when last price epoch was finalized\n     * @return _lastPriceEpochFinalizationType          Finalization type of last finalized price epoch\n     */\n    function getCurrentPriceDetails() external view returns (\n        uint256 _price,\n        uint256 _priceTimestamp,\n        PriceFinalizationType _priceFinalizationType,\n        uint256 _lastPriceEpochFinalizationTimestamp,\n        PriceFinalizationType _lastPriceEpochFinalizationType\n    );\n\n    /**\n     * @notice Returns current random number\n     */\n    function getCurrentRandom() external view returns (uint256);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\ninterface IICleanable {\n    /**\n     * Set the contract that is allowed to call history cleaning methods.\n     */\n    function setCleanerContract(address _cleanerContract) external;\n    \n    /**\n     * Set the cleanup block number.\n     * Historic data for the blocks before `cleanupBlockNumber` can be erased,\n     * history before that block should never be used since it can be inconsistent.\n     * In particular, cleanup block number must be before current vote power block.\n     * @param _blockNumber The new cleanup block number.\n     */\n    function setCleanupBlockNumber(uint256 _blockNumber) external;\n    \n    /**\n     * Get the current cleanup block number.\n     */\n    function cleanupBlockNumber() external view returns (uint256);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\nimport \"../../userInterfaces/IVPToken.sol\";\nimport \"../../../infrastructure/userInterfaces/IPChainStakeMirror.sol\";\nimport \"../../../../governance/userInterfaces/IGovernanceVotePower.sol\";\n\n/**\n * Internal interface for contracts delegating their governance vote power.\n */\ninterface IIGovernanceVotePower is IGovernanceVotePower {\n    /**\n     * Emitted when a delegate's vote power changes, as a result of a new delegation\n     * or a token transfer, for example.\n     *\n     * The event is always emitted from a `GovernanceVotePower` contract.\n     * @param delegate The account receiving the changing delegated vote power.\n     * @param previousBalance Delegated vote power before the change.\n     * @param newBalance Delegated vote power after the change.\n     */\n    event DelegateVotesChanged(\n        address indexed delegate,\n        uint256 previousBalance,\n        uint256 newBalance\n    );\n\n    /**\n     * Emitted when an account starts delegating vote power or switches its delegation\n     * to another address.\n     *\n     * The event is always emitted from a `GovernanceVotePower` contract.\n     * @param delegator Account delegating its vote power.\n     * @param fromDelegate Account receiving the delegation before the change.\n     * Can be address(0) if there was no previous delegation.\n     * @param toDelegate Account receiving the delegation after the change.\n     * Can be address(0) if `delegator` just undelegated all its vote power.\n     */\n    event DelegateChanged(\n        address indexed delegator,\n        address indexed fromDelegate,\n        address indexed toDelegate\n    );\n\n    /**\n     * Update governance vote power of all involved delegates after tokens are transferred.\n     *\n     * This function **MUST** be called after each governance token transfer for the\n     * delegates to reflect the correct balance.\n     * @param _from Source address of the transfer.\n     * @param _to Destination address of the transfer.\n     * @param _fromBalance _Ignored._\n     * @param _toBalance _Ignored._\n     * @param _amount Amount being transferred.\n     */\n    function updateAtTokenTransfer(\n        address _from,\n        address _to,\n        uint256 _fromBalance,\n        uint256 _toBalance,\n        uint256 _amount\n    ) external;\n\n    /**\n     * Set the cleanup block number.\n     * Historic data for the blocks before `cleanupBlockNumber` can be erased.\n     * History before that block should never be used since it can be inconsistent.\n     * In particular, cleanup block number must be lower than the current vote power block.\n     * @param _blockNumber The new cleanup block number.\n     */\n    function setCleanupBlockNumber(uint256 _blockNumber) external;\n\n    /**\n     * Set the contract that is allowed to call history cleaning methods.\n     * @param _cleanerContract Address of the cleanup contract.\n     * Usually this will be an instance of `CleanupBlockNumberManager`.\n     */\n    function setCleanerContract(address _cleanerContract) external;\n\n    /**\n     * Get the token that this governance vote power contract belongs to.\n     * @return The IVPToken interface owning this contract.\n     */\n    function ownerToken() external view returns (IVPToken);\n\n    /**\n     * Get the stake mirror contract that this governance vote power contract belongs to.\n     * @return The IPChainStakeMirror interface owning this contract.\n     */\n    function pChainStakeMirror() external view returns (IPChainStakeMirror);\n\n    /**\n     * Get the current cleanup block number set with `setCleanupBlockNumber()`.\n     * @return The currently set cleanup block number.\n     */\n    function getCleanupBlockNumber() external view returns(uint256);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\nimport \"../../userInterfaces/IVPToken.sol\";\nimport \"../../userInterfaces/IVPContractEvents.sol\";\nimport \"./IICleanable.sol\";\n\ninterface IIVPContract is IICleanable, IVPContractEvents {\n    /**\n     * Update vote powers when tokens are transfered.\n     * Also update delegated vote powers for percentage delegation\n     * and check for enough funds for explicit delegations.\n     **/\n    function updateAtTokenTransfer(\n        address _from, \n        address _to, \n        uint256 _fromBalance,\n        uint256 _toBalance,\n        uint256 _amount\n    ) external;\n\n    /**\n     * @notice Delegate `_bips` percentage of voting power to `_to` from `_from`\n     * @param _from The address of the delegator\n     * @param _to The address of the recipient\n     * @param _balance The delegator's current balance\n     * @param _bips The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).\n     *   Not cumulative - every call resets the delegation value (and value of 0 revokes delegation).\n     **/\n    function delegate(\n        address _from, \n        address _to, \n        uint256 _balance, \n        uint256 _bips\n    ) external;\n    \n    /**\n     * @notice Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\n     * @param _from The address of the delegator\n     * @param _to The address of the recipient\n     * @param _balance The delegator's current balance\n     * @param _amount An explicit vote power amount to be delegated.\n     *   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).\n     **/    \n    function delegateExplicit(\n        address _from, \n        address _to, \n        uint256 _balance, \n        uint _amount\n    ) external;    \n\n    /**\n     * @notice Revoke all delegation from sender to `_who` at given block. \n     *    Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.\n     *    Block `_blockNumber` must be in the past. \n     *    This method should be used only to prevent rogue delegate voting in the current voting block.\n     *    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\n     * @param _from The address of the delegator\n     * @param _who Address of the delegatee\n     * @param _balance The delegator's current balance\n     * @param _blockNumber The block number at which to revoke delegation.\n     **/\n    function revokeDelegationAt(\n        address _from, \n        address _who, \n        uint256 _balance,\n        uint _blockNumber\n    ) external;\n    \n        /**\n     * @notice Undelegate all voting power for delegates of `msg.sender`\n     *    Can only be used with percentage delegation.\n     *    Does not reset delegation mode back to NOTSET.\n     * @param _from The address of the delegator\n     **/\n    function undelegateAll(\n        address _from,\n        uint256 _balance\n    ) external;\n    \n    /**\n     * @notice Undelegate all explicit vote power by amount delegates for `msg.sender`.\n     *    Can only be used with explicit delegation.\n     *    Does not reset delegation mode back to NOTSET.\n     * @param _from The address of the delegator\n     * @param _delegateAddresses Explicit delegation does not store delegatees' addresses, \n     *   so the caller must supply them.\n     * @return The amount still delegated (in case the list of delegates was incomplete).\n     */\n    function undelegateAllExplicit(\n        address _from, \n        address[] memory _delegateAddresses\n    ) external returns (uint256);\n    \n    /**\n    * @notice Get the vote power of `_who` at block `_blockNumber`\n    *   Reads/updates cache and upholds revocations.\n    * @param _who The address to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_who` at `_blockNumber`.\n    */\n    function votePowerOfAtCached(address _who, uint256 _blockNumber) external returns(uint256);\n    \n    /**\n     * @notice Get the current vote power of `_who`.\n     * @param _who The address to get voting power.\n     * @return Current vote power of `_who`.\n     */\n    function votePowerOf(address _who) external view returns(uint256);\n    \n    /**\n    * @notice Get the vote power of `_who` at block `_blockNumber`\n    * @param _who The address to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_who` at `_blockNumber`.\n    */\n    function votePowerOfAt(address _who, uint256 _blockNumber) external view returns(uint256);\n\n    /**\n    * @notice Get the vote power of `_who` at block `_blockNumber`, ignoring revocation information (and cache).\n    * @param _who The address to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_who` at `_blockNumber`. Result doesn't change if vote power is revoked.\n    */\n    function votePowerOfAtIgnoringRevocation(address _who, uint256 _blockNumber) external view returns(uint256);\n\n    /**\n     * Return vote powers for several addresses in a batch.\n     * @param _owners The list of addresses to fetch vote power of.\n     * @param _blockNumber The block number at which to fetch.\n     * @return A list of vote powers.\n     */    \n    function batchVotePowerOfAt(\n        address[] memory _owners, \n        uint256 _blockNumber\n    )\n        external view returns(uint256[] memory);\n\n    /**\n    * @notice Get current delegated vote power `_from` delegator delegated `_to` delegatee.\n    * @param _from Address of delegator\n    * @param _to Address of delegatee\n    * @param _balance The delegator's current balance\n    * @return The delegated vote power.\n    */\n    function votePowerFromTo(\n        address _from, \n        address _to, \n        uint256 _balance\n    ) external view returns(uint256);\n    \n    /**\n    * @notice Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\n    * @param _from Address of delegator\n    * @param _to Address of delegatee\n    * @param _balance The delegator's current balance\n    * @param _blockNumber The block number at which to fetch.\n    * @return The delegated vote power.\n    */\n    function votePowerFromToAt(\n        address _from, \n        address _to, \n        uint256 _balance,\n        uint _blockNumber\n    ) external view returns(uint256);\n\n    /**\n     * @notice Compute the current undelegated vote power of `_owner`\n     * @param _owner The address to get undelegated voting power.\n     * @param _balance Owner's current balance\n     * @return The unallocated vote power of `_owner`\n     */\n    function undelegatedVotePowerOf(\n        address _owner,\n        uint256 _balance\n    ) external view returns(uint256);\n\n    /**\n     * @notice Get the undelegated vote power of `_owner` at given block.\n     * @param _owner The address to get undelegated voting power.\n     * @param _blockNumber The block number at which to fetch.\n     * @return The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)\n     */\n    function undelegatedVotePowerOfAt(\n        address _owner, \n        uint256 _balance,\n        uint256 _blockNumber\n    ) external view returns(uint256);\n\n    /**\n     * @notice Get the delegation mode for '_who'. This mode determines whether vote power is\n     *  allocated by percentage or by explicit value.\n     * @param _who The address to get delegation mode.\n     * @return Delegation mode (NOTSET=0, PERCENTAGE=1, AMOUNT=2))\n     */\n    function delegationModeOf(address _who) external view returns (uint256);\n    \n    /**\n    * @notice Get the vote power delegation `_delegateAddresses` \n    *  and `pcts` of an `_owner`. Returned in two separate positional arrays.\n    * @param _owner The address to get delegations.\n    * @return _delegateAddresses Positional array of delegation addresses.\n    * @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n    * @return _count The number of delegates.\n    * @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\n    */\n    function delegatesOf(\n        address _owner\n    )\n        external view \n        returns (\n            address[] memory _delegateAddresses, \n            uint256[] memory _bips,\n            uint256 _count,\n            uint256 _delegationMode\n        );\n\n    /**\n    * @notice Get the vote power delegation `delegationAddresses` \n    *  and `pcts` of an `_owner`. Returned in two separate positional arrays.\n    * @param _owner The address to get delegations.\n    * @param _blockNumber The block for which we want to know the delegations.\n    * @return _delegateAddresses Positional array of delegation addresses.\n    * @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n    * @return _count The number of delegates.\n    * @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\n    */\n    function delegatesOfAt(\n        address _owner,\n        uint256 _blockNumber\n    )\n        external view \n        returns (\n            address[] memory _delegateAddresses, \n            uint256[] memory _bips,\n            uint256 _count,\n            uint256 _delegationMode\n        );\n\n    /**\n     * The VPToken (or some other contract) that owns this VPContract.\n     * All state changing methods may be called only from this address.\n     * This is because original msg.sender is sent in `_from` parameter\n     * and we must be sure that it cannot be faked by directly calling VPContract.\n     * Owner token is also used in case of replacement to recover vote powers from balances.\n     */\n    function ownerToken() external view returns (IVPToken);\n    \n    /**\n     * Return true if this IIVPContract is configured to be used as a replacement for other contract.\n     * It means that vote powers are not necessarily correct at the initialization, therefore\n     * every method that reads vote power must check whether it is initialized for that address and block.\n     */\n    function isReplacement() external view returns (bool);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\n/**\n * Interface for contracts delegating their governance vote power.\n */\ninterface IGovernanceVotePower {\n    /**\n     * Delegates all governance vote power of `msg.sender` to address `_to`.\n     * @param _to The address of the recipient.\n     */\n    function delegate(address _to) external;\n\n    /**\n     * Undelegates all governance vote power of `msg.sender`.\n     */\n    function undelegate() external;\n\n    /**\n     * Gets the governance vote power of an address at a given block number, including\n     * all delegations made to it.\n     * @param _who The address being queried.\n     * @param _blockNumber The block number at which to fetch the vote power.\n     * @return Governance vote power of `_who` at `_blockNumber`.\n     */\n    function votePowerOfAt(address _who, uint256 _blockNumber) external view returns(uint256);\n\n    /**\n     * Gets the governance vote power of an address at the latest block, including\n     * all delegations made to it.\n     * @param _who The address being queried.\n     * @return Governance vote power of `account` at the lastest block.\n     */\n    function getVotes(address _who) external view returns (uint256);\n\n    /**\n     * Gets the address an account is delegating its governance vote power to, at a given block number.\n     * @param _who The address being queried.\n     * @param _blockNumber The block number at which to fetch the address.\n     * @return Address where `_who` was delegating its governance vote power at block `_blockNumber`.\n     */\n    function getDelegateOfAt(address _who, uint256 _blockNumber) external view returns (address);\n\n    /**\n     * Gets the address an account is delegating its governance vote power to, at the latest block number.\n     * @param _who The address being queried.\n     * @return Address where `_who` is currently delegating its governance vote power.\n     */\n    function getDelegateOfAtNow(address _who) external view returns (address);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\nimport {IERC20} from \"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\nimport \"../../../governance/userInterfaces/IGovernanceVotePower.sol\";\nimport \"./IVPContractEvents.sol\";\n\ninterface IVPToken is IERC20 {\n    /**\n     * @notice Delegate by percentage `_bips` of voting power to `_to` from `msg.sender`.\n     * @param _to The address of the recipient\n     * @param _bips The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).\n     *   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).\n     **/\n    function delegate(address _to, uint256 _bips) external;\n    \n    /**\n     * @notice Undelegate all percentage delegations from the sender and then delegate corresponding \n     *   `_bips` percentage of voting power from the sender to each member of `_delegatees`.\n     * @param _delegatees The addresses of the new recipients.\n     * @param _bips The percentages of voting power to be delegated expressed in basis points (1/100 of one percent).\n     *   Total of all `_bips` values must be at most 10000.\n     **/\n    function batchDelegate(address[] memory _delegatees, uint256[] memory _bips) external;\n        \n    /**\n     * @notice Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\n     * @param _to The address of the recipient\n     * @param _amount An explicit vote power amount to be delegated.\n     *   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).\n     **/    \n    function delegateExplicit(address _to, uint _amount) external;\n\n    /**\n    * @notice Revoke all delegation from sender to `_who` at given block. \n    *    Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.\n    *    Block `_blockNumber` must be in the past. \n    *    This method should be used only to prevent rogue delegate voting in the current voting block.\n    *    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\n    * @param _who Address of the delegatee\n    * @param _blockNumber The block number at which to revoke delegation.\n    */\n    function revokeDelegationAt(address _who, uint _blockNumber) external;\n    \n    /**\n     * @notice Undelegate all voting power for delegates of `msg.sender`\n     *    Can only be used with percentage delegation.\n     *    Does not reset delegation mode back to NOTSET.\n     **/\n    function undelegateAll() external;\n    \n    /**\n     * @notice Undelegate all explicit vote power by amount delegates for `msg.sender`.\n     *    Can only be used with explicit delegation.\n     *    Does not reset delegation mode back to NOTSET.\n     * @param _delegateAddresses Explicit delegation does not store delegatees' addresses, \n     *   so the caller must supply them.\n     * @return The amount still delegated (in case the list of delegates was incomplete).\n     */\n    function undelegateAllExplicit(address[] memory _delegateAddresses) external returns (uint256);\n\n\n    /**\n     * @dev Should be compatible with ERC20 method\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Should be compatible with ERC20 method\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Should be compatible with ERC20 method\n     */\n    function decimals() external view returns (uint8);\n    \n\n    /**\n     * @notice Total amount of tokens at a specific `_blockNumber`.\n     * @param _blockNumber The block number when the totalSupply is queried\n     * @return The total amount of tokens at `_blockNumber`\n     **/\n    function totalSupplyAt(uint _blockNumber) external view returns(uint256);\n\n    /**\n     * @dev Queries the token balance of `_owner` at a specific `_blockNumber`.\n     * @param _owner The address from which the balance will be retrieved.\n     * @param _blockNumber The block number when the balance is queried.\n     * @return The balance at `_blockNumber`.\n     **/\n    function balanceOfAt(address _owner, uint _blockNumber) external view returns (uint256);\n\n    \n    /**\n     * @notice Get the current total vote power.\n     * @return The current total vote power (sum of all accounts' vote powers).\n     */\n    function totalVotePower() external view returns(uint256);\n    \n    /**\n    * @notice Get the total vote power at block `_blockNumber`\n    * @param _blockNumber The block number at which to fetch.\n    * @return The total vote power at the block  (sum of all accounts' vote powers).\n    */\n    function totalVotePowerAt(uint _blockNumber) external view returns(uint256);\n\n    /**\n     * @notice Get the current vote power of `_owner`.\n     * @param _owner The address to get voting power.\n     * @return Current vote power of `_owner`.\n     */\n    function votePowerOf(address _owner) external view returns(uint256);\n    \n    /**\n    * @notice Get the vote power of `_owner` at block `_blockNumber`\n    * @param _owner The address to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_owner` at `_blockNumber`.\n    */\n    function votePowerOfAt(address _owner, uint256 _blockNumber) external view returns(uint256);\n\n    /**\n    * @notice Get the vote power of `_owner` at block `_blockNumber`, ignoring revocation information (and cache).\n    * @param _owner The address to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_owner` at `_blockNumber`. Result doesn't change if vote power is revoked.\n    */\n    function votePowerOfAtIgnoringRevocation(address _owner, uint256 _blockNumber) external view returns(uint256);\n\n    /**\n     * @notice Get the delegation mode for '_who'. This mode determines whether vote power is\n     *  allocated by percentage or by explicit value. Once the delegation mode is set, \n     *  it never changes, even if all delegations are removed.\n     * @param _who The address to get delegation mode.\n     * @return delegation mode: 0 = NOTSET, 1 = PERCENTAGE, 2 = AMOUNT (i.e. explicit)\n     */\n    function delegationModeOf(address _who) external view returns(uint256);\n        \n    /**\n    * @notice Get current delegated vote power `_from` delegator delegated `_to` delegatee.\n    * @param _from Address of delegator\n    * @param _to Address of delegatee\n    * @return The delegated vote power.\n    */\n    function votePowerFromTo(address _from, address _to) external view returns(uint256);\n    \n    /**\n    * @notice Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\n    * @param _from Address of delegator\n    * @param _to Address of delegatee\n    * @param _blockNumber The block number at which to fetch.\n    * @return The delegated vote power.\n    */\n    function votePowerFromToAt(address _from, address _to, uint _blockNumber) external view returns(uint256);\n    \n    /**\n     * @notice Compute the current undelegated vote power of `_owner`\n     * @param _owner The address to get undelegated voting power.\n     * @return The unallocated vote power of `_owner`\n     */\n    function undelegatedVotePowerOf(address _owner) external view returns(uint256);\n    \n    /**\n     * @notice Get the undelegated vote power of `_owner` at given block.\n     * @param _owner The address to get undelegated voting power.\n     * @param _blockNumber The block number at which to fetch.\n     * @return The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)\n     */\n    function undelegatedVotePowerOfAt(address _owner, uint256 _blockNumber) external view returns(uint256);\n    \n    /**\n    * @notice Get the vote power delegation `delegationAddresses` \n    *  and `_bips` of `_who`. Returned in two separate positional arrays.\n    * @param _who The address to get delegations.\n    * @return _delegateAddresses Positional array of delegation addresses.\n    * @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n    * @return _count The number of delegates.\n    * @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\n    */\n    function delegatesOf(address _who)\n        external view \n        returns (\n            address[] memory _delegateAddresses,\n            uint256[] memory _bips,\n            uint256 _count, \n            uint256 _delegationMode\n        );\n        \n    /**\n    * @notice Get the vote power delegation `delegationAddresses` \n    *  and `pcts` of `_who`. Returned in two separate positional arrays.\n    * @param _who The address to get delegations.\n    * @param _blockNumber The block for which we want to know the delegations.\n    * @return _delegateAddresses Positional array of delegation addresses.\n    * @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n    * @return _count The number of delegates.\n    * @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\n    */\n    function delegatesOfAt(address _who, uint256 _blockNumber)\n        external view \n        returns (\n            address[] memory _delegateAddresses, \n            uint256[] memory _bips, \n            uint256 _count, \n            uint256 _delegationMode\n        );\n\n    /**\n     * Returns VPContract used for readonly operations (view methods).\n     * The only non-view method that might be called on it is `revokeDelegationAt`.\n     *\n     * @notice `readVotePowerContract` is almost always equal to `writeVotePowerContract`\n     * except during upgrade from one VPContract to a new version (which should happen\n     * rarely or never and will be anounced before).\n     *\n     * @notice You shouldn't call any methods on VPContract directly, all are exposed\n     * via VPToken (and state changing methods are forbidden from direct calls). \n     * This is the reason why this method returns `IVPContractEvents` - it should only be used\n     * for listening to events (`Revoke` only).\n     */\n    function readVotePowerContract() external view returns (IVPContractEvents);\n\n    /**\n     * Returns VPContract used for state changing operations (non-view methods).\n     * The only non-view method that might be called on it is `revokeDelegationAt`.\n     *\n     * @notice `writeVotePowerContract` is almost always equal to `readVotePowerContract`\n     * except during upgrade from one VPContract to a new version (which should happen\n     * rarely or never and will be anounced before). In the case of upgrade,\n     * `writeVotePowerContract` will be replaced first to establish delegations, and\n     * after some perio (e.g. after a reward epoch ends) `readVotePowerContract` will be set equal to it.\n     *\n     * @notice You shouldn't call any methods on VPContract directly, all are exposed\n     * via VPToken (and state changing methods are forbidden from direct calls). \n     * This is the reason why this method returns `IVPContractEvents` - it should only be used\n     * for listening to events (`Delegate` and `Revoke` only).\n     */\n    function writeVotePowerContract() external view returns (IVPContractEvents);\n    \n    /**\n     * When set, allows token owners to participate in governance voting\n     * and delegate governance vote power.\n     */\n    function governanceVotePower() external view returns (IGovernanceVotePower);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\ninterface IVPContractEvents {\n    /**\n     * Event triggered when an account delegates or undelegates another account. \n     * Definition: `votePowerFromTo(from, to)` is `changed` from `priorVotePower` to `newVotePower`.\n     * For undelegation, `newVotePower` is 0.\n     *\n     * Note: the event is always emitted from VPToken's `writeVotePowerContract`.\n     */\n    event Delegate(address indexed from, address indexed to, uint256 priorVotePower, uint256 newVotePower);\n    \n    /**\n     * Event triggered only when account `delegator` revokes delegation to `delegatee`\n     * for a single block in the past (typically the current vote block).\n     *\n     * Note: the event is always emitted from VPToken's `writeVotePowerContract` and/or `readVotePowerContract`.\n     */\n    event Revoke(address indexed delegator, address indexed delegatee, uint256 votePower, uint256 blockNumber);\n}\n"
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\npragma abicoder v2;\n\nimport \"./IPChainVotePower.sol\";\nimport \"./IPChainStakeMirrorVerifier.sol\";\n\n\n/**\n * Interface for the `PChainStakeMirror` contract.\n */\ninterface IPChainStakeMirror is IPChainVotePower {\n\n    /**\n     * Event emitted when max updates per block is set.\n     * @param maxUpdatesPerBlock new number of max updated per block\n     */\n    event MaxUpdatesPerBlockSet(uint256 maxUpdatesPerBlock);\n\n    /**\n     * Event emitted when the stake is confirmed.\n     * @param owner The address who opened the stake.\n     * @param nodeId Node id to which the stake was added.\n     * @param txHash Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\n     * @param amountWei Stake amount (in wei).\n     * @param pChainTxId P-chain transaction id.\n     */\n    event StakeConfirmed(\n        address indexed owner,\n        bytes20 indexed nodeId,\n        bytes32 indexed txHash,\n        uint256 amountWei,\n        bytes32 pChainTxId\n    );\n\n    /**\n     * Event emitted when the stake has ended.\n     * @param owner The address whose stake has ended.\n     * @param nodeId Node id from which the stake was removed.\n     * @param txHash Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\n     * @param amountWei Stake amount (in wei).\n     */\n    event StakeEnded(\n        address indexed owner,\n        bytes20 indexed nodeId,\n        bytes32 indexed txHash,\n        uint256 amountWei\n    );\n\n    /**\n     * Event emitted when the stake was revoked.\n     * @param owner The address whose stake has ended.\n     * @param nodeId Node id from which the stake was removed.\n     * @param txHash Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\n     * @param amountWei Stake amount (in wei).\n     */\n    event StakeRevoked(\n        address indexed owner,\n        bytes20 indexed nodeId,\n        bytes32 indexed txHash,\n        uint256 amountWei\n    );\n\n    /**\n     * Method for P-chain stake mirroring using `PChainStake` data and Merkle proof.\n     * @param _stakeData Information about P-chain stake.\n     * @param _merkleProof Merkle proof that should be used to prove the P-chain stake.\n     */\n    function mirrorStake(\n        IPChainStakeMirrorVerifier.PChainStake calldata _stakeData,\n        bytes32[] calldata _merkleProof\n    )\n        external;\n\n    /**\n     * Method for checking if active stake (stake start time <= block.timestamp < stake end time) was already mirrored.\n     * @param _txId P-chain stake transaction id.\n     * @param _inputAddress P-chain address that opened stake.\n     * @return True if stake is active and mirrored.\n     */\n    function isActiveStakeMirrored(bytes32 _txId, bytes20 _inputAddress) external view returns(bool);\n\n    /**\n     * Total amount of tokens at current block.\n     * @return The current total amount of tokens.\n     **/\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * Total amount of tokens at a specific `_blockNumber`.\n     * @param _blockNumber The block number when the totalSupply is queried.\n     * @return The total amount of tokens at `_blockNumber`.\n     **/\n    function totalSupplyAt(uint _blockNumber) external view returns(uint256);\n\n    /**\n     * Queries the token balance of `_owner` at current block.\n     * @param _owner The address from which the balance will be retrieved.\n     * @return The current balance.\n     **/\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /**\n     * Queries the token balance of `_owner` at a specific `_blockNumber`.\n     * @param _owner The address from which the balance will be retrieved.\n     * @param _blockNumber The block number when the balance is queried.\n     * @return The balance at `_blockNumber`.\n     **/\n    function balanceOfAt(address _owner, uint _blockNumber) external view returns (uint256);\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\npragma abicoder v2;\n\n/**\n * Interface with structure for P-chain stake mirror verifications.\n */\ninterface IPChainStakeMirrorVerifier {\n\n    /**\n     * Structure describing the P-chain stake.\n     */\n    struct PChainStake {\n        // Hash of the transaction on the underlying chain.\n        bytes32 txId;\n        // Type of the staking/delegation transaction: '0' for 'ADD_VALIDATOR_TX' and '1' for 'ADD_DELEGATOR_TX'.\n        uint8 stakingType;\n        // Input address that triggered the staking or delegation transaction.\n        // See https://support.avax.network/en/articles/4596397-what-is-an-address for address definition for P-chain.\n        bytes20 inputAddress;\n        // NodeID to which staking or delegation is done.\n        // For definitions, see https://github.com/ava-labs/avalanchego/blob/master/ids/node_id.go.\n        bytes20 nodeId;\n        // Start time of the staking/delegation in seconds (Unix epoch).\n        uint64 startTime;\n        // End time of the staking/delegation in seconds (Unix epoch).\n        uint64 endTime;\n        // Staked or delegated amount in Gwei (nano FLR).\n        uint64 weight;\n    }\n}\n"
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6 <0.9;\n\n/**\n * Interface for the vote power part of the `PChainStakeMirror` contract.\n */\ninterface IPChainVotePower {\n\n    /**\n     * Event triggered when a stake is confirmed or at the time it ends.\n     * Definition: `votePowerFromTo(owner, nodeId)` is `changed` from `priorVotePower` to `newVotePower`.\n     * @param owner The account that has changed the amount of vote power it is staking.\n     * @param nodeId The node id whose received vote power has changed.\n     * @param priorVotePower The vote power originally on that node id.\n     * @param newVotePower The new vote power that triggered this event.\n     */\n    event VotePowerChanged(\n        address indexed owner,\n        bytes20 indexed nodeId,\n        uint256 priorVotePower,\n        uint256 newVotePower\n    );\n\n    /**\n     * Emitted when a vote power cache entry is created.\n     * Allows history cleaners to track vote power cache cleanup opportunities off-chain.\n     * @param nodeId The node id whose vote power has just been cached.\n     * @param blockNumber The block number at which the vote power has been cached.\n     */\n    event VotePowerCacheCreated(bytes20 nodeId, uint256 blockNumber);\n\n    /**\n    * Get the vote power of `_owner` at block `_blockNumber` using cache.\n    *   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n    *   Can only be used if _blockNumber is in the past, otherwise reverts.\n    * @param _owner The node id to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_owner` at `_blockNumber`.\n    */\n    function votePowerOfAtCached(bytes20 _owner, uint256 _blockNumber) external returns(uint256);\n\n    /**\n    * Get the total vote power at block `_blockNumber` using cache.\n    *   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n    *   Can only be used if `_blockNumber` is in the past, otherwise reverts.\n    * @param _blockNumber The block number at which to fetch.\n    * @return The total vote power at the block (sum of all accounts' vote powers).\n    */\n    function totalVotePowerAtCached(uint256 _blockNumber) external returns(uint256);\n\n    /**\n     * Get the current total vote power.\n     * @return The current total vote power (sum of all accounts' vote powers).\n     */\n    function totalVotePower() external view returns(uint256);\n\n    /**\n    * Get the total vote power at block `_blockNumber`\n    * @param _blockNumber The block number at which to fetch.\n    * @return The total vote power at the block  (sum of all accounts' vote powers).\n    */\n    function totalVotePowerAt(uint _blockNumber) external view returns(uint256);\n\n    /**\n     * Get the amounts and node ids being staked to by a vote power owner.\n     * @param _owner The address being queried.\n     * @return _nodeIds Array of node ids.\n     * @return _amounts Array of staked amounts, for each node id.\n     */\n    function stakesOf(address _owner)\n        external view\n        returns (\n            bytes20[] memory _nodeIds,\n            uint256[] memory _amounts\n        );\n\n    /**\n     * Get the amounts and node ids being staked to by a vote power owner,\n     * at a given block.\n     * @param _owner The address being queried.\n     * @param _blockNumber The block number being queried.\n     * @return _nodeIds Array of node ids.\n     * @return _amounts Array of staked amounts, for each node id.\n     */\n    function stakesOfAt(\n        address _owner,\n        uint256 _blockNumber\n    )\n        external view\n        returns (\n            bytes20[] memory _nodeIds,\n            uint256[] memory _amounts\n        );\n\n    /**\n     * Get the current vote power of `_nodeId`.\n     * @param _nodeId The node id to get voting power.\n     * @return Current vote power of `_nodeId`.\n     */\n    function votePowerOf(bytes20 _nodeId) external view returns(uint256);\n\n    /**\n    * Get the vote power of `_nodeId` at block `_blockNumber`\n    * @param _nodeId The node id to get voting power.\n    * @param _blockNumber The block number at which to fetch.\n    * @return Vote power of `_nodeId` at `_blockNumber`.\n    */\n    function votePowerOfAt(bytes20 _nodeId, uint256 _blockNumber) external view returns(uint256);\n\n    /**\n    * Get current staked vote power from `_owner` staked to `_nodeId`.\n    * @param _owner Address of vote power owner.\n    * @param _nodeId Node id.\n    * @return The staked vote power.\n    */\n    function votePowerFromTo(address _owner, bytes20 _nodeId) external view returns(uint256);\n\n    /**\n    * Get current staked vote power from `_owner` staked to `_nodeId` at `_blockNumber`.\n    * @param _owner Address of vote power owner.\n    * @param _nodeId Node id.\n    * @param _blockNumber The block number at which to fetch.\n    * @return The staked vote power.\n    */\n    function votePowerFromToAt(address _owner, bytes20 _nodeId, uint _blockNumber) external view returns(uint256);\n\n    /**\n     * Return vote powers for several node ids in a batch.\n     * @param _nodeIds The list of node ids to fetch vote power of.\n     * @param _blockNumber The block number at which to fetch.\n     * @return A list of vote powers.\n     */\n    function batchVotePowerOfAt(\n        bytes20[] memory _nodeIds,\n        uint256 _blockNumber\n    ) external view returns(uint256[] memory);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol": {
				"IIFtso": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "natTurnout",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowNatTurnoutThresholdBIPS",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LowTurnout",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceEpochInitializedOnFtso",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "rewardedFtso",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowIQRRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highIQRRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowElasticBandRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highElasticBandRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IFtso.PriceFinalizationType",
									"name": "finalizationType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votePowerNat",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votePowerAsset",
									"type": "uint256"
								}
							],
							"name": "PriceRevealed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_firstEpochStartTs",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_submitPeriodSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_revealPeriodSeconds",
									"type": "uint256"
								}
							],
							"name": "activateFtso",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "active",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxVotePowerNatThresholdFraction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxVotePowerAssetThresholdFraction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lowAssetUSDThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_highAssetUSDThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_highAssetTurnoutThresholdBIPS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lowNatTurnoutThresholdBIPS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_elasticBandRewardBIPS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_elasticBandWidthPPM",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_trustedAddresses",
									"type": "address[]"
								}
							],
							"name": "configureEpochs",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deactivateFtso",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "epochsConfiguration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_maxVotePowerNatThresholdFraction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxVotePowerAssetThresholdFraction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lowAssetUSDThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_highAssetUSDThreshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_highAssetTurnoutThresholdBIPS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lowNatTurnoutThresholdBIPS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_elasticBandRewardBIPS",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_elasticBandWidthPPM",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_trustedAddresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "fallbackFinalizePriceEpoch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_returnRewardData",
									"type": "bool"
								}
							],
							"name": "finalizePriceEpoch",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_eligibleAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_natWeights",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_totalNatWeight",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "forceFinalizePriceEpoch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ftsoManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAsset",
							"outputs": [
								{
									"internalType": "contract IIVPToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAssetFtsos",
							"outputs": [
								{
									"internalType": "contract IIFtso[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentEpochId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_priceTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "enum IFtso.PriceFinalizationType",
									"name": "_priceFinalizationType",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_lastPriceEpochFinalizationTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "enum IFtso.PriceFinalizationType",
									"name": "_lastPriceEpochFinalizationType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceFromTrustedProviders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceWithDecimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetPriceUsdDecimals",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceWithDecimalsFromTrustedProviders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetPriceUsdDecimals",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentRandom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getEpochId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "getEpochPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "getEpochPriceForVoter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceEpochConfiguration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_firstEpochStartTs",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_submitPeriodSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_revealPeriodSeconds",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceEpochData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_epochSubmitEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_epochRevealEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_votePowerBlock",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_fallbackMode",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "getRandom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVoteWeightingParameters",
							"outputs": [
								{
									"internalType": "contract IIVPToken[]",
									"name": "_assets",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_assetMultipliers",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_totalVotePowerNat",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_totalVotePowerAsset",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetWeightRatio",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_votePowerBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_circulatingSupplyNat",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_fallbackMode",
									"type": "bool"
								}
							],
							"name": "initializeCurrentEpochStateForReveal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_wNatVP",
									"type": "uint256"
								}
							],
							"name": "revealPriceSubmitter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIVPToken",
									"name": "_asset",
									"type": "address"
								}
							],
							"name": "setAsset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIFtso[]",
									"name": "_assetFtsos",
									"type": "address[]"
								}
							],
							"name": "setAssetFtsos",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "setVotePowerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialPriceUSD",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialPriceTimestamp",
									"type": "uint256"
								}
							],
							"name": "updateInitialPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wNat",
							"outputs": [
								{
									"internalType": "contract IIVPToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "wNatVotePowerCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"epochsConfiguration()": {
								"returns": {
									"_elasticBandRewardBIPS": "          Hybrid reward band, where _elasticBandRewardBIPS goes to the  elastic band (prices within _elasticBandWidthPPM of the median)  and 10000 - elasticBandRewardBIPS to the IQR ",
									"_elasticBandWidthPPM": "            Prices within _elasticBandWidthPPM of median are rewarded",
									"_highAssetTurnoutThresholdBIPS": "  Threshold for high asset turnout",
									"_highAssetUSDThreshold": "          Threshold for high asset vote power",
									"_lowAssetUSDThreshold": "           Threshold for low asset vote power",
									"_lowNatTurnoutThresholdBIPS": "     Threshold for low nat turnout",
									"_maxVotePowerAssetThresholdFraction": "     High threshold for asset vote power per voter",
									"_maxVotePowerNatThresholdFraction": "       High threshold for native token vote power per voter",
									"_trustedAddresses": "               Trusted addresses - use their prices if low nat turnout is not achieved"
								}
							},
							"getAsset()": {
								"details": "Asset is null in case of multi-asset FTSO"
							},
							"getAssetFtsos()": {
								"details": "AssetFtsos is not null only in case of multi-asset FTSO"
							},
							"getCurrentPrice()": {
								"returns": {
									"_price": "              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "          Time when price was updated for the last time"
								}
							},
							"getCurrentPriceDetails()": {
								"returns": {
									"_lastPriceEpochFinalizationTimestamp": "    Time when last price epoch was finalized",
									"_lastPriceEpochFinalizationType": "         Finalization type of last finalized price epoch",
									"_price": "                                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_priceFinalizationType": "                  Finalization type when price was updated for the last time",
									"_priceTimestamp": "                         Time when price was updated for the last time"
								}
							},
							"getCurrentPriceFromTrustedProviders()": {
								"returns": {
									"_price": "              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "          Time when price was updated for the last time"
								}
							},
							"getCurrentPriceWithDecimals()": {
								"returns": {
									"_assetPriceUsdDecimals": "  Number of decimals used for USD price",
									"_price": "                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "              Time when price was updated for the last time"
								}
							},
							"getCurrentPriceWithDecimalsFromTrustedProviders()": {
								"returns": {
									"_assetPriceUsdDecimals": "  Number of decimals used for USD price",
									"_price": "                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "              Time when price was updated for the last time"
								}
							},
							"getEpochId(uint256)": {
								"params": {
									"_timestamp": "Timestamp as seconds from unix epoch"
								}
							},
							"getEpochPrice(uint256)": {
								"params": {
									"_epochId": "Id of the epoch"
								},
								"returns": {
									"_0": "Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"
								}
							},
							"getEpochPriceForVoter(uint256,address)": {
								"params": {
									"_epochId": "Id of the epoch",
									"_voter": "Address of the voter"
								},
								"returns": {
									"_0": "Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"
								}
							},
							"getPriceEpochConfiguration()": {
								"returns": {
									"_firstEpochStartTs": "          First epoch start timestamp",
									"_revealPeriodSeconds": "        Reveal period in seconds",
									"_submitPeriodSeconds": "        Submit period in seconds"
								}
							},
							"getPriceEpochData()": {
								"details": "half-closed intervals - end time not included",
								"returns": {
									"_epochId": "                Current epoch id",
									"_epochRevealEndTime": "     End time of the current epoch price reveal as seconds from unix epoch",
									"_epochSubmitEndTime": "     End time of the current epoch price submission as seconds from unix epoch",
									"_fallbackMode": "           Current epoch in fallback mode - only votes from trusted addresses will be used",
									"_votePowerBlock": "         Vote power block for the current epoch"
								}
							},
							"getRandom(uint256)": {
								"params": {
									"_epochId": "Id of the epoch"
								}
							},
							"getVoteWeightingParameters()": {
								"returns": {
									"_assetMultipliers": "       weight of each asset in (multiasset) ftso, mutiplied by TERA",
									"_assetWeightRatio": "       ratio of combined asset vp vs. native token vp (in BIPS)",
									"_assets": "                 the list of Assets that are accounted in vote",
									"_totalVotePowerAsset": "    total combined asset vote power at block",
									"_totalVotePowerNat": "      total native token vote power at block",
									"_votePowerBlock": "         vote powewr block for given epoch"
								}
							},
							"revealPriceSubmitter(address,uint256,uint256,uint256)": {
								"params": {
									"_epochId": "Id of the epoch in which the price hash was submitted",
									"_price": "Submitted price in USD",
									"_voter": "Voter address"
								}
							},
							"wNatVotePowerCached(address,uint256)": {
								"params": {
									"_epochId": "Id of the epoch in which the price hash was submitted",
									"_voter": "Voter address"
								},
								"returns": {
									"_0": "wNat vote power"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"activateFtso(uint256,uint256,uint256)": "2f0a6f3c",
							"active()": "02fb0c5e",
							"configureEpochs(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address[])": "5a3c9d8e",
							"deactivateFtso()": "555989da",
							"epochsConfiguration()": "e3749e0c",
							"fallbackFinalizePriceEpoch(uint256)": "4afd5102",
							"finalizePriceEpoch(uint256,bool)": "40462a2d",
							"forceFinalizePriceEpoch(uint256)": "974d7a6b",
							"ftsoManager()": "11a7aaaa",
							"getAsset()": "5c222bad",
							"getAssetFtsos()": "18931c35",
							"getCurrentEpochId()": "a29a839f",
							"getCurrentPrice()": "eb91d37e",
							"getCurrentPriceDetails()": "040d73b8",
							"getCurrentPriceFromTrustedProviders()": "af52df08",
							"getCurrentPriceWithDecimals()": "65f5cd86",
							"getCurrentPriceWithDecimalsFromTrustedProviders()": "3cacb3ae",
							"getCurrentRandom()": "d89601fd",
							"getEpochId(uint256)": "5303548b",
							"getEpochPrice(uint256)": "7d1d6f12",
							"getEpochPriceForVoter(uint256,address)": "c5d8b9e7",
							"getPriceEpochConfiguration()": "144e1591",
							"getPriceEpochData()": "e3b3a3b3",
							"getRandom(uint256)": "cd4b6914",
							"getVoteWeightingParameters()": "8357d08c",
							"initializeCurrentEpochStateForReveal(uint256,bool)": "f670ebe3",
							"revealPriceSubmitter(address,uint256,uint256,uint256)": "c1f6c36e",
							"setAsset(address)": "d0d552dd",
							"setAssetFtsos(address[])": "131fdee2",
							"setVotePowerBlock(uint256)": "e536f396",
							"symbol()": "95d89b41",
							"updateInitialPrice(uint256,uint256)": "306ba253",
							"wNat()": "9edbf007",
							"wNatVotePowerCached(address,uint256)": "f72cab28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"natTurnout\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowNatTurnoutThresholdBIPS\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LowTurnout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceEpochInitializedOnFtso\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"rewardedFtso\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowIQRRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highIQRRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowElasticBandRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highElasticBandRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IFtso.PriceFinalizationType\",\"name\":\"finalizationType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votePowerNat\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votePowerAsset\",\"type\":\"uint256\"}],\"name\":\"PriceRevealed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstEpochStartTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_submitPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"activateFtso\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVotePowerNatThresholdFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxVotePowerAssetThresholdFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lowAssetUSDThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_highAssetUSDThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_highAssetTurnoutThresholdBIPS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lowNatTurnoutThresholdBIPS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_elasticBandRewardBIPS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_elasticBandWidthPPM\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_trustedAddresses\",\"type\":\"address[]\"}],\"name\":\"configureEpochs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deactivateFtso\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochsConfiguration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxVotePowerNatThresholdFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxVotePowerAssetThresholdFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lowAssetUSDThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_highAssetUSDThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_highAssetTurnoutThresholdBIPS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lowNatTurnoutThresholdBIPS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_elasticBandRewardBIPS\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_elasticBandWidthPPM\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_trustedAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"fallbackFinalizePriceEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_returnRewardData\",\"type\":\"bool\"}],\"name\":\"finalizePriceEpoch\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_eligibleAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_natWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_totalNatWeight\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"forceFinalizePriceEpoch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ftsoManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAsset\",\"outputs\":[{\"internalType\":\"contract IIVPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssetFtsos\",\"outputs\":[{\"internalType\":\"contract IIFtso[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum IFtso.PriceFinalizationType\",\"name\":\"_priceFinalizationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_lastPriceEpochFinalizationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum IFtso.PriceFinalizationType\",\"name\":\"_lastPriceEpochFinalizationType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceFromTrustedProviders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceWithDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetPriceUsdDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceWithDecimalsFromTrustedProviders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetPriceUsdDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getEpochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"getEpochPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getEpochPriceForVoter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceEpochConfiguration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstEpochStartTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_submitPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealPeriodSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceEpochData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochSubmitEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochRevealEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votePowerBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_fallbackMode\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVoteWeightingParameters\",\"outputs\":[{\"internalType\":\"contract IIVPToken[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_assetMultipliers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_totalVotePowerNat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalVotePowerAsset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetWeightRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votePowerBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_circulatingSupplyNat\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_fallbackMode\",\"type\":\"bool\"}],\"name\":\"initializeCurrentEpochStateForReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wNatVP\",\"type\":\"uint256\"}],\"name\":\"revealPriceSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIVPToken\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"setAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIFtso[]\",\"name\":\"_assetFtsos\",\"type\":\"address[]\"}],\"name\":\"setAssetFtsos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setVotePowerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialPriceUSD\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPriceTimestamp\",\"type\":\"uint256\"}],\"name\":\"updateInitialPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wNat\",\"outputs\":[{\"internalType\":\"contract IIVPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"wNatVotePowerCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"epochsConfiguration()\":{\"returns\":{\"_elasticBandRewardBIPS\":\"          Hybrid reward band, where _elasticBandRewardBIPS goes to the  elastic band (prices within _elasticBandWidthPPM of the median)  and 10000 - elasticBandRewardBIPS to the IQR \",\"_elasticBandWidthPPM\":\"            Prices within _elasticBandWidthPPM of median are rewarded\",\"_highAssetTurnoutThresholdBIPS\":\"  Threshold for high asset turnout\",\"_highAssetUSDThreshold\":\"          Threshold for high asset vote power\",\"_lowAssetUSDThreshold\":\"           Threshold for low asset vote power\",\"_lowNatTurnoutThresholdBIPS\":\"     Threshold for low nat turnout\",\"_maxVotePowerAssetThresholdFraction\":\"     High threshold for asset vote power per voter\",\"_maxVotePowerNatThresholdFraction\":\"       High threshold for native token vote power per voter\",\"_trustedAddresses\":\"               Trusted addresses - use their prices if low nat turnout is not achieved\"}},\"getAsset()\":{\"details\":\"Asset is null in case of multi-asset FTSO\"},\"getAssetFtsos()\":{\"details\":\"AssetFtsos is not null only in case of multi-asset FTSO\"},\"getCurrentPrice()\":{\"returns\":{\"_price\":\"              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"          Time when price was updated for the last time\"}},\"getCurrentPriceDetails()\":{\"returns\":{\"_lastPriceEpochFinalizationTimestamp\":\"    Time when last price epoch was finalized\",\"_lastPriceEpochFinalizationType\":\"         Finalization type of last finalized price epoch\",\"_price\":\"                                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_priceFinalizationType\":\"                  Finalization type when price was updated for the last time\",\"_priceTimestamp\":\"                         Time when price was updated for the last time\"}},\"getCurrentPriceFromTrustedProviders()\":{\"returns\":{\"_price\":\"              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"          Time when price was updated for the last time\"}},\"getCurrentPriceWithDecimals()\":{\"returns\":{\"_assetPriceUsdDecimals\":\"  Number of decimals used for USD price\",\"_price\":\"                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"              Time when price was updated for the last time\"}},\"getCurrentPriceWithDecimalsFromTrustedProviders()\":{\"returns\":{\"_assetPriceUsdDecimals\":\"  Number of decimals used for USD price\",\"_price\":\"                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"              Time when price was updated for the last time\"}},\"getEpochId(uint256)\":{\"params\":{\"_timestamp\":\"Timestamp as seconds from unix epoch\"}},\"getEpochPrice(uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch\"},\"returns\":{\"_0\":\"Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\"}},\"getEpochPriceForVoter(uint256,address)\":{\"params\":{\"_epochId\":\"Id of the epoch\",\"_voter\":\"Address of the voter\"},\"returns\":{\"_0\":\"Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\"}},\"getPriceEpochConfiguration()\":{\"returns\":{\"_firstEpochStartTs\":\"          First epoch start timestamp\",\"_revealPeriodSeconds\":\"        Reveal period in seconds\",\"_submitPeriodSeconds\":\"        Submit period in seconds\"}},\"getPriceEpochData()\":{\"details\":\"half-closed intervals - end time not included\",\"returns\":{\"_epochId\":\"                Current epoch id\",\"_epochRevealEndTime\":\"     End time of the current epoch price reveal as seconds from unix epoch\",\"_epochSubmitEndTime\":\"     End time of the current epoch price submission as seconds from unix epoch\",\"_fallbackMode\":\"           Current epoch in fallback mode - only votes from trusted addresses will be used\",\"_votePowerBlock\":\"         Vote power block for the current epoch\"}},\"getRandom(uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch\"}},\"getVoteWeightingParameters()\":{\"returns\":{\"_assetMultipliers\":\"       weight of each asset in (multiasset) ftso, mutiplied by TERA\",\"_assetWeightRatio\":\"       ratio of combined asset vp vs. native token vp (in BIPS)\",\"_assets\":\"                 the list of Assets that are accounted in vote\",\"_totalVotePowerAsset\":\"    total combined asset vote power at block\",\"_totalVotePowerNat\":\"      total native token vote power at block\",\"_votePowerBlock\":\"         vote powewr block for given epoch\"}},\"revealPriceSubmitter(address,uint256,uint256,uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch in which the price hash was submitted\",\"_price\":\"Submitted price in USD\",\"_voter\":\"Voter address\"}},\"wNatVotePowerCached(address,uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch in which the price hash was submitted\",\"_voter\":\"Voter address\"},\"returns\":{\"_0\":\"wNat vote power\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"active()\":{\"notice\":\"Returns if FTSO is active\"},\"epochsConfiguration()\":{\"notice\":\"Returns current configuration of epoch state\"},\"finalizePriceEpoch(uint256,bool)\":{\"notice\":\"function finalizePriceReveal called by reward manager only on correct timing. if price reveal period for epoch x ended. finalize. iterate list of price submissions find weighted median find adjucant 50% of price submissions. Allocate reward for any price submission which is same as a \\\"winning\\\" submission\"},\"ftsoManager()\":{\"notice\":\"Returns ftso manager address\"},\"getAsset()\":{\"notice\":\"Returns the FTSO asset\"},\"getAssetFtsos()\":{\"notice\":\"Returns the Asset FTSOs\"},\"getCurrentEpochId()\":{\"notice\":\"Returns current epoch id\"},\"getCurrentPrice()\":{\"notice\":\"Returns current asset price\"},\"getCurrentPriceDetails()\":{\"notice\":\"Returns current asset price details\"},\"getCurrentPriceFromTrustedProviders()\":{\"notice\":\"Returns current asset price calculated from trusted providers\"},\"getCurrentPriceWithDecimals()\":{\"notice\":\"Returns current asset price and number of decimals\"},\"getCurrentPriceWithDecimalsFromTrustedProviders()\":{\"notice\":\"Returns current asset price calculated from trusted providers and number of decimals\"},\"getCurrentRandom()\":{\"notice\":\"Returns current random number\"},\"getEpochId(uint256)\":{\"notice\":\"Returns id of the epoch which was opened for price submission at the specified timestamp\"},\"getEpochPrice(uint256)\":{\"notice\":\"Returns asset price consented in specific epoch\"},\"getEpochPriceForVoter(uint256,address)\":{\"notice\":\"Returns asset price submitted by voter in specific epoch\"},\"getPriceEpochConfiguration()\":{\"notice\":\"Returns current epoch data\"},\"getPriceEpochData()\":{\"notice\":\"Returns current epoch data\"},\"getRandom(uint256)\":{\"notice\":\"Returns random number of the specified epoch\"},\"getVoteWeightingParameters()\":{\"notice\":\"Returns parameters necessary for approximately replicating vote weighting.\"},\"revealPriceSubmitter(address,uint256,uint256,uint256)\":{\"notice\":\"Reveals submitted price during epoch reveal period - only price submitterThe hash of _price and _random must be equal to the submitted hashEmits PriceRevealed event\"},\"symbol()\":{\"notice\":\"Returns the FTSO symbol\"},\"wNatVotePowerCached(address,uint256)\":{\"notice\":\"Get (and cache) wNat vote power for specified voter and given epoch id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol\":\"IIFtso\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol\":{\"keccak256\":\"0xd245b3c083496b3539224dc707381db5a5e8a49a5012d370b34514caefa3415d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bfe225cca2e036b4c9e460e9fd7c3f568e9574d879f81c038309563987e2348\",\"dweb:/ipfs/QmUeLdoDMG7eyQSHzaHqXwVpEYB4Nd3FpvoDjpXckDs1dq\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol\":{\"keccak256\":\"0xd015bc43b8a22afaba50c42a56409df0d81172845dabc124a3d37b3b0bbd4df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc305f048820c05956ec05fa246ec9070f9d813b43935356e7fe35969f49fc02\",\"dweb:/ipfs/QmaUJ42ZFzcRgy6GQtstkXMk9UgL5ERZx2V9HueXApgWBW\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol\":{\"keccak256\":\"0xfae54442fb489dccc5f0a0a6f8d946c9fdebceece98fcb087c5998fa1363ff30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53d8b87f403e7d868ed832f8cb965a440c8c32d20699a07f0a3f7bb2abeff2b5\",\"dweb:/ipfs/QmTYEoSzDJyhiJyY2AhnirXD6F737mzSVbqbnr6g4Fa7kT\"]},\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":{\"keccak256\":\"0x8c70a1ae9079bb9d29c8e2dde781f546b6cb621f0b7cc943b9cbcbd52718bb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e89abe97c65481a1cacb59abcde6d18b127a89ed46f99402c30c6477ea0722\",\"dweb:/ipfs/Qmd6i71hUPHR11U1U8EvDwJyEg4xUZhLbDe7D4Z7LLrAZx\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol\":{\"keccak256\":\"0x5388cd6705f08a9d7a82be3d4c1aea3266df20eb5263b9f5ecf95e73338dc595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7a9b55b0d6dd4d053d702f897ea5272695006ae0ca25f3b3a1ccbf4e604fd9\",\"dweb:/ipfs/QmP1HtdwBY9ZJvDAQTEDZzCNBTrS2Rdk7QRy3An6PLMjd5\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol\":{\"keccak256\":\"0x6eb8619a51e0e00a93b32055e4f43d64f050b129e31bf0e161584d79cfbc5dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5b8f39e1cb4f5a861e6468b4340ee57272d329488340fac71418e8c9936984\",\"dweb:/ipfs/QmdKDZkCAEjMeL233hsFTvGLG6rZzn6XVNnopKLV2iz4g8\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol\":{\"keccak256\":\"0x49a647d1e8c394320c337b09f14b0ca70f43b0a1327233ddd9b8dcf7f005f92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb712e00e5801b8f1a1d2c05d4e46556bac15e227df7e21cd5c80ad1cc16192d\",\"dweb:/ipfs/QmUAGmvn65u4R165gPMbNoJwVFicCtAC2Ce6Y3f8PpTbTw\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"active()": {
								"notice": "Returns if FTSO is active"
							},
							"epochsConfiguration()": {
								"notice": "Returns current configuration of epoch state"
							},
							"finalizePriceEpoch(uint256,bool)": {
								"notice": "function finalizePriceReveal called by reward manager only on correct timing. if price reveal period for epoch x ended. finalize. iterate list of price submissions find weighted median find adjucant 50% of price submissions. Allocate reward for any price submission which is same as a \"winning\" submission"
							},
							"ftsoManager()": {
								"notice": "Returns ftso manager address"
							},
							"getAsset()": {
								"notice": "Returns the FTSO asset"
							},
							"getAssetFtsos()": {
								"notice": "Returns the Asset FTSOs"
							},
							"getCurrentEpochId()": {
								"notice": "Returns current epoch id"
							},
							"getCurrentPrice()": {
								"notice": "Returns current asset price"
							},
							"getCurrentPriceDetails()": {
								"notice": "Returns current asset price details"
							},
							"getCurrentPriceFromTrustedProviders()": {
								"notice": "Returns current asset price calculated from trusted providers"
							},
							"getCurrentPriceWithDecimals()": {
								"notice": "Returns current asset price and number of decimals"
							},
							"getCurrentPriceWithDecimalsFromTrustedProviders()": {
								"notice": "Returns current asset price calculated from trusted providers and number of decimals"
							},
							"getCurrentRandom()": {
								"notice": "Returns current random number"
							},
							"getEpochId(uint256)": {
								"notice": "Returns id of the epoch which was opened for price submission at the specified timestamp"
							},
							"getEpochPrice(uint256)": {
								"notice": "Returns asset price consented in specific epoch"
							},
							"getEpochPriceForVoter(uint256,address)": {
								"notice": "Returns asset price submitted by voter in specific epoch"
							},
							"getPriceEpochConfiguration()": {
								"notice": "Returns current epoch data"
							},
							"getPriceEpochData()": {
								"notice": "Returns current epoch data"
							},
							"getRandom(uint256)": {
								"notice": "Returns random number of the specified epoch"
							},
							"getVoteWeightingParameters()": {
								"notice": "Returns parameters necessary for approximately replicating vote weighting."
							},
							"revealPriceSubmitter(address,uint256,uint256,uint256)": {
								"notice": "Reveals submitted price during epoch reveal period - only price submitterThe hash of _price and _random must be equal to the submitted hashEmits PriceRevealed event"
							},
							"symbol()": {
								"notice": "Returns the FTSO symbol"
							},
							"wNatVotePowerCached(address,uint256)": {
								"notice": "Get (and cache) wNat vote power for specified voter and given epoch id"
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol": {
				"IFtsoGenesis": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_wNatVP",
									"type": "uint256"
								}
							],
							"name": "revealPriceSubmitter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "wNatVotePowerCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"revealPriceSubmitter(address,uint256,uint256,uint256)": {
								"params": {
									"_epochId": "Id of the epoch in which the price hash was submitted",
									"_price": "Submitted price in USD",
									"_voter": "Voter address"
								}
							},
							"wNatVotePowerCached(address,uint256)": {
								"params": {
									"_epochId": "Id of the epoch in which the price hash was submitted",
									"_voter": "Voter address"
								},
								"returns": {
									"_0": "wNat vote power"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"revealPriceSubmitter(address,uint256,uint256,uint256)": "c1f6c36e",
							"wNatVotePowerCached(address,uint256)": "f72cab28"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_wNatVP\",\"type\":\"uint256\"}],\"name\":\"revealPriceSubmitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"wNatVotePowerCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"revealPriceSubmitter(address,uint256,uint256,uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch in which the price hash was submitted\",\"_price\":\"Submitted price in USD\",\"_voter\":\"Voter address\"}},\"wNatVotePowerCached(address,uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch in which the price hash was submitted\",\"_voter\":\"Voter address\"},\"returns\":{\"_0\":\"wNat vote power\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revealPriceSubmitter(address,uint256,uint256,uint256)\":{\"notice\":\"Reveals submitted price during epoch reveal period - only price submitterThe hash of _price and _random must be equal to the submitted hashEmits PriceRevealed event\"},\"wNatVotePowerCached(address,uint256)\":{\"notice\":\"Get (and cache) wNat vote power for specified voter and given epoch id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol\":\"IFtsoGenesis\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol\":{\"keccak256\":\"0xd015bc43b8a22afaba50c42a56409df0d81172845dabc124a3d37b3b0bbd4df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc305f048820c05956ec05fa246ec9070f9d813b43935356e7fe35969f49fc02\",\"dweb:/ipfs/QmaUJ42ZFzcRgy6GQtstkXMk9UgL5ERZx2V9HueXApgWBW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revealPriceSubmitter(address,uint256,uint256,uint256)": {
								"notice": "Reveals submitted price during epoch reveal period - only price submitterThe hash of _price and _random must be equal to the submitted hashEmits PriceRevealed event"
							},
							"wNatVotePowerCached(address,uint256)": {
								"notice": "Get (and cache) wNat vote power for specified voter and given epoch id"
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol": {
				"IFtsoRegistryGenesis": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_indices",
									"type": "uint256[]"
								}
							],
							"name": "getFtsos",
							"outputs": [
								{
									"internalType": "contract IFtsoGenesis[]",
									"name": "_ftsos",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getFtsos(uint256[])": "9cb47538"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"name\":\"getFtsos\",\"outputs\":[{\"internalType\":\"contract IFtsoGenesis[]\",\"name\":\"_ftsos\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol\":\"IFtsoRegistryGenesis\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol\":{\"keccak256\":\"0xd015bc43b8a22afaba50c42a56409df0d81172845dabc124a3d37b3b0bbd4df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc305f048820c05956ec05fa246ec9070f9d813b43935356e7fe35969f49fc02\",\"dweb:/ipfs/QmaUJ42ZFzcRgy6GQtstkXMk9UgL5ERZx2V9HueXApgWBW\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol\":{\"keccak256\":\"0x4765fdcb22dcc64c015d02c019f0ddce8d8b36111160fd4160a3d94ea4f370a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0baa5b9b24e3049bcf8de78d5dbdb778d53f5585fbe479550bfdcef2ed676257\",\"dweb:/ipfs/Qmd8Eby81zX1YptGo5E2zAraTFo2NGLRCL9XuyU7YSsaqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol": {
				"IFtso": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "natTurnout",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowNatTurnoutThresholdBIPS",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "LowTurnout",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceEpochInitializedOnFtso",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "rewardedFtso",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowIQRRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highIQRRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lowElasticBandRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "highElasticBandRewardPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IFtso.PriceFinalizationType",
									"name": "finalizationType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "PriceFinalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "epochId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votePowerNat",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votePowerAsset",
									"type": "uint256"
								}
							],
							"name": "PriceRevealed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "active",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentEpochId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_priceTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "enum IFtso.PriceFinalizationType",
									"name": "_priceFinalizationType",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_lastPriceEpochFinalizationTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "enum IFtso.PriceFinalizationType",
									"name": "_lastPriceEpochFinalizationType",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceFromTrustedProviders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceWithDecimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetPriceUsdDecimals",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentPriceWithDecimalsFromTrustedProviders",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetPriceUsdDecimals",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentRandom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"name": "getEpochId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "getEpochPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_voter",
									"type": "address"
								}
							],
							"name": "getEpochPriceForVoter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceEpochConfiguration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_firstEpochStartTs",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_submitPeriodSeconds",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_revealPeriodSeconds",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPriceEpochData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_epochSubmitEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_epochRevealEndTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_votePowerBlock",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_fallbackMode",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_epochId",
									"type": "uint256"
								}
							],
							"name": "getRandom",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getCurrentPrice()": {
								"returns": {
									"_price": "              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "          Time when price was updated for the last time"
								}
							},
							"getCurrentPriceDetails()": {
								"returns": {
									"_lastPriceEpochFinalizationTimestamp": "    Time when last price epoch was finalized",
									"_lastPriceEpochFinalizationType": "         Finalization type of last finalized price epoch",
									"_price": "                                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_priceFinalizationType": "                  Finalization type when price was updated for the last time",
									"_priceTimestamp": "                         Time when price was updated for the last time"
								}
							},
							"getCurrentPriceFromTrustedProviders()": {
								"returns": {
									"_price": "              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "          Time when price was updated for the last time"
								}
							},
							"getCurrentPriceWithDecimals()": {
								"returns": {
									"_assetPriceUsdDecimals": "  Number of decimals used for USD price",
									"_price": "                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "              Time when price was updated for the last time"
								}
							},
							"getCurrentPriceWithDecimalsFromTrustedProviders()": {
								"returns": {
									"_assetPriceUsdDecimals": "  Number of decimals used for USD price",
									"_price": "                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS",
									"_timestamp": "              Time when price was updated for the last time"
								}
							},
							"getEpochId(uint256)": {
								"params": {
									"_timestamp": "Timestamp as seconds from unix epoch"
								}
							},
							"getEpochPrice(uint256)": {
								"params": {
									"_epochId": "Id of the epoch"
								},
								"returns": {
									"_0": "Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"
								}
							},
							"getEpochPriceForVoter(uint256,address)": {
								"params": {
									"_epochId": "Id of the epoch",
									"_voter": "Address of the voter"
								},
								"returns": {
									"_0": "Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"
								}
							},
							"getPriceEpochConfiguration()": {
								"returns": {
									"_firstEpochStartTs": "          First epoch start timestamp",
									"_revealPeriodSeconds": "        Reveal period in seconds",
									"_submitPeriodSeconds": "        Submit period in seconds"
								}
							},
							"getPriceEpochData()": {
								"details": "half-closed intervals - end time not included",
								"returns": {
									"_epochId": "                Current epoch id",
									"_epochRevealEndTime": "     End time of the current epoch price reveal as seconds from unix epoch",
									"_epochSubmitEndTime": "     End time of the current epoch price submission as seconds from unix epoch",
									"_fallbackMode": "           Current epoch in fallback mode - only votes from trusted addresses will be used",
									"_votePowerBlock": "         Vote power block for the current epoch"
								}
							},
							"getRandom(uint256)": {
								"params": {
									"_epochId": "Id of the epoch"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"active()": "02fb0c5e",
							"getCurrentEpochId()": "a29a839f",
							"getCurrentPrice()": "eb91d37e",
							"getCurrentPriceDetails()": "040d73b8",
							"getCurrentPriceFromTrustedProviders()": "af52df08",
							"getCurrentPriceWithDecimals()": "65f5cd86",
							"getCurrentPriceWithDecimalsFromTrustedProviders()": "3cacb3ae",
							"getCurrentRandom()": "d89601fd",
							"getEpochId(uint256)": "5303548b",
							"getEpochPrice(uint256)": "7d1d6f12",
							"getEpochPriceForVoter(uint256,address)": "c5d8b9e7",
							"getPriceEpochConfiguration()": "144e1591",
							"getPriceEpochData()": "e3b3a3b3",
							"getRandom(uint256)": "cd4b6914",
							"symbol()": "95d89b41"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"natTurnout\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowNatTurnoutThresholdBIPS\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"LowTurnout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceEpochInitializedOnFtso\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"rewardedFtso\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowIQRRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highIQRRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lowElasticBandRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"highElasticBandRewardPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IFtso.PriceFinalizationType\",\"name\":\"finalizationType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"PriceFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votePowerNat\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votePowerAsset\",\"type\":\"uint256\"}],\"name\":\"PriceRevealed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEpochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum IFtso.PriceFinalizationType\",\"name\":\"_priceFinalizationType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_lastPriceEpochFinalizationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"enum IFtso.PriceFinalizationType\",\"name\":\"_lastPriceEpochFinalizationType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceFromTrustedProviders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceWithDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetPriceUsdDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPriceWithDecimalsFromTrustedProviders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetPriceUsdDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getEpochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"getEpochPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"getEpochPriceForVoter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceEpochConfiguration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_firstEpochStartTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_submitPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealPeriodSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceEpochData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochSubmitEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_epochRevealEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votePowerBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_fallbackMode\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_epochId\",\"type\":\"uint256\"}],\"name\":\"getRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCurrentPrice()\":{\"returns\":{\"_price\":\"              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"          Time when price was updated for the last time\"}},\"getCurrentPriceDetails()\":{\"returns\":{\"_lastPriceEpochFinalizationTimestamp\":\"    Time when last price epoch was finalized\",\"_lastPriceEpochFinalizationType\":\"         Finalization type of last finalized price epoch\",\"_price\":\"                                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_priceFinalizationType\":\"                  Finalization type when price was updated for the last time\",\"_priceTimestamp\":\"                         Time when price was updated for the last time\"}},\"getCurrentPriceFromTrustedProviders()\":{\"returns\":{\"_price\":\"              Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"          Time when price was updated for the last time\"}},\"getCurrentPriceWithDecimals()\":{\"returns\":{\"_assetPriceUsdDecimals\":\"  Number of decimals used for USD price\",\"_price\":\"                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"              Time when price was updated for the last time\"}},\"getCurrentPriceWithDecimalsFromTrustedProviders()\":{\"returns\":{\"_assetPriceUsdDecimals\":\"  Number of decimals used for USD price\",\"_price\":\"                  Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\",\"_timestamp\":\"              Time when price was updated for the last time\"}},\"getEpochId(uint256)\":{\"params\":{\"_timestamp\":\"Timestamp as seconds from unix epoch\"}},\"getEpochPrice(uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch\"},\"returns\":{\"_0\":\"Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\"}},\"getEpochPriceForVoter(uint256,address)\":{\"params\":{\"_epochId\":\"Id of the epoch\",\"_voter\":\"Address of the voter\"},\"returns\":{\"_0\":\"Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\"}},\"getPriceEpochConfiguration()\":{\"returns\":{\"_firstEpochStartTs\":\"          First epoch start timestamp\",\"_revealPeriodSeconds\":\"        Reveal period in seconds\",\"_submitPeriodSeconds\":\"        Submit period in seconds\"}},\"getPriceEpochData()\":{\"details\":\"half-closed intervals - end time not included\",\"returns\":{\"_epochId\":\"                Current epoch id\",\"_epochRevealEndTime\":\"     End time of the current epoch price reveal as seconds from unix epoch\",\"_epochSubmitEndTime\":\"     End time of the current epoch price submission as seconds from unix epoch\",\"_fallbackMode\":\"           Current epoch in fallback mode - only votes from trusted addresses will be used\",\"_votePowerBlock\":\"         Vote power block for the current epoch\"}},\"getRandom(uint256)\":{\"params\":{\"_epochId\":\"Id of the epoch\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"active()\":{\"notice\":\"Returns if FTSO is active\"},\"getCurrentEpochId()\":{\"notice\":\"Returns current epoch id\"},\"getCurrentPrice()\":{\"notice\":\"Returns current asset price\"},\"getCurrentPriceDetails()\":{\"notice\":\"Returns current asset price details\"},\"getCurrentPriceFromTrustedProviders()\":{\"notice\":\"Returns current asset price calculated from trusted providers\"},\"getCurrentPriceWithDecimals()\":{\"notice\":\"Returns current asset price and number of decimals\"},\"getCurrentPriceWithDecimalsFromTrustedProviders()\":{\"notice\":\"Returns current asset price calculated from trusted providers and number of decimals\"},\"getCurrentRandom()\":{\"notice\":\"Returns current random number\"},\"getEpochId(uint256)\":{\"notice\":\"Returns id of the epoch which was opened for price submission at the specified timestamp\"},\"getEpochPrice(uint256)\":{\"notice\":\"Returns asset price consented in specific epoch\"},\"getEpochPriceForVoter(uint256,address)\":{\"notice\":\"Returns asset price submitted by voter in specific epoch\"},\"getPriceEpochConfiguration()\":{\"notice\":\"Returns current epoch data\"},\"getPriceEpochData()\":{\"notice\":\"Returns current epoch data\"},\"getRandom(uint256)\":{\"notice\":\"Returns random number of the specified epoch\"},\"symbol()\":{\"notice\":\"Returns the FTSO symbol\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol\":\"IFtso\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol\":{\"keccak256\":\"0xfae54442fb489dccc5f0a0a6f8d946c9fdebceece98fcb087c5998fa1363ff30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53d8b87f403e7d868ed832f8cb965a440c8c32d20699a07f0a3f7bb2abeff2b5\",\"dweb:/ipfs/QmTYEoSzDJyhiJyY2AhnirXD6F737mzSVbqbnr6g4Fa7kT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"active()": {
								"notice": "Returns if FTSO is active"
							},
							"getCurrentEpochId()": {
								"notice": "Returns current epoch id"
							},
							"getCurrentPrice()": {
								"notice": "Returns current asset price"
							},
							"getCurrentPriceDetails()": {
								"notice": "Returns current asset price details"
							},
							"getCurrentPriceFromTrustedProviders()": {
								"notice": "Returns current asset price calculated from trusted providers"
							},
							"getCurrentPriceWithDecimals()": {
								"notice": "Returns current asset price and number of decimals"
							},
							"getCurrentPriceWithDecimalsFromTrustedProviders()": {
								"notice": "Returns current asset price calculated from trusted providers and number of decimals"
							},
							"getCurrentRandom()": {
								"notice": "Returns current random number"
							},
							"getEpochId(uint256)": {
								"notice": "Returns id of the epoch which was opened for price submission at the specified timestamp"
							},
							"getEpochPrice(uint256)": {
								"notice": "Returns asset price consented in specific epoch"
							},
							"getEpochPriceForVoter(uint256,address)": {
								"notice": "Returns asset price submitted by voter in specific epoch"
							},
							"getPriceEpochConfiguration()": {
								"notice": "Returns current epoch data"
							},
							"getPriceEpochData()": {
								"notice": "Returns current epoch data"
							},
							"getRandom(uint256)": {
								"notice": "Returns random number of the specified epoch"
							},
							"symbol()": {
								"notice": "Returns the FTSO symbol"
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol": {
				"IFtsoRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "getAllCurrentPrices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "ftsoIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "decimals",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IFtsoRegistry.PriceInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ftsoIndex",
									"type": "uint256"
								}
							],
							"name": "getCurrentPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetIndex",
									"type": "uint256"
								}
							],
							"name": "getCurrentPriceWithDecimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetPriceUsdDecimals",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "getCurrentPriceWithDecimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_assetPriceUsdDecimals",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_indices",
									"type": "uint256[]"
								}
							],
							"name": "getCurrentPricesByIndices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "ftsoIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "decimals",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IFtsoRegistry.PriceInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "_symbols",
									"type": "string[]"
								}
							],
							"name": "getCurrentPricesBySymbols",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "ftsoIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "decimals",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IFtsoRegistry.PriceInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ftsoIndex",
									"type": "uint256"
								}
							],
							"name": "getFtso",
							"outputs": [
								{
									"internalType": "contract IIFtso",
									"name": "_activeFtsoAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "getFtsoBySymbol",
							"outputs": [
								{
									"internalType": "contract IIFtso",
									"name": "_activeFtsoAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "getFtsoIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_assetIndex",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_ftsoIndex",
									"type": "uint256"
								}
							],
							"name": "getFtsoSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_indices",
									"type": "uint256[]"
								}
							],
							"name": "getFtsos",
							"outputs": [
								{
									"internalType": "contract IFtsoGenesis[]",
									"name": "_ftsos",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedFtsos",
							"outputs": [
								{
									"internalType": "contract IIFtso[]",
									"name": "_ftsos",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedIndices",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_supportedIndices",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedIndicesAndFtsos",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_supportedIndices",
									"type": "uint256[]"
								},
								{
									"internalType": "contract IIFtso[]",
									"name": "_ftsos",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedIndicesAndSymbols",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_supportedIndices",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "_supportedSymbols",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedIndicesSymbolsAndFtsos",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "_supportedIndices",
									"type": "uint256[]"
								},
								{
									"internalType": "string[]",
									"name": "_supportedSymbols",
									"type": "string[]"
								},
								{
									"internalType": "contract IIFtso[]",
									"name": "_ftsos",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedSymbols",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "_supportedSymbols",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getSupportedSymbolsAndFtsos",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "_supportedSymbols",
									"type": "string[]"
								},
								{
									"internalType": "contract IIFtso[]",
									"name": "_ftsos",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAllCurrentPrices()": "58f9296f",
							"getCurrentPrice(string)": "42a0f243",
							"getCurrentPrice(uint256)": "c55d0f56",
							"getCurrentPriceWithDecimals(string)": "a69afdc6",
							"getCurrentPriceWithDecimals(uint256)": "257cbd3a",
							"getCurrentPricesByIndices(uint256[])": "6ba31fa1",
							"getCurrentPricesBySymbols(string[])": "79d5ea4b",
							"getFtso(uint256)": "d75f6d81",
							"getFtsoBySymbol(string)": "97da6af4",
							"getFtsoIndex(string)": "e848da30",
							"getFtsoSymbol(uint256)": "136d3f64",
							"getFtsos(uint256[])": "9cb47538",
							"getSupportedFtsos()": "a40060ba",
							"getSupportedIndices()": "798aac5b",
							"getSupportedIndicesAndFtsos()": "06a2ba29",
							"getSupportedIndicesAndSymbols()": "e68f283b",
							"getSupportedIndicesSymbolsAndFtsos()": "7687542c",
							"getSupportedSymbols()": "ce1c0e4d",
							"getSupportedSymbolsAndFtsos()": "0cf48497"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllCurrentPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IFtsoRegistry.PriceInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetIndex\",\"type\":\"uint256\"}],\"name\":\"getCurrentPriceWithDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetPriceUsdDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getCurrentPriceWithDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_assetPriceUsdDecimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"name\":\"getCurrentPricesByIndices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IFtsoRegistry.PriceInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_symbols\",\"type\":\"string[]\"}],\"name\":\"getCurrentPricesBySymbols\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IFtsoRegistry.PriceInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"getFtso\",\"outputs\":[{\"internalType\":\"contract IIFtso\",\"name\":\"_activeFtsoAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getFtsoBySymbol\",\"outputs\":[{\"internalType\":\"contract IIFtso\",\"name\":\"_activeFtsoAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getFtsoIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"getFtsoSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"name\":\"getFtsos\",\"outputs\":[{\"internalType\":\"contract IFtsoGenesis[]\",\"name\":\"_ftsos\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedFtsos\",\"outputs\":[{\"internalType\":\"contract IIFtso[]\",\"name\":\"_ftsos\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedIndices\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_supportedIndices\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedIndicesAndFtsos\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_supportedIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IIFtso[]\",\"name\":\"_ftsos\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedIndicesAndSymbols\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_supportedIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_supportedSymbols\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedIndicesSymbolsAndFtsos\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_supportedIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"_supportedSymbols\",\"type\":\"string[]\"},{\"internalType\":\"contract IIFtso[]\",\"name\":\"_ftsos\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedSymbols\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_supportedSymbols\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedSymbolsAndFtsos\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_supportedSymbols\",\"type\":\"string[]\"},{\"internalType\":\"contract IIFtso[]\",\"name\":\"_ftsos\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol\":\"IFtsoRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol\":{\"keccak256\":\"0xd245b3c083496b3539224dc707381db5a5e8a49a5012d370b34514caefa3415d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bfe225cca2e036b4c9e460e9fd7c3f568e9574d879f81c038309563987e2348\",\"dweb:/ipfs/QmUeLdoDMG7eyQSHzaHqXwVpEYB4Nd3FpvoDjpXckDs1dq\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol\":{\"keccak256\":\"0xd015bc43b8a22afaba50c42a56409df0d81172845dabc124a3d37b3b0bbd4df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc305f048820c05956ec05fa246ec9070f9d813b43935356e7fe35969f49fc02\",\"dweb:/ipfs/QmaUJ42ZFzcRgy6GQtstkXMk9UgL5ERZx2V9HueXApgWBW\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol\":{\"keccak256\":\"0x4765fdcb22dcc64c015d02c019f0ddce8d8b36111160fd4160a3d94ea4f370a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0baa5b9b24e3049bcf8de78d5dbdb778d53f5585fbe479550bfdcef2ed676257\",\"dweb:/ipfs/Qmd8Eby81zX1YptGo5E2zAraTFo2NGLRCL9XuyU7YSsaqG\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol\":{\"keccak256\":\"0xfae54442fb489dccc5f0a0a6f8d946c9fdebceece98fcb087c5998fa1363ff30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53d8b87f403e7d868ed832f8cb965a440c8c32d20699a07f0a3f7bb2abeff2b5\",\"dweb:/ipfs/QmTYEoSzDJyhiJyY2AhnirXD6F737mzSVbqbnr6g4Fa7kT\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol\":{\"keccak256\":\"0x2b818c0cd8f2f1be88da36edd966d2b358c6954e50e0aa653a9d65ef2e9712d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07258af95b9556c024aaab2e2ff83955c56f255f82a024ed190f19947087682d\",\"dweb:/ipfs/QmeRKq6cYMau8VdLkEJw3xE6eK19Hz5DvzLEzUk1ZnVJxh\"]},\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":{\"keccak256\":\"0x8c70a1ae9079bb9d29c8e2dde781f546b6cb621f0b7cc943b9cbcbd52718bb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e89abe97c65481a1cacb59abcde6d18b127a89ed46f99402c30c6477ea0722\",\"dweb:/ipfs/Qmd6i71hUPHR11U1U8EvDwJyEg4xUZhLbDe7D4Z7LLrAZx\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol\":{\"keccak256\":\"0x5388cd6705f08a9d7a82be3d4c1aea3266df20eb5263b9f5ecf95e73338dc595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7a9b55b0d6dd4d053d702f897ea5272695006ae0ca25f3b3a1ccbf4e604fd9\",\"dweb:/ipfs/QmP1HtdwBY9ZJvDAQTEDZzCNBTrS2Rdk7QRy3An6PLMjd5\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol\":{\"keccak256\":\"0x6eb8619a51e0e00a93b32055e4f43d64f050b129e31bf0e161584d79cfbc5dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5b8f39e1cb4f5a861e6468b4340ee57272d329488340fac71418e8c9936984\",\"dweb:/ipfs/QmdKDZkCAEjMeL233hsFTvGLG6rZzn6XVNnopKLV2iz4g8\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol\":{\"keccak256\":\"0x49a647d1e8c394320c337b09f14b0ca70f43b0a1327233ddd9b8dcf7f005f92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb712e00e5801b8f1a1d2c05d4e46556bac15e227df7e21cd5c80ad1cc16192d\",\"dweb:/ipfs/QmUAGmvn65u4R165gPMbNoJwVFicCtAC2Ce6Y3f8PpTbTw\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol": {
				"IGovernanceVotePower": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "getDelegateOfAt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "getDelegateOfAtNow",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "getVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "undelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"delegate(address)": {
								"params": {
									"_to": "The address of the recipient."
								}
							},
							"getDelegateOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch the address.",
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Address where `_who` was delegating its governance vote power at block `_blockNumber`."
								}
							},
							"getDelegateOfAtNow(address)": {
								"params": {
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Address where `_who` is currently delegating its governance vote power."
								}
							},
							"getVotes(address)": {
								"params": {
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Governance vote power of `account` at the lastest block."
								}
							},
							"votePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch the vote power.",
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Governance vote power of `_who` at `_blockNumber`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"delegate(address)": "5c19a95c",
							"getDelegateOfAt(address,uint256)": "3c028e9d",
							"getDelegateOfAtNow(address)": "b3e871ee",
							"getVotes(address)": "9ab24eb0",
							"undelegate()": "92ab89bb",
							"votePowerOfAt(address,uint256)": "92bfe6d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getDelegateOfAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getDelegateOfAtNow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"params\":{\"_to\":\"The address of the recipient.\"}},\"getDelegateOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch the address.\",\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Address where `_who` was delegating its governance vote power at block `_blockNumber`.\"}},\"getDelegateOfAtNow(address)\":{\"params\":{\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Address where `_who` is currently delegating its governance vote power.\"}},\"getVotes(address)\":{\"params\":{\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Governance vote power of `account` at the lastest block.\"}},\"votePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch the vote power.\",\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Governance vote power of `_who` at `_blockNumber`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"delegate(address)\":{\"notice\":\"Delegates all governance vote power of `msg.sender` to address `_to`.\"},\"getDelegateOfAt(address,uint256)\":{\"notice\":\"Gets the address an account is delegating its governance vote power to, at a given block number.\"},\"getDelegateOfAtNow(address)\":{\"notice\":\"Gets the address an account is delegating its governance vote power to, at the latest block number.\"},\"getVotes(address)\":{\"notice\":\"Gets the governance vote power of an address at the latest block, including all delegations made to it.\"},\"undelegate()\":{\"notice\":\"Undelegates all governance vote power of `msg.sender`.\"},\"votePowerOfAt(address,uint256)\":{\"notice\":\"Gets the governance vote power of an address at a given block number, including all delegations made to it.\"}},\"notice\":\"Interface for contracts delegating their governance vote power.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":\"IGovernanceVotePower\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"delegate(address)": {
								"notice": "Delegates all governance vote power of `msg.sender` to address `_to`."
							},
							"getDelegateOfAt(address,uint256)": {
								"notice": "Gets the address an account is delegating its governance vote power to, at a given block number."
							},
							"getDelegateOfAtNow(address)": {
								"notice": "Gets the address an account is delegating its governance vote power to, at the latest block number."
							},
							"getVotes(address)": {
								"notice": "Gets the governance vote power of an address at the latest block, including all delegations made to it."
							},
							"undelegate()": {
								"notice": "Undelegates all governance vote power of `msg.sender`."
							},
							"votePowerOfAt(address,uint256)": {
								"notice": "Gets the governance vote power of an address at a given block number, including all delegations made to it."
							}
						},
						"notice": "Interface for contracts delegating their governance vote power.",
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol": {
				"IPChainStakeMirror": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxUpdatesPerBlock",
									"type": "uint256"
								}
							],
							"name": "MaxUpdatesPerBlockSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountWei",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "pChainTxId",
									"type": "bytes32"
								}
							],
							"name": "StakeConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountWei",
									"type": "uint256"
								}
							],
							"name": "StakeEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "txHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountWei",
									"type": "uint256"
								}
							],
							"name": "StakeRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "VotePowerCacheCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "priorVotePower",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newVotePower",
									"type": "uint256"
								}
							],
							"name": "VotePowerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20[]",
									"name": "_nodeIds",
									"type": "bytes20[]"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "batchVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_txId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes20",
									"name": "_inputAddress",
									"type": "bytes20"
								}
							],
							"name": "isActiveStakeMirrored",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "txId",
											"type": "bytes32"
										},
										{
											"internalType": "uint8",
											"name": "stakingType",
											"type": "uint8"
										},
										{
											"internalType": "bytes20",
											"name": "inputAddress",
											"type": "bytes20"
										},
										{
											"internalType": "bytes20",
											"name": "nodeId",
											"type": "bytes20"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "weight",
											"type": "uint64"
										}
									],
									"internalType": "struct IPChainStakeMirrorVerifier.PChainStake",
									"name": "_stakeData",
									"type": "tuple"
								},
								{
									"internalType": "bytes32[]",
									"name": "_merkleProof",
									"type": "bytes32[]"
								}
							],
							"name": "mirrorStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "stakesOf",
							"outputs": [
								{
									"internalType": "bytes20[]",
									"name": "_nodeIds",
									"type": "bytes20[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "stakesOfAt",
							"outputs": [
								{
									"internalType": "bytes20[]",
									"name": "_nodeIds",
									"type": "bytes20[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVotePower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								}
							],
							"name": "votePowerFromTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerFromToAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								}
							],
							"name": "votePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "_owner",
									"type": "bytes20"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"MaxUpdatesPerBlockSet(uint256)": {
								"params": {
									"maxUpdatesPerBlock": "new number of max updated per block"
								}
							},
							"StakeConfirmed(address,bytes20,bytes32,uint256,bytes32)": {
								"params": {
									"amountWei": "Stake amount (in wei).",
									"nodeId": "Node id to which the stake was added.",
									"owner": "The address who opened the stake.",
									"pChainTxId": "P-chain transaction id.",
									"txHash": "Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));"
								}
							},
							"StakeEnded(address,bytes20,bytes32,uint256)": {
								"params": {
									"amountWei": "Stake amount (in wei).",
									"nodeId": "Node id from which the stake was removed.",
									"owner": "The address whose stake has ended.",
									"txHash": "Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));"
								}
							},
							"StakeRevoked(address,bytes20,bytes32,uint256)": {
								"params": {
									"amountWei": "Stake amount (in wei).",
									"nodeId": "Node id from which the stake was removed.",
									"owner": "The address whose stake has ended.",
									"txHash": "Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"params": {
									"_owner": "The address from which the balance will be retrieved."
								},
								"returns": {
									"_0": "The current balance.*"
								}
							},
							"balanceOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number when the balance is queried.",
									"_owner": "The address from which the balance will be retrieved."
								},
								"returns": {
									"_0": "The balance at `_blockNumber`.*"
								}
							},
							"batchVotePowerOfAt(bytes20[],uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_nodeIds": "The list of node ids to fetch vote power of."
								},
								"returns": {
									"_0": "A list of vote powers."
								}
							},
							"isActiveStakeMirrored(bytes32,bytes20)": {
								"params": {
									"_inputAddress": "P-chain address that opened stake.",
									"_txId": "P-chain stake transaction id."
								},
								"returns": {
									"_0": "True if stake is active and mirrored."
								}
							},
							"mirrorStake((bytes32,uint8,bytes20,bytes20,uint64,uint64,uint64),bytes32[])": {
								"params": {
									"_merkleProof": "Merkle proof that should be used to prove the P-chain stake.",
									"_stakeData": "Information about P-chain stake."
								}
							},
							"stakesOf(address)": {
								"params": {
									"_owner": "The address being queried."
								},
								"returns": {
									"_amounts": "Array of staked amounts, for each node id.",
									"_nodeIds": "Array of node ids."
								}
							},
							"stakesOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number being queried.",
									"_owner": "The address being queried."
								},
								"returns": {
									"_amounts": "Array of staked amounts, for each node id.",
									"_nodeIds": "Array of node ids."
								}
							},
							"totalSupply()": {
								"returns": {
									"_0": "The current total amount of tokens.*"
								}
							},
							"totalSupplyAt(uint256)": {
								"params": {
									"_blockNumber": "The block number when the totalSupply is queried."
								},
								"returns": {
									"_0": "The total amount of tokens at `_blockNumber`.*"
								}
							},
							"totalVotePower()": {
								"returns": {
									"_0": "The current total vote power (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAt(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block  (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAtCached(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block (sum of all accounts' vote powers)."
								}
							},
							"votePowerFromTo(address,bytes20)": {
								"params": {
									"_nodeId": "Node id.",
									"_owner": "Address of vote power owner."
								},
								"returns": {
									"_0": "The staked vote power."
								}
							},
							"votePowerFromToAt(address,bytes20,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_nodeId": "Node id.",
									"_owner": "Address of vote power owner."
								},
								"returns": {
									"_0": "The staked vote power."
								}
							},
							"votePowerOf(bytes20)": {
								"params": {
									"_nodeId": "The node id to get voting power."
								},
								"returns": {
									"_0": "Current vote power of `_nodeId`."
								}
							},
							"votePowerOfAt(bytes20,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_nodeId": "The node id to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_nodeId` at `_blockNumber`."
								}
							},
							"votePowerOfAtCached(bytes20,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The node id to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"batchVotePowerOfAt(bytes20[],uint256)": "a9e70199",
							"isActiveStakeMirrored(bytes32,bytes20)": "d9ab4dfe",
							"mirrorStake((bytes32,uint8,bytes20,bytes20,uint64,uint64,uint64),bytes32[])": "2e335805",
							"stakesOf(address)": "33b69c4c",
							"stakesOfAt(address,uint256)": "4be91f32",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"totalVotePower()": "f5f3d4f7",
							"totalVotePowerAt(uint256)": "3e5aa26a",
							"totalVotePowerAtCached(uint256)": "caeb942b",
							"votePowerFromTo(address,bytes20)": "59c345f5",
							"votePowerFromToAt(address,bytes20,uint256)": "1f7ff2c7",
							"votePowerOf(bytes20)": "b4eb2a81",
							"votePowerOfAt(bytes20,uint256)": "46431374",
							"votePowerOfAtCached(bytes20,uint256)": "bd61ffee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxUpdatesPerBlock\",\"type\":\"uint256\"}],\"name\":\"MaxUpdatesPerBlockSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"pChainTxId\",\"type\":\"bytes32\"}],\"name\":\"StakeConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"}],\"name\":\"StakeEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"}],\"name\":\"StakeRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"VotePowerCacheCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priorVotePower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotePower\",\"type\":\"uint256\"}],\"name\":\"VotePowerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20[]\",\"name\":\"_nodeIds\",\"type\":\"bytes20[]\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"batchVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_txId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes20\",\"name\":\"_inputAddress\",\"type\":\"bytes20\"}],\"name\":\"isActiveStakeMirrored\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"txId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"stakingType\",\"type\":\"uint8\"},{\"internalType\":\"bytes20\",\"name\":\"inputAddress\",\"type\":\"bytes20\"},{\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"weight\",\"type\":\"uint64\"}],\"internalType\":\"struct IPChainStakeMirrorVerifier.PChainStake\",\"name\":\"_stakeData\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mirrorStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"stakesOf\",\"outputs\":[{\"internalType\":\"bytes20[]\",\"name\":\"_nodeIds\",\"type\":\"bytes20[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"stakesOfAt\",\"outputs\":[{\"internalType\":\"bytes20[]\",\"name\":\"_nodeIds\",\"type\":\"bytes20[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"}],\"name\":\"votePowerFromTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerFromToAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"}],\"name\":\"votePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_owner\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MaxUpdatesPerBlockSet(uint256)\":{\"params\":{\"maxUpdatesPerBlock\":\"new number of max updated per block\"}},\"StakeConfirmed(address,bytes20,bytes32,uint256,bytes32)\":{\"params\":{\"amountWei\":\"Stake amount (in wei).\",\"nodeId\":\"Node id to which the stake was added.\",\"owner\":\"The address who opened the stake.\",\"pChainTxId\":\"P-chain transaction id.\",\"txHash\":\"Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\"}},\"StakeEnded(address,bytes20,bytes32,uint256)\":{\"params\":{\"amountWei\":\"Stake amount (in wei).\",\"nodeId\":\"Node id from which the stake was removed.\",\"owner\":\"The address whose stake has ended.\",\"txHash\":\"Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\"}},\"StakeRevoked(address,bytes20,bytes32,uint256)\":{\"params\":{\"amountWei\":\"Stake amount (in wei).\",\"nodeId\":\"Node id from which the stake was removed.\",\"owner\":\"The address whose stake has ended.\",\"txHash\":\"Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\"}}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address from which the balance will be retrieved.\"},\"returns\":{\"_0\":\"The current balance.*\"}},\"balanceOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the balance is queried.\",\"_owner\":\"The address from which the balance will be retrieved.\"},\"returns\":{\"_0\":\"The balance at `_blockNumber`.*\"}},\"batchVotePowerOfAt(bytes20[],uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_nodeIds\":\"The list of node ids to fetch vote power of.\"},\"returns\":{\"_0\":\"A list of vote powers.\"}},\"isActiveStakeMirrored(bytes32,bytes20)\":{\"params\":{\"_inputAddress\":\"P-chain address that opened stake.\",\"_txId\":\"P-chain stake transaction id.\"},\"returns\":{\"_0\":\"True if stake is active and mirrored.\"}},\"mirrorStake((bytes32,uint8,bytes20,bytes20,uint64,uint64,uint64),bytes32[])\":{\"params\":{\"_merkleProof\":\"Merkle proof that should be used to prove the P-chain stake.\",\"_stakeData\":\"Information about P-chain stake.\"}},\"stakesOf(address)\":{\"params\":{\"_owner\":\"The address being queried.\"},\"returns\":{\"_amounts\":\"Array of staked amounts, for each node id.\",\"_nodeIds\":\"Array of node ids.\"}},\"stakesOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number being queried.\",\"_owner\":\"The address being queried.\"},\"returns\":{\"_amounts\":\"Array of staked amounts, for each node id.\",\"_nodeIds\":\"Array of node ids.\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"The current total amount of tokens.*\"}},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried.\"},\"returns\":{\"_0\":\"The total amount of tokens at `_blockNumber`.*\"}},\"totalVotePower()\":{\"returns\":{\"_0\":\"The current total vote power (sum of all accounts' vote powers).\"}},\"totalVotePowerAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block  (sum of all accounts' vote powers).\"}},\"totalVotePowerAtCached(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block (sum of all accounts' vote powers).\"}},\"votePowerFromTo(address,bytes20)\":{\"params\":{\"_nodeId\":\"Node id.\",\"_owner\":\"Address of vote power owner.\"},\"returns\":{\"_0\":\"The staked vote power.\"}},\"votePowerFromToAt(address,bytes20,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_nodeId\":\"Node id.\",\"_owner\":\"Address of vote power owner.\"},\"returns\":{\"_0\":\"The staked vote power.\"}},\"votePowerOf(bytes20)\":{\"params\":{\"_nodeId\":\"The node id to get voting power.\"},\"returns\":{\"_0\":\"Current vote power of `_nodeId`.\"}},\"votePowerOfAt(bytes20,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_nodeId\":\"The node id to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_nodeId` at `_blockNumber`.\"}},\"votePowerOfAtCached(bytes20,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The node id to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"MaxUpdatesPerBlockSet(uint256)\":{\"notice\":\"Event emitted when max updates per block is set.\"},\"StakeConfirmed(address,bytes20,bytes32,uint256,bytes32)\":{\"notice\":\"Event emitted when the stake is confirmed.\"},\"StakeEnded(address,bytes20,bytes32,uint256)\":{\"notice\":\"Event emitted when the stake has ended.\"},\"StakeRevoked(address,bytes20,bytes32,uint256)\":{\"notice\":\"Event emitted when the stake was revoked.\"},\"VotePowerCacheCreated(bytes20,uint256)\":{\"notice\":\"Emitted when a vote power cache entry is created. Allows history cleaners to track vote power cache cleanup opportunities off-chain.\"},\"VotePowerChanged(address,bytes20,uint256,uint256)\":{\"notice\":\"Event triggered when a stake is confirmed or at the time it ends. Definition: `votePowerFromTo(owner, nodeId)` is `changed` from `priorVotePower` to `newVotePower`.\"}},\"kind\":\"user\",\"methods\":{\"balanceOf(address)\":{\"notice\":\"Queries the token balance of `_owner` at current block.\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"Queries the token balance of `_owner` at a specific `_blockNumber`.\"},\"batchVotePowerOfAt(bytes20[],uint256)\":{\"notice\":\"Return vote powers for several node ids in a batch.\"},\"isActiveStakeMirrored(bytes32,bytes20)\":{\"notice\":\"Method for checking if active stake (stake start time <= block.timestamp < stake end time) was already mirrored.\"},\"mirrorStake((bytes32,uint8,bytes20,bytes20,uint64,uint64,uint64),bytes32[])\":{\"notice\":\"Method for P-chain stake mirroring using `PChainStake` data and Merkle proof.\"},\"stakesOf(address)\":{\"notice\":\"Get the amounts and node ids being staked to by a vote power owner.\"},\"stakesOfAt(address,uint256)\":{\"notice\":\"Get the amounts and node ids being staked to by a vote power owner, at a given block.\"},\"totalSupply()\":{\"notice\":\"Total amount of tokens at current block.\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"totalVotePower()\":{\"notice\":\"Get the current total vote power.\"},\"totalVotePowerAt(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber`\"},\"totalVotePowerAtCached(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if `_blockNumber` is in the past, otherwise reverts.\"},\"votePowerFromTo(address,bytes20)\":{\"notice\":\"Get current staked vote power from `_owner` staked to `_nodeId`.\"},\"votePowerFromToAt(address,bytes20,uint256)\":{\"notice\":\"Get current staked vote power from `_owner` staked to `_nodeId` at `_blockNumber`.\"},\"votePowerOf(bytes20)\":{\"notice\":\"Get the current vote power of `_nodeId`.\"},\"votePowerOfAt(bytes20,uint256)\":{\"notice\":\"Get the vote power of `_nodeId` at block `_blockNumber`\"},\"votePowerOfAtCached(bytes20,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if _blockNumber is in the past, otherwise reverts.\"}},\"notice\":\"Interface for the `PChainStakeMirror` contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":\"IPChainStakeMirror\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":{\"keccak256\":\"0x8c70a1ae9079bb9d29c8e2dde781f546b6cb621f0b7cc943b9cbcbd52718bb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e89abe97c65481a1cacb59abcde6d18b127a89ed46f99402c30c6477ea0722\",\"dweb:/ipfs/Qmd6i71hUPHR11U1U8EvDwJyEg4xUZhLbDe7D4Z7LLrAZx\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"MaxUpdatesPerBlockSet(uint256)": {
								"notice": "Event emitted when max updates per block is set."
							},
							"StakeConfirmed(address,bytes20,bytes32,uint256,bytes32)": {
								"notice": "Event emitted when the stake is confirmed."
							},
							"StakeEnded(address,bytes20,bytes32,uint256)": {
								"notice": "Event emitted when the stake has ended."
							},
							"StakeRevoked(address,bytes20,bytes32,uint256)": {
								"notice": "Event emitted when the stake was revoked."
							},
							"VotePowerCacheCreated(bytes20,uint256)": {
								"notice": "Emitted when a vote power cache entry is created. Allows history cleaners to track vote power cache cleanup opportunities off-chain."
							},
							"VotePowerChanged(address,bytes20,uint256,uint256)": {
								"notice": "Event triggered when a stake is confirmed or at the time it ends. Definition: `votePowerFromTo(owner, nodeId)` is `changed` from `priorVotePower` to `newVotePower`."
							}
						},
						"kind": "user",
						"methods": {
							"balanceOf(address)": {
								"notice": "Queries the token balance of `_owner` at current block."
							},
							"balanceOfAt(address,uint256)": {
								"notice": "Queries the token balance of `_owner` at a specific `_blockNumber`."
							},
							"batchVotePowerOfAt(bytes20[],uint256)": {
								"notice": "Return vote powers for several node ids in a batch."
							},
							"isActiveStakeMirrored(bytes32,bytes20)": {
								"notice": "Method for checking if active stake (stake start time <= block.timestamp < stake end time) was already mirrored."
							},
							"mirrorStake((bytes32,uint8,bytes20,bytes20,uint64,uint64,uint64),bytes32[])": {
								"notice": "Method for P-chain stake mirroring using `PChainStake` data and Merkle proof."
							},
							"stakesOf(address)": {
								"notice": "Get the amounts and node ids being staked to by a vote power owner."
							},
							"stakesOfAt(address,uint256)": {
								"notice": "Get the amounts and node ids being staked to by a vote power owner, at a given block."
							},
							"totalSupply()": {
								"notice": "Total amount of tokens at current block."
							},
							"totalSupplyAt(uint256)": {
								"notice": "Total amount of tokens at a specific `_blockNumber`."
							},
							"totalVotePower()": {
								"notice": "Get the current total vote power."
							},
							"totalVotePowerAt(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber`"
							},
							"totalVotePowerAtCached(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if `_blockNumber` is in the past, otherwise reverts."
							},
							"votePowerFromTo(address,bytes20)": {
								"notice": "Get current staked vote power from `_owner` staked to `_nodeId`."
							},
							"votePowerFromToAt(address,bytes20,uint256)": {
								"notice": "Get current staked vote power from `_owner` staked to `_nodeId` at `_blockNumber`."
							},
							"votePowerOf(bytes20)": {
								"notice": "Get the current vote power of `_nodeId`."
							},
							"votePowerOfAt(bytes20,uint256)": {
								"notice": "Get the vote power of `_nodeId` at block `_blockNumber`"
							},
							"votePowerOfAtCached(bytes20,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if _blockNumber is in the past, otherwise reverts."
							}
						},
						"notice": "Interface for the `PChainStakeMirror` contract.",
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol": {
				"IPChainStakeMirrorVerifier": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface with structure for P-chain stake mirror verifications.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":\"IPChainStakeMirrorVerifier\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Interface with structure for P-chain stake mirror verifications.",
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol": {
				"IPChainVotePower": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "VotePowerCacheCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes20",
									"name": "nodeId",
									"type": "bytes20"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "priorVotePower",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newVotePower",
									"type": "uint256"
								}
							],
							"name": "VotePowerChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20[]",
									"name": "_nodeIds",
									"type": "bytes20[]"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "batchVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "stakesOf",
							"outputs": [
								{
									"internalType": "bytes20[]",
									"name": "_nodeIds",
									"type": "bytes20[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "stakesOfAt",
							"outputs": [
								{
									"internalType": "bytes20[]",
									"name": "_nodeIds",
									"type": "bytes20[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVotePower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								}
							],
							"name": "votePowerFromTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerFromToAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								}
							],
							"name": "votePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "_nodeId",
									"type": "bytes20"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes20",
									"name": "_owner",
									"type": "bytes20"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"VotePowerCacheCreated(bytes20,uint256)": {
								"params": {
									"blockNumber": "The block number at which the vote power has been cached.",
									"nodeId": "The node id whose vote power has just been cached."
								}
							},
							"VotePowerChanged(address,bytes20,uint256,uint256)": {
								"params": {
									"newVotePower": "The new vote power that triggered this event.",
									"nodeId": "The node id whose received vote power has changed.",
									"owner": "The account that has changed the amount of vote power it is staking.",
									"priorVotePower": "The vote power originally on that node id."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"batchVotePowerOfAt(bytes20[],uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_nodeIds": "The list of node ids to fetch vote power of."
								},
								"returns": {
									"_0": "A list of vote powers."
								}
							},
							"stakesOf(address)": {
								"params": {
									"_owner": "The address being queried."
								},
								"returns": {
									"_amounts": "Array of staked amounts, for each node id.",
									"_nodeIds": "Array of node ids."
								}
							},
							"stakesOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number being queried.",
									"_owner": "The address being queried."
								},
								"returns": {
									"_amounts": "Array of staked amounts, for each node id.",
									"_nodeIds": "Array of node ids."
								}
							},
							"totalVotePower()": {
								"returns": {
									"_0": "The current total vote power (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAt(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block  (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAtCached(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block (sum of all accounts' vote powers)."
								}
							},
							"votePowerFromTo(address,bytes20)": {
								"params": {
									"_nodeId": "Node id.",
									"_owner": "Address of vote power owner."
								},
								"returns": {
									"_0": "The staked vote power."
								}
							},
							"votePowerFromToAt(address,bytes20,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_nodeId": "Node id.",
									"_owner": "Address of vote power owner."
								},
								"returns": {
									"_0": "The staked vote power."
								}
							},
							"votePowerOf(bytes20)": {
								"params": {
									"_nodeId": "The node id to get voting power."
								},
								"returns": {
									"_0": "Current vote power of `_nodeId`."
								}
							},
							"votePowerOfAt(bytes20,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_nodeId": "The node id to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_nodeId` at `_blockNumber`."
								}
							},
							"votePowerOfAtCached(bytes20,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The node id to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchVotePowerOfAt(bytes20[],uint256)": "a9e70199",
							"stakesOf(address)": "33b69c4c",
							"stakesOfAt(address,uint256)": "4be91f32",
							"totalVotePower()": "f5f3d4f7",
							"totalVotePowerAt(uint256)": "3e5aa26a",
							"totalVotePowerAtCached(uint256)": "caeb942b",
							"votePowerFromTo(address,bytes20)": "59c345f5",
							"votePowerFromToAt(address,bytes20,uint256)": "1f7ff2c7",
							"votePowerOf(bytes20)": "b4eb2a81",
							"votePowerOfAt(bytes20,uint256)": "46431374",
							"votePowerOfAtCached(bytes20,uint256)": "bd61ffee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"VotePowerCacheCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes20\",\"name\":\"nodeId\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priorVotePower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotePower\",\"type\":\"uint256\"}],\"name\":\"VotePowerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes20[]\",\"name\":\"_nodeIds\",\"type\":\"bytes20[]\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"batchVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"stakesOf\",\"outputs\":[{\"internalType\":\"bytes20[]\",\"name\":\"_nodeIds\",\"type\":\"bytes20[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"stakesOfAt\",\"outputs\":[{\"internalType\":\"bytes20[]\",\"name\":\"_nodeIds\",\"type\":\"bytes20[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"}],\"name\":\"votePowerFromTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerFromToAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"}],\"name\":\"votePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_nodeId\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_owner\",\"type\":\"bytes20\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"VotePowerCacheCreated(bytes20,uint256)\":{\"params\":{\"blockNumber\":\"The block number at which the vote power has been cached.\",\"nodeId\":\"The node id whose vote power has just been cached.\"}},\"VotePowerChanged(address,bytes20,uint256,uint256)\":{\"params\":{\"newVotePower\":\"The new vote power that triggered this event.\",\"nodeId\":\"The node id whose received vote power has changed.\",\"owner\":\"The account that has changed the amount of vote power it is staking.\",\"priorVotePower\":\"The vote power originally on that node id.\"}}},\"kind\":\"dev\",\"methods\":{\"batchVotePowerOfAt(bytes20[],uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_nodeIds\":\"The list of node ids to fetch vote power of.\"},\"returns\":{\"_0\":\"A list of vote powers.\"}},\"stakesOf(address)\":{\"params\":{\"_owner\":\"The address being queried.\"},\"returns\":{\"_amounts\":\"Array of staked amounts, for each node id.\",\"_nodeIds\":\"Array of node ids.\"}},\"stakesOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number being queried.\",\"_owner\":\"The address being queried.\"},\"returns\":{\"_amounts\":\"Array of staked amounts, for each node id.\",\"_nodeIds\":\"Array of node ids.\"}},\"totalVotePower()\":{\"returns\":{\"_0\":\"The current total vote power (sum of all accounts' vote powers).\"}},\"totalVotePowerAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block  (sum of all accounts' vote powers).\"}},\"totalVotePowerAtCached(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block (sum of all accounts' vote powers).\"}},\"votePowerFromTo(address,bytes20)\":{\"params\":{\"_nodeId\":\"Node id.\",\"_owner\":\"Address of vote power owner.\"},\"returns\":{\"_0\":\"The staked vote power.\"}},\"votePowerFromToAt(address,bytes20,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_nodeId\":\"Node id.\",\"_owner\":\"Address of vote power owner.\"},\"returns\":{\"_0\":\"The staked vote power.\"}},\"votePowerOf(bytes20)\":{\"params\":{\"_nodeId\":\"The node id to get voting power.\"},\"returns\":{\"_0\":\"Current vote power of `_nodeId`.\"}},\"votePowerOfAt(bytes20,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_nodeId\":\"The node id to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_nodeId` at `_blockNumber`.\"}},\"votePowerOfAtCached(bytes20,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The node id to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"VotePowerCacheCreated(bytes20,uint256)\":{\"notice\":\"Emitted when a vote power cache entry is created. Allows history cleaners to track vote power cache cleanup opportunities off-chain.\"},\"VotePowerChanged(address,bytes20,uint256,uint256)\":{\"notice\":\"Event triggered when a stake is confirmed or at the time it ends. Definition: `votePowerFromTo(owner, nodeId)` is `changed` from `priorVotePower` to `newVotePower`.\"}},\"kind\":\"user\",\"methods\":{\"batchVotePowerOfAt(bytes20[],uint256)\":{\"notice\":\"Return vote powers for several node ids in a batch.\"},\"stakesOf(address)\":{\"notice\":\"Get the amounts and node ids being staked to by a vote power owner.\"},\"stakesOfAt(address,uint256)\":{\"notice\":\"Get the amounts and node ids being staked to by a vote power owner, at a given block.\"},\"totalVotePower()\":{\"notice\":\"Get the current total vote power.\"},\"totalVotePowerAt(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber`\"},\"totalVotePowerAtCached(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if `_blockNumber` is in the past, otherwise reverts.\"},\"votePowerFromTo(address,bytes20)\":{\"notice\":\"Get current staked vote power from `_owner` staked to `_nodeId`.\"},\"votePowerFromToAt(address,bytes20,uint256)\":{\"notice\":\"Get current staked vote power from `_owner` staked to `_nodeId` at `_blockNumber`.\"},\"votePowerOf(bytes20)\":{\"notice\":\"Get the current vote power of `_nodeId`.\"},\"votePowerOfAt(bytes20,uint256)\":{\"notice\":\"Get the vote power of `_nodeId` at block `_blockNumber`\"},\"votePowerOfAtCached(bytes20,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if _blockNumber is in the past, otherwise reverts.\"}},\"notice\":\"Interface for the vote power part of the `PChainStakeMirror` contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":\"IPChainVotePower\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"VotePowerCacheCreated(bytes20,uint256)": {
								"notice": "Emitted when a vote power cache entry is created. Allows history cleaners to track vote power cache cleanup opportunities off-chain."
							},
							"VotePowerChanged(address,bytes20,uint256,uint256)": {
								"notice": "Event triggered when a stake is confirmed or at the time it ends. Definition: `votePowerFromTo(owner, nodeId)` is `changed` from `priorVotePower` to `newVotePower`."
							}
						},
						"kind": "user",
						"methods": {
							"batchVotePowerOfAt(bytes20[],uint256)": {
								"notice": "Return vote powers for several node ids in a batch."
							},
							"stakesOf(address)": {
								"notice": "Get the amounts and node ids being staked to by a vote power owner."
							},
							"stakesOfAt(address,uint256)": {
								"notice": "Get the amounts and node ids being staked to by a vote power owner, at a given block."
							},
							"totalVotePower()": {
								"notice": "Get the current total vote power."
							},
							"totalVotePowerAt(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber`"
							},
							"totalVotePowerAtCached(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if `_blockNumber` is in the past, otherwise reverts."
							},
							"votePowerFromTo(address,bytes20)": {
								"notice": "Get current staked vote power from `_owner` staked to `_nodeId`."
							},
							"votePowerFromToAt(address,bytes20,uint256)": {
								"notice": "Get current staked vote power from `_owner` staked to `_nodeId` at `_blockNumber`."
							},
							"votePowerOf(bytes20)": {
								"notice": "Get the current vote power of `_nodeId`."
							},
							"votePowerOfAt(bytes20,uint256)": {
								"notice": "Get the vote power of `_nodeId` at block `_blockNumber`"
							},
							"votePowerOfAtCached(bytes20,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if _blockNumber is in the past, otherwise reverts."
							}
						},
						"notice": "Interface for the vote power part of the `PChainStakeMirror` contract.",
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol": {
				"IICleanable": {
					"abi": [
						{
							"inputs": [],
							"name": "cleanupBlockNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cleanerContract",
									"type": "address"
								}
							],
							"name": "setCleanerContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "setCleanupBlockNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setCleanupBlockNumber(uint256)": {
								"params": {
									"_blockNumber": "The new cleanup block number."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cleanupBlockNumber()": "deea13e7",
							"setCleanerContract(address)": "f6a494af",
							"setCleanupBlockNumber(uint256)": "13de97f5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"cleanupBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cleanerContract\",\"type\":\"address\"}],\"name\":\"setCleanerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setCleanupBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setCleanupBlockNumber(uint256)\":{\"params\":{\"_blockNumber\":\"The new cleanup block number.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cleanupBlockNumber()\":{\"notice\":\"Get the current cleanup block number.\"},\"setCleanerContract(address)\":{\"notice\":\"Set the contract that is allowed to call history cleaning methods.\"},\"setCleanupBlockNumber(uint256)\":{\"notice\":\"Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased, history before that block should never be used since it can be inconsistent. In particular, cleanup block number must be before current vote power block.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":\"IICleanable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"cleanupBlockNumber()": {
								"notice": "Get the current cleanup block number."
							},
							"setCleanerContract(address)": {
								"notice": "Set the contract that is allowed to call history cleaning methods."
							},
							"setCleanupBlockNumber(uint256)": {
								"notice": "Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased, history before that block should never be used since it can be inconsistent. In particular, cleanup block number must be before current vote power block."
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol": {
				"IIGovernanceVotePower": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "fromDelegate",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "toDelegate",
									"type": "address"
								}
							],
							"name": "DelegateChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "previousBalance",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "DelegateVotesChanged",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCleanupBlockNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "getDelegateOfAt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "getDelegateOfAtNow",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "getVotes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerToken",
							"outputs": [
								{
									"internalType": "contract IVPToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pChainStakeMirror",
							"outputs": [
								{
									"internalType": "contract IPChainStakeMirror",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cleanerContract",
									"type": "address"
								}
							],
							"name": "setCleanerContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "setCleanupBlockNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "undelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fromBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "updateAtTokenTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"params": {
									"delegator": "Account delegating its vote power.",
									"fromDelegate": "Account receiving the delegation before the change. Can be address(0) if there was no previous delegation.",
									"toDelegate": "Account receiving the delegation after the change. Can be address(0) if `delegator` just undelegated all its vote power."
								}
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"params": {
									"delegate": "The account receiving the changing delegated vote power.",
									"newBalance": "Delegated vote power after the change.",
									"previousBalance": "Delegated vote power before the change."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"delegate(address)": {
								"params": {
									"_to": "The address of the recipient."
								}
							},
							"getCleanupBlockNumber()": {
								"returns": {
									"_0": "The currently set cleanup block number."
								}
							},
							"getDelegateOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch the address.",
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Address where `_who` was delegating its governance vote power at block `_blockNumber`."
								}
							},
							"getDelegateOfAtNow(address)": {
								"params": {
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Address where `_who` is currently delegating its governance vote power."
								}
							},
							"getVotes(address)": {
								"params": {
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Governance vote power of `account` at the lastest block."
								}
							},
							"ownerToken()": {
								"returns": {
									"_0": "The IVPToken interface owning this contract."
								}
							},
							"pChainStakeMirror()": {
								"returns": {
									"_0": "The IPChainStakeMirror interface owning this contract."
								}
							},
							"setCleanerContract(address)": {
								"params": {
									"_cleanerContract": "Address of the cleanup contract. Usually this will be an instance of `CleanupBlockNumberManager`."
								}
							},
							"setCleanupBlockNumber(uint256)": {
								"params": {
									"_blockNumber": "The new cleanup block number."
								}
							},
							"updateAtTokenTransfer(address,address,uint256,uint256,uint256)": {
								"params": {
									"_amount": "Amount being transferred.",
									"_from": "Source address of the transfer.",
									"_fromBalance": "_Ignored._",
									"_to": "Destination address of the transfer.",
									"_toBalance": "_Ignored._"
								}
							},
							"votePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch the vote power.",
									"_who": "The address being queried."
								},
								"returns": {
									"_0": "Governance vote power of `_who` at `_blockNumber`."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"delegate(address)": "5c19a95c",
							"getCleanupBlockNumber()": "a72ec4b6",
							"getDelegateOfAt(address,uint256)": "3c028e9d",
							"getDelegateOfAtNow(address)": "b3e871ee",
							"getVotes(address)": "9ab24eb0",
							"ownerToken()": "65371883",
							"pChainStakeMirror()": "62d9c89a",
							"setCleanerContract(address)": "f6a494af",
							"setCleanupBlockNumber(uint256)": "13de97f5",
							"undelegate()": "92ab89bb",
							"updateAtTokenTransfer(address,address,uint256,uint256,uint256)": "eadb4362",
							"votePowerOfAt(address,uint256)": "92bfe6d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromDelegate\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"DelegateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DelegateVotesChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCleanupBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getDelegateOfAt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getDelegateOfAtNow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"getVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerToken\",\"outputs\":[{\"internalType\":\"contract IVPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pChainStakeMirror\",\"outputs\":[{\"internalType\":\"contract IPChainStakeMirror\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cleanerContract\",\"type\":\"address\"}],\"name\":\"setCleanerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setCleanupBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateAtTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"params\":{\"delegator\":\"Account delegating its vote power.\",\"fromDelegate\":\"Account receiving the delegation before the change. Can be address(0) if there was no previous delegation.\",\"toDelegate\":\"Account receiving the delegation after the change. Can be address(0) if `delegator` just undelegated all its vote power.\"}},\"DelegateVotesChanged(address,uint256,uint256)\":{\"params\":{\"delegate\":\"The account receiving the changing delegated vote power.\",\"newBalance\":\"Delegated vote power after the change.\",\"previousBalance\":\"Delegated vote power before the change.\"}}},\"kind\":\"dev\",\"methods\":{\"delegate(address)\":{\"params\":{\"_to\":\"The address of the recipient.\"}},\"getCleanupBlockNumber()\":{\"returns\":{\"_0\":\"The currently set cleanup block number.\"}},\"getDelegateOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch the address.\",\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Address where `_who` was delegating its governance vote power at block `_blockNumber`.\"}},\"getDelegateOfAtNow(address)\":{\"params\":{\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Address where `_who` is currently delegating its governance vote power.\"}},\"getVotes(address)\":{\"params\":{\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Governance vote power of `account` at the lastest block.\"}},\"ownerToken()\":{\"returns\":{\"_0\":\"The IVPToken interface owning this contract.\"}},\"pChainStakeMirror()\":{\"returns\":{\"_0\":\"The IPChainStakeMirror interface owning this contract.\"}},\"setCleanerContract(address)\":{\"params\":{\"_cleanerContract\":\"Address of the cleanup contract. Usually this will be an instance of `CleanupBlockNumberManager`.\"}},\"setCleanupBlockNumber(uint256)\":{\"params\":{\"_blockNumber\":\"The new cleanup block number.\"}},\"updateAtTokenTransfer(address,address,uint256,uint256,uint256)\":{\"params\":{\"_amount\":\"Amount being transferred.\",\"_from\":\"Source address of the transfer.\",\"_fromBalance\":\"_Ignored._\",\"_to\":\"Destination address of the transfer.\",\"_toBalance\":\"_Ignored._\"}},\"votePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch the vote power.\",\"_who\":\"The address being queried.\"},\"returns\":{\"_0\":\"Governance vote power of `_who` at `_blockNumber`.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"DelegateChanged(address,address,address)\":{\"notice\":\"Emitted when an account starts delegating vote power or switches its delegation to another address. The event is always emitted from a `GovernanceVotePower` contract.\"},\"DelegateVotesChanged(address,uint256,uint256)\":{\"notice\":\"Emitted when a delegate's vote power changes, as a result of a new delegation or a token transfer, for example. The event is always emitted from a `GovernanceVotePower` contract.\"}},\"kind\":\"user\",\"methods\":{\"delegate(address)\":{\"notice\":\"Delegates all governance vote power of `msg.sender` to address `_to`.\"},\"getCleanupBlockNumber()\":{\"notice\":\"Get the current cleanup block number set with `setCleanupBlockNumber()`.\"},\"getDelegateOfAt(address,uint256)\":{\"notice\":\"Gets the address an account is delegating its governance vote power to, at a given block number.\"},\"getDelegateOfAtNow(address)\":{\"notice\":\"Gets the address an account is delegating its governance vote power to, at the latest block number.\"},\"getVotes(address)\":{\"notice\":\"Gets the governance vote power of an address at the latest block, including all delegations made to it.\"},\"ownerToken()\":{\"notice\":\"Get the token that this governance vote power contract belongs to.\"},\"pChainStakeMirror()\":{\"notice\":\"Get the stake mirror contract that this governance vote power contract belongs to.\"},\"setCleanerContract(address)\":{\"notice\":\"Set the contract that is allowed to call history cleaning methods.\"},\"setCleanupBlockNumber(uint256)\":{\"notice\":\"Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased. History before that block should never be used since it can be inconsistent. In particular, cleanup block number must be lower than the current vote power block.\"},\"undelegate()\":{\"notice\":\"Undelegates all governance vote power of `msg.sender`.\"},\"updateAtTokenTransfer(address,address,uint256,uint256,uint256)\":{\"notice\":\"Update governance vote power of all involved delegates after tokens are transferred. This function **MUST** be called after each governance token transfer for the delegates to reflect the correct balance.\"},\"votePowerOfAt(address,uint256)\":{\"notice\":\"Gets the governance vote power of an address at a given block number, including all delegations made to it.\"}},\"notice\":\"Internal interface for contracts delegating their governance vote power.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol\":\"IIGovernanceVotePower\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":{\"keccak256\":\"0x8c70a1ae9079bb9d29c8e2dde781f546b6cb621f0b7cc943b9cbcbd52718bb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e89abe97c65481a1cacb59abcde6d18b127a89ed46f99402c30c6477ea0722\",\"dweb:/ipfs/Qmd6i71hUPHR11U1U8EvDwJyEg4xUZhLbDe7D4Z7LLrAZx\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol\":{\"keccak256\":\"0x5388cd6705f08a9d7a82be3d4c1aea3266df20eb5263b9f5ecf95e73338dc595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7a9b55b0d6dd4d053d702f897ea5272695006ae0ca25f3b3a1ccbf4e604fd9\",\"dweb:/ipfs/QmP1HtdwBY9ZJvDAQTEDZzCNBTrS2Rdk7QRy3An6PLMjd5\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DelegateChanged(address,address,address)": {
								"notice": "Emitted when an account starts delegating vote power or switches its delegation to another address. The event is always emitted from a `GovernanceVotePower` contract."
							},
							"DelegateVotesChanged(address,uint256,uint256)": {
								"notice": "Emitted when a delegate's vote power changes, as a result of a new delegation or a token transfer, for example. The event is always emitted from a `GovernanceVotePower` contract."
							}
						},
						"kind": "user",
						"methods": {
							"delegate(address)": {
								"notice": "Delegates all governance vote power of `msg.sender` to address `_to`."
							},
							"getCleanupBlockNumber()": {
								"notice": "Get the current cleanup block number set with `setCleanupBlockNumber()`."
							},
							"getDelegateOfAt(address,uint256)": {
								"notice": "Gets the address an account is delegating its governance vote power to, at a given block number."
							},
							"getDelegateOfAtNow(address)": {
								"notice": "Gets the address an account is delegating its governance vote power to, at the latest block number."
							},
							"getVotes(address)": {
								"notice": "Gets the governance vote power of an address at the latest block, including all delegations made to it."
							},
							"ownerToken()": {
								"notice": "Get the token that this governance vote power contract belongs to."
							},
							"pChainStakeMirror()": {
								"notice": "Get the stake mirror contract that this governance vote power contract belongs to."
							},
							"setCleanerContract(address)": {
								"notice": "Set the contract that is allowed to call history cleaning methods."
							},
							"setCleanupBlockNumber(uint256)": {
								"notice": "Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased. History before that block should never be used since it can be inconsistent. In particular, cleanup block number must be lower than the current vote power block."
							},
							"undelegate()": {
								"notice": "Undelegates all governance vote power of `msg.sender`."
							},
							"updateAtTokenTransfer(address,address,uint256,uint256,uint256)": {
								"notice": "Update governance vote power of all involved delegates after tokens are transferred. This function **MUST** be called after each governance token transfer for the delegates to reflect the correct balance."
							},
							"votePowerOfAt(address,uint256)": {
								"notice": "Gets the governance vote power of an address at a given block number, including all delegations made to it."
							}
						},
						"notice": "Internal interface for contracts delegating their governance vote power.",
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol": {
				"IIVPContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "priorVotePower",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newVotePower",
									"type": "uint256"
								}
							],
							"name": "Delegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votePower",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "batchVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cleanupBlockNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_bips",
									"type": "uint256"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "delegateExplicit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "delegatesOf",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_delegationMode",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "delegatesOfAt",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_delegationMode",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "delegationModeOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isReplacement",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerToken",
							"outputs": [
								{
									"internalType": "contract IVPToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "revokeDelegationAt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cleanerContract",
									"type": "address"
								}
							],
							"name": "setCleanerContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "setCleanupBlockNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "undelegateAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								}
							],
							"name": "undelegateAllExplicit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "undelegatedVotePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "undelegatedVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_fromBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "updateAtTokenTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "votePowerFromTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerFromToAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "votePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtIgnoringRevocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batchVotePowerOfAt(address[],uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owners": "The list of addresses to fetch vote power of."
								},
								"returns": {
									"_0": "A list of vote powers."
								}
							},
							"delegate(address,address,uint256,uint256)": {
								"params": {
									"_balance": "The delegator's current balance",
									"_bips": "The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).   Not cumulative - every call resets the delegation value (and value of 0 revokes delegation).*",
									"_from": "The address of the delegator",
									"_to": "The address of the recipient"
								}
							},
							"delegateExplicit(address,address,uint256,uint256)": {
								"params": {
									"_amount": "An explicit vote power amount to be delegated.   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*",
									"_balance": "The delegator's current balance",
									"_from": "The address of the delegator",
									"_to": "The address of the recipient"
								}
							},
							"delegatesOf(address)": {
								"params": {
									"_owner": "The address to get delegations."
								},
								"returns": {
									"_bips": "Positional array of delegation percents specified in basis points (1/100 or 1 percent)",
									"_count": "The number of delegates.",
									"_delegateAddresses": "Positional array of delegation addresses.",
									"_delegationMode": "The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
								}
							},
							"delegatesOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block for which we want to know the delegations.",
									"_owner": "The address to get delegations."
								},
								"returns": {
									"_bips": "Positional array of delegation percents specified in basis points (1/100 or 1 percent)",
									"_count": "The number of delegates.",
									"_delegateAddresses": "Positional array of delegation addresses.",
									"_delegationMode": "The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
								}
							},
							"delegationModeOf(address)": {
								"params": {
									"_who": "The address to get delegation mode."
								},
								"returns": {
									"_0": "Delegation mode (NOTSET=0, PERCENTAGE=1, AMOUNT=2))"
								}
							},
							"revokeDelegationAt(address,address,uint256,uint256)": {
								"params": {
									"_balance": "The delegator's current balance",
									"_blockNumber": "The block number at which to revoke delegation.*",
									"_from": "The address of the delegator",
									"_who": "Address of the delegatee"
								}
							},
							"setCleanupBlockNumber(uint256)": {
								"params": {
									"_blockNumber": "The new cleanup block number."
								}
							},
							"undelegateAll(address,uint256)": {
								"params": {
									"_from": "The address of the delegator*"
								}
							},
							"undelegateAllExplicit(address,address[])": {
								"params": {
									"_delegateAddresses": "Explicit delegation does not store delegatees' addresses,    so the caller must supply them.",
									"_from": "The address of the delegator"
								},
								"returns": {
									"_0": "The amount still delegated (in case the list of delegates was incomplete)."
								}
							},
							"undelegatedVotePowerOf(address,uint256)": {
								"params": {
									"_balance": "Owner's current balance",
									"_owner": "The address to get undelegated voting power."
								},
								"returns": {
									"_0": "The unallocated vote power of `_owner`"
								}
							},
							"undelegatedVotePowerOfAt(address,uint256,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get undelegated voting power."
								},
								"returns": {
									"_0": "The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)"
								}
							},
							"votePowerFromTo(address,address,uint256)": {
								"params": {
									"_balance": "The delegator's current balance",
									"_from": "Address of delegator",
									"_to": "Address of delegatee"
								},
								"returns": {
									"_0": "The delegated vote power."
								}
							},
							"votePowerFromToAt(address,address,uint256,uint256)": {
								"params": {
									"_balance": "The delegator's current balance",
									"_blockNumber": "The block number at which to fetch.",
									"_from": "Address of delegator",
									"_to": "Address of delegatee"
								},
								"returns": {
									"_0": "The delegated vote power."
								}
							},
							"votePowerOf(address)": {
								"params": {
									"_who": "The address to get voting power."
								},
								"returns": {
									"_0": "Current vote power of `_who`."
								}
							},
							"votePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_who": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_who` at `_blockNumber`."
								}
							},
							"votePowerOfAtCached(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_who": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_who` at `_blockNumber`."
								}
							},
							"votePowerOfAtIgnoringRevocation(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_who": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_who` at `_blockNumber`. Result doesn't change if vote power is revoked."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"batchVotePowerOfAt(address[],uint256)": "49e3c7e5",
							"cleanupBlockNumber()": "deea13e7",
							"delegate(address,address,uint256,uint256)": "6230001a",
							"delegateExplicit(address,address,uint256,uint256)": "404d9e82",
							"delegatesOf(address)": "7de5b8ed",
							"delegatesOfAt(address,uint256)": "ed475a79",
							"delegationModeOf(address)": "f6837767",
							"isReplacement()": "aa94d3f2",
							"ownerToken()": "65371883",
							"revokeDelegationAt(address,address,uint256,uint256)": "c7c62fab",
							"setCleanerContract(address)": "f6a494af",
							"setCleanupBlockNumber(uint256)": "13de97f5",
							"undelegateAll(address,uint256)": "05109ecf",
							"undelegateAllExplicit(address,address[])": "0f8b8af7",
							"undelegatedVotePowerOf(address,uint256)": "4a03d556",
							"undelegatedVotePowerOfAt(address,uint256,uint256)": "31503927",
							"updateAtTokenTransfer(address,address,uint256,uint256,uint256)": "eadb4362",
							"votePowerFromTo(address,address,uint256)": "9dc6b9f2",
							"votePowerFromToAt(address,address,uint256,uint256)": "833aca92",
							"votePowerOf(address)": "142d1018",
							"votePowerOfAt(address,uint256)": "92bfe6d8",
							"votePowerOfAtCached(address,uint256)": "e587497e",
							"votePowerOfAtIgnoringRevocation(address,uint256)": "04bb4e43"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priorVotePower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotePower\",\"type\":\"uint256\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votePower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"batchVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cleanupBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bips\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"delegateExplicit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"delegatesOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationMode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"delegatesOfAt\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationMode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"delegationModeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReplacement\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerToken\",\"outputs\":[{\"internalType\":\"contract IVPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"revokeDelegationAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cleanerContract\",\"type\":\"address\"}],\"name\":\"setCleanerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setCleanupBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"undelegateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"}],\"name\":\"undelegateAllExplicit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"undelegatedVotePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"undelegatedVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fromBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"updateAtTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"votePowerFromTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerFromToAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"votePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtIgnoringRevocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchVotePowerOfAt(address[],uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owners\":\"The list of addresses to fetch vote power of.\"},\"returns\":{\"_0\":\"A list of vote powers.\"}},\"delegate(address,address,uint256,uint256)\":{\"params\":{\"_balance\":\"The delegator's current balance\",\"_bips\":\"The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).   Not cumulative - every call resets the delegation value (and value of 0 revokes delegation).*\",\"_from\":\"The address of the delegator\",\"_to\":\"The address of the recipient\"}},\"delegateExplicit(address,address,uint256,uint256)\":{\"params\":{\"_amount\":\"An explicit vote power amount to be delegated.   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*\",\"_balance\":\"The delegator's current balance\",\"_from\":\"The address of the delegator\",\"_to\":\"The address of the recipient\"}},\"delegatesOf(address)\":{\"params\":{\"_owner\":\"The address to get delegations.\"},\"returns\":{\"_bips\":\"Positional array of delegation percents specified in basis points (1/100 or 1 percent)\",\"_count\":\"The number of delegates.\",\"_delegateAddresses\":\"Positional array of delegation addresses.\",\"_delegationMode\":\"The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\"}},\"delegatesOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block for which we want to know the delegations.\",\"_owner\":\"The address to get delegations.\"},\"returns\":{\"_bips\":\"Positional array of delegation percents specified in basis points (1/100 or 1 percent)\",\"_count\":\"The number of delegates.\",\"_delegateAddresses\":\"Positional array of delegation addresses.\",\"_delegationMode\":\"The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\"}},\"delegationModeOf(address)\":{\"params\":{\"_who\":\"The address to get delegation mode.\"},\"returns\":{\"_0\":\"Delegation mode (NOTSET=0, PERCENTAGE=1, AMOUNT=2))\"}},\"revokeDelegationAt(address,address,uint256,uint256)\":{\"params\":{\"_balance\":\"The delegator's current balance\",\"_blockNumber\":\"The block number at which to revoke delegation.*\",\"_from\":\"The address of the delegator\",\"_who\":\"Address of the delegatee\"}},\"setCleanupBlockNumber(uint256)\":{\"params\":{\"_blockNumber\":\"The new cleanup block number.\"}},\"undelegateAll(address,uint256)\":{\"params\":{\"_from\":\"The address of the delegator*\"}},\"undelegateAllExplicit(address,address[])\":{\"params\":{\"_delegateAddresses\":\"Explicit delegation does not store delegatees' addresses,    so the caller must supply them.\",\"_from\":\"The address of the delegator\"},\"returns\":{\"_0\":\"The amount still delegated (in case the list of delegates was incomplete).\"}},\"undelegatedVotePowerOf(address,uint256)\":{\"params\":{\"_balance\":\"Owner's current balance\",\"_owner\":\"The address to get undelegated voting power.\"},\"returns\":{\"_0\":\"The unallocated vote power of `_owner`\"}},\"undelegatedVotePowerOfAt(address,uint256,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get undelegated voting power.\"},\"returns\":{\"_0\":\"The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)\"}},\"votePowerFromTo(address,address,uint256)\":{\"params\":{\"_balance\":\"The delegator's current balance\",\"_from\":\"Address of delegator\",\"_to\":\"Address of delegatee\"},\"returns\":{\"_0\":\"The delegated vote power.\"}},\"votePowerFromToAt(address,address,uint256,uint256)\":{\"params\":{\"_balance\":\"The delegator's current balance\",\"_blockNumber\":\"The block number at which to fetch.\",\"_from\":\"Address of delegator\",\"_to\":\"Address of delegatee\"},\"returns\":{\"_0\":\"The delegated vote power.\"}},\"votePowerOf(address)\":{\"params\":{\"_who\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Current vote power of `_who`.\"}},\"votePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_who\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_who` at `_blockNumber`.\"}},\"votePowerOfAtCached(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_who\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_who` at `_blockNumber`.\"}},\"votePowerOfAtIgnoringRevocation(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_who\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_who` at `_blockNumber`. Result doesn't change if vote power is revoked.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Delegate(address,address,uint256,uint256)\":{\"notice\":\"Event triggered when an account delegates or undelegates another account.  Definition: `votePowerFromTo(from, to)` is `changed` from `priorVotePower` to `newVotePower`. For undelegation, `newVotePower` is 0. Note: the event is always emitted from VPToken's `writeVotePowerContract`.\"},\"Revoke(address,address,uint256,uint256)\":{\"notice\":\"Event triggered only when account `delegator` revokes delegation to `delegatee` for a single block in the past (typically the current vote block). Note: the event is always emitted from VPToken's `writeVotePowerContract` and/or `readVotePowerContract`.\"}},\"kind\":\"user\",\"methods\":{\"batchVotePowerOfAt(address[],uint256)\":{\"notice\":\"Return vote powers for several addresses in a batch.\"},\"cleanupBlockNumber()\":{\"notice\":\"Get the current cleanup block number.\"},\"delegate(address,address,uint256,uint256)\":{\"notice\":\"Delegate `_bips` percentage of voting power to `_to` from `_from`\"},\"delegateExplicit(address,address,uint256,uint256)\":{\"notice\":\"Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\"},\"delegatesOf(address)\":{\"notice\":\"Get the vote power delegation `_delegateAddresses`   and `pcts` of an `_owner`. Returned in two separate positional arrays.\"},\"delegatesOfAt(address,uint256)\":{\"notice\":\"Get the vote power delegation `delegationAddresses`   and `pcts` of an `_owner`. Returned in two separate positional arrays.\"},\"delegationModeOf(address)\":{\"notice\":\"Get the delegation mode for '_who'. This mode determines whether vote power is  allocated by percentage or by explicit value.\"},\"isReplacement()\":{\"notice\":\"Return true if this IIVPContract is configured to be used as a replacement for other contract. It means that vote powers are not necessarily correct at the initialization, therefore every method that reads vote power must check whether it is initialized for that address and block.\"},\"ownerToken()\":{\"notice\":\"The VPToken (or some other contract) that owns this VPContract. All state changing methods may be called only from this address. This is because original msg.sender is sent in `_from` parameter and we must be sure that it cannot be faked by directly calling VPContract. Owner token is also used in case of replacement to recover vote powers from balances.\"},\"revokeDelegationAt(address,address,uint256,uint256)\":{\"notice\":\"Revoke all delegation from sender to `_who` at given block.     Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.    Block `_blockNumber` must be in the past.     This method should be used only to prevent rogue delegate voting in the current voting block.    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\"},\"setCleanerContract(address)\":{\"notice\":\"Set the contract that is allowed to call history cleaning methods.\"},\"setCleanupBlockNumber(uint256)\":{\"notice\":\"Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased, history before that block should never be used since it can be inconsistent. In particular, cleanup block number must be before current vote power block.\"},\"undelegateAll(address,uint256)\":{\"notice\":\"Undelegate all voting power for delegates of `msg.sender`    Can only be used with percentage delegation.    Does not reset delegation mode back to NOTSET.\"},\"undelegateAllExplicit(address,address[])\":{\"notice\":\"Undelegate all explicit vote power by amount delegates for `msg.sender`.    Can only be used with explicit delegation.    Does not reset delegation mode back to NOTSET.\"},\"undelegatedVotePowerOf(address,uint256)\":{\"notice\":\"Compute the current undelegated vote power of `_owner`\"},\"undelegatedVotePowerOfAt(address,uint256,uint256)\":{\"notice\":\"Get the undelegated vote power of `_owner` at given block.\"},\"updateAtTokenTransfer(address,address,uint256,uint256,uint256)\":{\"notice\":\"Update vote powers when tokens are transfered. Also update delegated vote powers for percentage delegation and check for enough funds for explicit delegations.*\"},\"votePowerFromTo(address,address,uint256)\":{\"notice\":\"Get current delegated vote power `_from` delegator delegated `_to` delegatee.\"},\"votePowerFromToAt(address,address,uint256,uint256)\":{\"notice\":\"Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\"},\"votePowerOf(address)\":{\"notice\":\"Get the current vote power of `_who`.\"},\"votePowerOfAt(address,uint256)\":{\"notice\":\"Get the vote power of `_who` at block `_blockNumber`\"},\"votePowerOfAtCached(address,uint256)\":{\"notice\":\"Get the vote power of `_who` at block `_blockNumber`   Reads/updates cache and upholds revocations.\"},\"votePowerOfAtIgnoringRevocation(address,uint256)\":{\"notice\":\"Get the vote power of `_who` at block `_blockNumber`, ignoring revocation information (and cache).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol\":\"IIVPContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol\":{\"keccak256\":\"0x6eb8619a51e0e00a93b32055e4f43d64f050b129e31bf0e161584d79cfbc5dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5b8f39e1cb4f5a861e6468b4340ee57272d329488340fac71418e8c9936984\",\"dweb:/ipfs/QmdKDZkCAEjMeL233hsFTvGLG6rZzn6XVNnopKLV2iz4g8\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Delegate(address,address,uint256,uint256)": {
								"notice": "Event triggered when an account delegates or undelegates another account.  Definition: `votePowerFromTo(from, to)` is `changed` from `priorVotePower` to `newVotePower`. For undelegation, `newVotePower` is 0. Note: the event is always emitted from VPToken's `writeVotePowerContract`."
							},
							"Revoke(address,address,uint256,uint256)": {
								"notice": "Event triggered only when account `delegator` revokes delegation to `delegatee` for a single block in the past (typically the current vote block). Note: the event is always emitted from VPToken's `writeVotePowerContract` and/or `readVotePowerContract`."
							}
						},
						"kind": "user",
						"methods": {
							"batchVotePowerOfAt(address[],uint256)": {
								"notice": "Return vote powers for several addresses in a batch."
							},
							"cleanupBlockNumber()": {
								"notice": "Get the current cleanup block number."
							},
							"delegate(address,address,uint256,uint256)": {
								"notice": "Delegate `_bips` percentage of voting power to `_to` from `_from`"
							},
							"delegateExplicit(address,address,uint256,uint256)": {
								"notice": "Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`."
							},
							"delegatesOf(address)": {
								"notice": "Get the vote power delegation `_delegateAddresses`   and `pcts` of an `_owner`. Returned in two separate positional arrays."
							},
							"delegatesOfAt(address,uint256)": {
								"notice": "Get the vote power delegation `delegationAddresses`   and `pcts` of an `_owner`. Returned in two separate positional arrays."
							},
							"delegationModeOf(address)": {
								"notice": "Get the delegation mode for '_who'. This mode determines whether vote power is  allocated by percentage or by explicit value."
							},
							"isReplacement()": {
								"notice": "Return true if this IIVPContract is configured to be used as a replacement for other contract. It means that vote powers are not necessarily correct at the initialization, therefore every method that reads vote power must check whether it is initialized for that address and block."
							},
							"ownerToken()": {
								"notice": "The VPToken (or some other contract) that owns this VPContract. All state changing methods may be called only from this address. This is because original msg.sender is sent in `_from` parameter and we must be sure that it cannot be faked by directly calling VPContract. Owner token is also used in case of replacement to recover vote powers from balances."
							},
							"revokeDelegationAt(address,address,uint256,uint256)": {
								"notice": "Revoke all delegation from sender to `_who` at given block.     Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.    Block `_blockNumber` must be in the past.     This method should be used only to prevent rogue delegate voting in the current voting block.    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit."
							},
							"setCleanerContract(address)": {
								"notice": "Set the contract that is allowed to call history cleaning methods."
							},
							"setCleanupBlockNumber(uint256)": {
								"notice": "Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased, history before that block should never be used since it can be inconsistent. In particular, cleanup block number must be before current vote power block."
							},
							"undelegateAll(address,uint256)": {
								"notice": "Undelegate all voting power for delegates of `msg.sender`    Can only be used with percentage delegation.    Does not reset delegation mode back to NOTSET."
							},
							"undelegateAllExplicit(address,address[])": {
								"notice": "Undelegate all explicit vote power by amount delegates for `msg.sender`.    Can only be used with explicit delegation.    Does not reset delegation mode back to NOTSET."
							},
							"undelegatedVotePowerOf(address,uint256)": {
								"notice": "Compute the current undelegated vote power of `_owner`"
							},
							"undelegatedVotePowerOfAt(address,uint256,uint256)": {
								"notice": "Get the undelegated vote power of `_owner` at given block."
							},
							"updateAtTokenTransfer(address,address,uint256,uint256,uint256)": {
								"notice": "Update vote powers when tokens are transfered. Also update delegated vote powers for percentage delegation and check for enough funds for explicit delegations.*"
							},
							"votePowerFromTo(address,address,uint256)": {
								"notice": "Get current delegated vote power `_from` delegator delegated `_to` delegatee."
							},
							"votePowerFromToAt(address,address,uint256,uint256)": {
								"notice": "Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`."
							},
							"votePowerOf(address)": {
								"notice": "Get the current vote power of `_who`."
							},
							"votePowerOfAt(address,uint256)": {
								"notice": "Get the vote power of `_who` at block `_blockNumber`"
							},
							"votePowerOfAtCached(address,uint256)": {
								"notice": "Get the vote power of `_who` at block `_blockNumber`   Reads/updates cache and upholds revocations."
							},
							"votePowerOfAtIgnoringRevocation(address,uint256)": {
								"notice": "Get the vote power of `_who` at block `_blockNumber`, ignoring revocation information (and cache)."
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol": {
				"IIVPToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_delegatees",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								}
							],
							"name": "batchDelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "batchVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cleanupBlockNumber",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_bips",
									"type": "uint256"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "delegateExplicit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "delegatesOf",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_delegationMode",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "delegatesOfAt",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_delegationMode",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "delegationModeOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceVotePower",
							"outputs": [
								{
									"internalType": "contract IGovernanceVotePower",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "readVotePowerContract",
							"outputs": [
								{
									"internalType": "contract IVPContractEvents",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "revokeDelegationAt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cleanerContract",
									"type": "address"
								}
							],
							"name": "setCleanerContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "setCleanupBlockNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cleanupBlockNumberManager",
									"type": "address"
								}
							],
							"name": "setCleanupBlockNumberManager",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IIGovernanceVotePower",
									"name": "_governanceVotePower",
									"type": "address"
								}
							],
							"name": "setGovernanceVotePower",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVotePower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "undelegateAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								}
							],
							"name": "undelegateAllExplicit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "undelegatedVotePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "undelegatedVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "votePowerFromTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerFromToAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "votePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtCached",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtIgnoringRevocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "writeVotePowerContract",
							"outputs": [
								{
									"internalType": "contract IVPContractEvents",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"balanceOfAt(address,uint256)": {
								"details": "Queries the token balance of `_owner` at a specific `_blockNumber`.",
								"params": {
									"_blockNumber": "The block number when the balance is queried.",
									"_owner": "The address from which the balance will be retrieved."
								},
								"returns": {
									"_0": "The balance at `_blockNumber`.*"
								}
							},
							"batchDelegate(address[],uint256[])": {
								"params": {
									"_bips": "The percentages of voting power to be delegated expressed in basis points (1/100 of one percent).   Total of all `_bips` values must be at most 10000.*",
									"_delegatees": "The addresses of the new recipients."
								}
							},
							"batchVotePowerOfAt(address[],uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owners": "The list of addresses to fetch vote power of."
								},
								"returns": {
									"_0": "A list of vote powers."
								}
							},
							"decimals()": {
								"details": "Should be compatible with ERC20 method"
							},
							"delegate(address,uint256)": {
								"params": {
									"_bips": "The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*",
									"_to": "The address of the recipient"
								}
							},
							"delegateExplicit(address,uint256)": {
								"params": {
									"_amount": "An explicit vote power amount to be delegated.   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*",
									"_to": "The address of the recipient"
								}
							},
							"delegatesOf(address)": {
								"params": {
									"_who": "The address to get delegations."
								},
								"returns": {
									"_bips": "Positional array of delegation percents specified in basis points (1/100 or 1 percent)",
									"_count": "The number of delegates.",
									"_delegateAddresses": "Positional array of delegation addresses.",
									"_delegationMode": "The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
								}
							},
							"delegatesOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block for which we want to know the delegations.",
									"_who": "The address to get delegations."
								},
								"returns": {
									"_bips": "Positional array of delegation percents specified in basis points (1/100 or 1 percent)",
									"_count": "The number of delegates.",
									"_delegateAddresses": "Positional array of delegation addresses.",
									"_delegationMode": "The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
								}
							},
							"delegationModeOf(address)": {
								"params": {
									"_who": "The address to get delegation mode."
								},
								"returns": {
									"_0": "delegation mode: 0 = NOTSET, 1 = PERCENTAGE, 2 = AMOUNT (i.e. explicit)"
								}
							},
							"name()": {
								"details": "Should be compatible with ERC20 method"
							},
							"revokeDelegationAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to revoke delegation.",
									"_who": "Address of the delegatee"
								}
							},
							"setCleanupBlockNumber(uint256)": {
								"params": {
									"_blockNumber": "The new cleanup block number."
								}
							},
							"symbol()": {
								"details": "Should be compatible with ERC20 method"
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"totalSupplyAt(uint256)": {
								"params": {
									"_blockNumber": "The block number when the totalSupply is queried"
								},
								"returns": {
									"_0": "The total amount of tokens at `_blockNumber`*"
								}
							},
							"totalVotePower()": {
								"returns": {
									"_0": "The current total vote power (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAt(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block  (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAtCached(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block (sum of all accounts' vote powers)."
								}
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"undelegateAllExplicit(address[])": {
								"params": {
									"_delegateAddresses": "Explicit delegation does not store delegatees' addresses,    so the caller must supply them."
								},
								"returns": {
									"_0": "The amount still delegated (in case the list of delegates was incomplete)."
								}
							},
							"undelegatedVotePowerOf(address)": {
								"params": {
									"_owner": "The address to get undelegated voting power."
								},
								"returns": {
									"_0": "The unallocated vote power of `_owner`"
								}
							},
							"undelegatedVotePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get undelegated voting power."
								},
								"returns": {
									"_0": "The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)"
								}
							},
							"votePowerFromTo(address,address)": {
								"params": {
									"_from": "Address of delegator",
									"_to": "Address of delegatee"
								},
								"returns": {
									"_0": "The delegated vote power."
								}
							},
							"votePowerFromToAt(address,address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_from": "Address of delegator",
									"_to": "Address of delegatee"
								},
								"returns": {
									"_0": "The delegated vote power."
								}
							},
							"votePowerOf(address)": {
								"params": {
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Current vote power of `_owner`."
								}
							},
							"votePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`."
								}
							},
							"votePowerOfAtCached(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`."
								}
							},
							"votePowerOfAtIgnoringRevocation(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`. Result doesn't change if vote power is revoked."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"batchDelegate(address[],uint256[])": "dc4fcda7",
							"batchVotePowerOfAt(address[],uint256)": "49e3c7e5",
							"cleanupBlockNumber()": "deea13e7",
							"decimals()": "313ce567",
							"delegate(address,uint256)": "026e402b",
							"delegateExplicit(address,uint256)": "d06dc3ad",
							"delegatesOf(address)": "7de5b8ed",
							"delegatesOfAt(address,uint256)": "ed475a79",
							"delegationModeOf(address)": "f6837767",
							"governanceVotePower()": "8c2b8ae1",
							"name()": "06fdde03",
							"readVotePowerContract()": "9b3baa0e",
							"revokeDelegationAt(address,uint256)": "bbd6fbf8",
							"setCleanerContract(address)": "f6a494af",
							"setCleanupBlockNumber(uint256)": "13de97f5",
							"setCleanupBlockNumberManager(address)": "7f4fcaa9",
							"setGovernanceVotePower(address)": "9ca2231a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"totalVotePower()": "f5f3d4f7",
							"totalVotePowerAt(uint256)": "3e5aa26a",
							"totalVotePowerAtCached(uint256)": "caeb942b",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"undelegateAll()": "b302f393",
							"undelegateAllExplicit(address[])": "5d6d11eb",
							"undelegatedVotePowerOf(address)": "d6aa0b77",
							"undelegatedVotePowerOfAt(address,uint256)": "83035a82",
							"votePowerFromTo(address,address)": "be0ca747",
							"votePowerFromToAt(address,address,uint256)": "e64767aa",
							"votePowerOf(address)": "142d1018",
							"votePowerOfAt(address,uint256)": "92bfe6d8",
							"votePowerOfAtCached(address,uint256)": "e587497e",
							"votePowerOfAtIgnoringRevocation(address,uint256)": "04bb4e43",
							"writeVotePowerContract()": "1fec092a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegatees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"}],\"name\":\"batchDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"batchVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cleanupBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bips\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"delegateExplicit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"delegatesOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationMode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"delegatesOfAt\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationMode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"delegationModeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceVotePower\",\"outputs\":[{\"internalType\":\"contract IGovernanceVotePower\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readVotePowerContract\",\"outputs\":[{\"internalType\":\"contract IVPContractEvents\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"revokeDelegationAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cleanerContract\",\"type\":\"address\"}],\"name\":\"setCleanerContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"setCleanupBlockNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cleanupBlockNumberManager\",\"type\":\"address\"}],\"name\":\"setCleanupBlockNumberManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIGovernanceVotePower\",\"name\":\"_governanceVotePower\",\"type\":\"address\"}],\"name\":\"setGovernanceVotePower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"undelegateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"}],\"name\":\"undelegateAllExplicit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"undelegatedVotePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"undelegatedVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"votePowerFromTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerFromToAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"votePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtCached\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtIgnoringRevocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"writeVotePowerContract\",\"outputs\":[{\"internalType\":\"contract IVPContractEvents\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the token balance of `_owner` at a specific `_blockNumber`.\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried.\",\"_owner\":\"The address from which the balance will be retrieved.\"},\"returns\":{\"_0\":\"The balance at `_blockNumber`.*\"}},\"batchDelegate(address[],uint256[])\":{\"params\":{\"_bips\":\"The percentages of voting power to be delegated expressed in basis points (1/100 of one percent).   Total of all `_bips` values must be at most 10000.*\",\"_delegatees\":\"The addresses of the new recipients.\"}},\"batchVotePowerOfAt(address[],uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owners\":\"The list of addresses to fetch vote power of.\"},\"returns\":{\"_0\":\"A list of vote powers.\"}},\"decimals()\":{\"details\":\"Should be compatible with ERC20 method\"},\"delegate(address,uint256)\":{\"params\":{\"_bips\":\"The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*\",\"_to\":\"The address of the recipient\"}},\"delegateExplicit(address,uint256)\":{\"params\":{\"_amount\":\"An explicit vote power amount to be delegated.   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*\",\"_to\":\"The address of the recipient\"}},\"delegatesOf(address)\":{\"params\":{\"_who\":\"The address to get delegations.\"},\"returns\":{\"_bips\":\"Positional array of delegation percents specified in basis points (1/100 or 1 percent)\",\"_count\":\"The number of delegates.\",\"_delegateAddresses\":\"Positional array of delegation addresses.\",\"_delegationMode\":\"The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\"}},\"delegatesOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block for which we want to know the delegations.\",\"_who\":\"The address to get delegations.\"},\"returns\":{\"_bips\":\"Positional array of delegation percents specified in basis points (1/100 or 1 percent)\",\"_count\":\"The number of delegates.\",\"_delegateAddresses\":\"Positional array of delegation addresses.\",\"_delegationMode\":\"The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\"}},\"delegationModeOf(address)\":{\"params\":{\"_who\":\"The address to get delegation mode.\"},\"returns\":{\"_0\":\"delegation mode: 0 = NOTSET, 1 = PERCENTAGE, 2 = AMOUNT (i.e. explicit)\"}},\"name()\":{\"details\":\"Should be compatible with ERC20 method\"},\"revokeDelegationAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to revoke delegation.\",\"_who\":\"Address of the delegatee\"}},\"setCleanupBlockNumber(uint256)\":{\"params\":{\"_blockNumber\":\"The new cleanup block number.\"}},\"symbol()\":{\"details\":\"Should be compatible with ERC20 method\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"returns\":{\"_0\":\"The total amount of tokens at `_blockNumber`*\"}},\"totalVotePower()\":{\"returns\":{\"_0\":\"The current total vote power (sum of all accounts' vote powers).\"}},\"totalVotePowerAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block  (sum of all accounts' vote powers).\"}},\"totalVotePowerAtCached(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block (sum of all accounts' vote powers).\"}},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"undelegateAllExplicit(address[])\":{\"params\":{\"_delegateAddresses\":\"Explicit delegation does not store delegatees' addresses,    so the caller must supply them.\"},\"returns\":{\"_0\":\"The amount still delegated (in case the list of delegates was incomplete).\"}},\"undelegatedVotePowerOf(address)\":{\"params\":{\"_owner\":\"The address to get undelegated voting power.\"},\"returns\":{\"_0\":\"The unallocated vote power of `_owner`\"}},\"undelegatedVotePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get undelegated voting power.\"},\"returns\":{\"_0\":\"The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)\"}},\"votePowerFromTo(address,address)\":{\"params\":{\"_from\":\"Address of delegator\",\"_to\":\"Address of delegatee\"},\"returns\":{\"_0\":\"The delegated vote power.\"}},\"votePowerFromToAt(address,address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_from\":\"Address of delegator\",\"_to\":\"Address of delegatee\"},\"returns\":{\"_0\":\"The delegated vote power.\"}},\"votePowerOf(address)\":{\"params\":{\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Current vote power of `_owner`.\"}},\"votePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`.\"}},\"votePowerOfAtCached(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`.\"}},\"votePowerOfAtIgnoringRevocation(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`. Result doesn't change if vote power is revoked.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchDelegate(address[],uint256[])\":{\"notice\":\"Undelegate all percentage delegations from the sender and then delegate corresponding    `_bips` percentage of voting power from the sender to each member of `_delegatees`.\"},\"batchVotePowerOfAt(address[],uint256)\":{\"notice\":\"Return vote powers for several addresses in a batch.\"},\"cleanupBlockNumber()\":{\"notice\":\"Get the current cleanup block number.\"},\"delegate(address,uint256)\":{\"notice\":\"Delegate by percentage `_bips` of voting power to `_to` from `msg.sender`.\"},\"delegateExplicit(address,uint256)\":{\"notice\":\"Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\"},\"delegatesOf(address)\":{\"notice\":\"Get the vote power delegation `delegationAddresses`   and `_bips` of `_who`. Returned in two separate positional arrays.\"},\"delegatesOfAt(address,uint256)\":{\"notice\":\"Get the vote power delegation `delegationAddresses`   and `pcts` of `_who`. Returned in two separate positional arrays.\"},\"delegationModeOf(address)\":{\"notice\":\"Get the delegation mode for '_who'. This mode determines whether vote power is  allocated by percentage or by explicit value. Once the delegation mode is set,   it never changes, even if all delegations are removed.\"},\"governanceVotePower()\":{\"notice\":\"When set, allows token owners to participate in governance voting and delegate governance vote power.\"},\"readVotePowerContract()\":{\"notice\":\"Returns VPContract used for readonly operations (view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`readVotePowerContract` is almost always equal to `writeVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before).You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Revoke` only).\"},\"revokeDelegationAt(address,uint256)\":{\"notice\":\"Revoke all delegation from sender to `_who` at given block.     Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.    Block `_blockNumber` must be in the past.     This method should be used only to prevent rogue delegate voting in the current voting block.    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\"},\"setCleanerContract(address)\":{\"notice\":\"Set the contract that is allowed to call history cleaning methods.\"},\"setCleanupBlockNumber(uint256)\":{\"notice\":\"Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased, history before that block should never be used since it can be inconsistent. In particular, cleanup block number must be before current vote power block.\"},\"setCleanupBlockNumberManager(address)\":{\"notice\":\"Set the contract that is allowed to set cleanupBlockNumber. Usually this will be an instance of CleanupBlockNumberManager.\"},\"setGovernanceVotePower(address)\":{\"notice\":\"Sets new governance vote power contract that allows token owners to participate in governance voting and delegate governance vote power. \"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"totalVotePower()\":{\"notice\":\"Get the current total vote power.\"},\"totalVotePowerAt(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber`\"},\"totalVotePowerAtCached(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if `_blockNumber` is in the past, otherwise reverts.    \"},\"undelegateAll()\":{\"notice\":\"Undelegate all voting power for delegates of `msg.sender`    Can only be used with percentage delegation.    Does not reset delegation mode back to NOTSET.*\"},\"undelegateAllExplicit(address[])\":{\"notice\":\"Undelegate all explicit vote power by amount delegates for `msg.sender`.    Can only be used with explicit delegation.    Does not reset delegation mode back to NOTSET.\"},\"undelegatedVotePowerOf(address)\":{\"notice\":\"Compute the current undelegated vote power of `_owner`\"},\"undelegatedVotePowerOfAt(address,uint256)\":{\"notice\":\"Get the undelegated vote power of `_owner` at given block.\"},\"votePowerFromTo(address,address)\":{\"notice\":\"Get current delegated vote power `_from` delegator delegated `_to` delegatee.\"},\"votePowerFromToAt(address,address,uint256)\":{\"notice\":\"Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\"},\"votePowerOf(address)\":{\"notice\":\"Get the current vote power of `_owner`.\"},\"votePowerOfAt(address,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber`\"},\"votePowerOfAtCached(address,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if _blockNumber is in the past, otherwise reverts.    \"},\"votePowerOfAtIgnoringRevocation(address,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber`, ignoring revocation information (and cache).\"},\"writeVotePowerContract()\":{\"notice\":\"Returns VPContract used for state changing operations (non-view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`writeVotePowerContract` is almost always equal to `readVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before). In the case of upgrade, `writeVotePowerContract` will be replaced first to establish delegations, and after some perio (e.g. after a reward epoch ends) `readVotePowerContract` will be set equal to it.You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Delegate` and `Revoke` only).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol\":\"IIVPToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":{\"keccak256\":\"0x8c70a1ae9079bb9d29c8e2dde781f546b6cb621f0b7cc943b9cbcbd52718bb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e89abe97c65481a1cacb59abcde6d18b127a89ed46f99402c30c6477ea0722\",\"dweb:/ipfs/Qmd6i71hUPHR11U1U8EvDwJyEg4xUZhLbDe7D4Z7LLrAZx\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol\":{\"keccak256\":\"0x5388cd6705f08a9d7a82be3d4c1aea3266df20eb5263b9f5ecf95e73338dc595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7a9b55b0d6dd4d053d702f897ea5272695006ae0ca25f3b3a1ccbf4e604fd9\",\"dweb:/ipfs/QmP1HtdwBY9ZJvDAQTEDZzCNBTrS2Rdk7QRy3An6PLMjd5\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol\":{\"keccak256\":\"0x6eb8619a51e0e00a93b32055e4f43d64f050b129e31bf0e161584d79cfbc5dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5b8f39e1cb4f5a861e6468b4340ee57272d329488340fac71418e8c9936984\",\"dweb:/ipfs/QmdKDZkCAEjMeL233hsFTvGLG6rZzn6XVNnopKLV2iz4g8\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol\":{\"keccak256\":\"0x49a647d1e8c394320c337b09f14b0ca70f43b0a1327233ddd9b8dcf7f005f92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb712e00e5801b8f1a1d2c05d4e46556bac15e227df7e21cd5c80ad1cc16192d\",\"dweb:/ipfs/QmUAGmvn65u4R165gPMbNoJwVFicCtAC2Ce6Y3f8PpTbTw\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"batchDelegate(address[],uint256[])": {
								"notice": "Undelegate all percentage delegations from the sender and then delegate corresponding    `_bips` percentage of voting power from the sender to each member of `_delegatees`."
							},
							"batchVotePowerOfAt(address[],uint256)": {
								"notice": "Return vote powers for several addresses in a batch."
							},
							"cleanupBlockNumber()": {
								"notice": "Get the current cleanup block number."
							},
							"delegate(address,uint256)": {
								"notice": "Delegate by percentage `_bips` of voting power to `_to` from `msg.sender`."
							},
							"delegateExplicit(address,uint256)": {
								"notice": "Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`."
							},
							"delegatesOf(address)": {
								"notice": "Get the vote power delegation `delegationAddresses`   and `_bips` of `_who`. Returned in two separate positional arrays."
							},
							"delegatesOfAt(address,uint256)": {
								"notice": "Get the vote power delegation `delegationAddresses`   and `pcts` of `_who`. Returned in two separate positional arrays."
							},
							"delegationModeOf(address)": {
								"notice": "Get the delegation mode for '_who'. This mode determines whether vote power is  allocated by percentage or by explicit value. Once the delegation mode is set,   it never changes, even if all delegations are removed."
							},
							"governanceVotePower()": {
								"notice": "When set, allows token owners to participate in governance voting and delegate governance vote power."
							},
							"readVotePowerContract()": {
								"notice": "Returns VPContract used for readonly operations (view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`readVotePowerContract` is almost always equal to `writeVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before).You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Revoke` only)."
							},
							"revokeDelegationAt(address,uint256)": {
								"notice": "Revoke all delegation from sender to `_who` at given block.     Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.    Block `_blockNumber` must be in the past.     This method should be used only to prevent rogue delegate voting in the current voting block.    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit."
							},
							"setCleanerContract(address)": {
								"notice": "Set the contract that is allowed to call history cleaning methods."
							},
							"setCleanupBlockNumber(uint256)": {
								"notice": "Set the cleanup block number. Historic data for the blocks before `cleanupBlockNumber` can be erased, history before that block should never be used since it can be inconsistent. In particular, cleanup block number must be before current vote power block."
							},
							"setCleanupBlockNumberManager(address)": {
								"notice": "Set the contract that is allowed to set cleanupBlockNumber. Usually this will be an instance of CleanupBlockNumberManager."
							},
							"setGovernanceVotePower(address)": {
								"notice": "Sets new governance vote power contract that allows token owners to participate in governance voting and delegate governance vote power. "
							},
							"totalSupplyAt(uint256)": {
								"notice": "Total amount of tokens at a specific `_blockNumber`."
							},
							"totalVotePower()": {
								"notice": "Get the current total vote power."
							},
							"totalVotePowerAt(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber`"
							},
							"totalVotePowerAtCached(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if `_blockNumber` is in the past, otherwise reverts.    "
							},
							"undelegateAll()": {
								"notice": "Undelegate all voting power for delegates of `msg.sender`    Can only be used with percentage delegation.    Does not reset delegation mode back to NOTSET.*"
							},
							"undelegateAllExplicit(address[])": {
								"notice": "Undelegate all explicit vote power by amount delegates for `msg.sender`.    Can only be used with explicit delegation.    Does not reset delegation mode back to NOTSET."
							},
							"undelegatedVotePowerOf(address)": {
								"notice": "Compute the current undelegated vote power of `_owner`"
							},
							"undelegatedVotePowerOfAt(address,uint256)": {
								"notice": "Get the undelegated vote power of `_owner` at given block."
							},
							"votePowerFromTo(address,address)": {
								"notice": "Get current delegated vote power `_from` delegator delegated `_to` delegatee."
							},
							"votePowerFromToAt(address,address,uint256)": {
								"notice": "Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`."
							},
							"votePowerOf(address)": {
								"notice": "Get the current vote power of `_owner`."
							},
							"votePowerOfAt(address,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber`"
							},
							"votePowerOfAtCached(address,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber` using cache.   It tries to read the cached value and if not found, reads the actual value and stores it in cache.   Can only be used if _blockNumber is in the past, otherwise reverts.    "
							},
							"votePowerOfAtIgnoringRevocation(address,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber`, ignoring revocation information (and cache)."
							},
							"writeVotePowerContract()": {
								"notice": "Returns VPContract used for state changing operations (non-view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`writeVotePowerContract` is almost always equal to `readVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before). In the case of upgrade, `writeVotePowerContract` will be replaced first to establish delegations, and after some perio (e.g. after a reward epoch ends) `readVotePowerContract` will be set equal to it.You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Delegate` and `Revoke` only)."
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol": {
				"IVPContractEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "priorVotePower",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newVotePower",
									"type": "uint256"
								}
							],
							"name": "Delegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatee",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votePower",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "blockNumber",
									"type": "uint256"
								}
							],
							"name": "Revoke",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priorVotePower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotePower\",\"type\":\"uint256\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votePower\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Delegate(address,address,uint256,uint256)\":{\"notice\":\"Event triggered when an account delegates or undelegates another account.  Definition: `votePowerFromTo(from, to)` is `changed` from `priorVotePower` to `newVotePower`. For undelegation, `newVotePower` is 0. Note: the event is always emitted from VPToken's `writeVotePowerContract`.\"},\"Revoke(address,address,uint256,uint256)\":{\"notice\":\"Event triggered only when account `delegator` revokes delegation to `delegatee` for a single block in the past (typically the current vote block). Note: the event is always emitted from VPToken's `writeVotePowerContract` and/or `readVotePowerContract`.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":\"IVPContractEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Delegate(address,address,uint256,uint256)": {
								"notice": "Event triggered when an account delegates or undelegates another account.  Definition: `votePowerFromTo(from, to)` is `changed` from `priorVotePower` to `newVotePower`. For undelegation, `newVotePower` is 0. Note: the event is always emitted from VPToken's `writeVotePowerContract`."
							},
							"Revoke(address,address,uint256,uint256)": {
								"notice": "Event triggered only when account `delegator` revokes delegation to `delegatee` for a single block in the past (typically the current vote block). Note: the event is always emitted from VPToken's `writeVotePowerContract` and/or `readVotePowerContract`."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol": {
				"IVPToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "balanceOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_delegatees",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								}
							],
							"name": "batchDelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_bips",
									"type": "uint256"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "delegateExplicit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "delegatesOf",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_delegationMode",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "delegatesOfAt",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_bips",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "_count",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_delegationMode",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								}
							],
							"name": "delegationModeOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "governanceVotePower",
							"outputs": [
								{
									"internalType": "contract IGovernanceVotePower",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "readVotePowerContract",
							"outputs": [
								{
									"internalType": "contract IVPContractEvents",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_who",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "revokeDelegationAt",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalSupplyAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalVotePower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "totalVotePowerAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "undelegateAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_delegateAddresses",
									"type": "address[]"
								}
							],
							"name": "undelegateAllExplicit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "undelegatedVotePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "undelegatedVotePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "votePowerFromTo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerFromToAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "votePowerOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_blockNumber",
									"type": "uint256"
								}
							],
							"name": "votePowerOfAtIgnoringRevocation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "writeVotePowerContract",
							"outputs": [
								{
									"internalType": "contract IVPContractEvents",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"balanceOfAt(address,uint256)": {
								"details": "Queries the token balance of `_owner` at a specific `_blockNumber`.",
								"params": {
									"_blockNumber": "The block number when the balance is queried.",
									"_owner": "The address from which the balance will be retrieved."
								},
								"returns": {
									"_0": "The balance at `_blockNumber`.*"
								}
							},
							"batchDelegate(address[],uint256[])": {
								"params": {
									"_bips": "The percentages of voting power to be delegated expressed in basis points (1/100 of one percent).   Total of all `_bips` values must be at most 10000.*",
									"_delegatees": "The addresses of the new recipients."
								}
							},
							"decimals()": {
								"details": "Should be compatible with ERC20 method"
							},
							"delegate(address,uint256)": {
								"params": {
									"_bips": "The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*",
									"_to": "The address of the recipient"
								}
							},
							"delegateExplicit(address,uint256)": {
								"params": {
									"_amount": "An explicit vote power amount to be delegated.   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*",
									"_to": "The address of the recipient"
								}
							},
							"delegatesOf(address)": {
								"params": {
									"_who": "The address to get delegations."
								},
								"returns": {
									"_bips": "Positional array of delegation percents specified in basis points (1/100 or 1 percent)",
									"_count": "The number of delegates.",
									"_delegateAddresses": "Positional array of delegation addresses.",
									"_delegationMode": "The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
								}
							},
							"delegatesOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block for which we want to know the delegations.",
									"_who": "The address to get delegations."
								},
								"returns": {
									"_bips": "Positional array of delegation percents specified in basis points (1/100 or 1 percent)",
									"_count": "The number of delegates.",
									"_delegateAddresses": "Positional array of delegation addresses.",
									"_delegationMode": "The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
								}
							},
							"delegationModeOf(address)": {
								"params": {
									"_who": "The address to get delegation mode."
								},
								"returns": {
									"_0": "delegation mode: 0 = NOTSET, 1 = PERCENTAGE, 2 = AMOUNT (i.e. explicit)"
								}
							},
							"name()": {
								"details": "Should be compatible with ERC20 method"
							},
							"revokeDelegationAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to revoke delegation.",
									"_who": "Address of the delegatee"
								}
							},
							"symbol()": {
								"details": "Should be compatible with ERC20 method"
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"totalSupplyAt(uint256)": {
								"params": {
									"_blockNumber": "The block number when the totalSupply is queried"
								},
								"returns": {
									"_0": "The total amount of tokens at `_blockNumber`*"
								}
							},
							"totalVotePower()": {
								"returns": {
									"_0": "The current total vote power (sum of all accounts' vote powers)."
								}
							},
							"totalVotePowerAt(uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch."
								},
								"returns": {
									"_0": "The total vote power at the block  (sum of all accounts' vote powers)."
								}
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"undelegateAllExplicit(address[])": {
								"params": {
									"_delegateAddresses": "Explicit delegation does not store delegatees' addresses,    so the caller must supply them."
								},
								"returns": {
									"_0": "The amount still delegated (in case the list of delegates was incomplete)."
								}
							},
							"undelegatedVotePowerOf(address)": {
								"params": {
									"_owner": "The address to get undelegated voting power."
								},
								"returns": {
									"_0": "The unallocated vote power of `_owner`"
								}
							},
							"undelegatedVotePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get undelegated voting power."
								},
								"returns": {
									"_0": "The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)"
								}
							},
							"votePowerFromTo(address,address)": {
								"params": {
									"_from": "Address of delegator",
									"_to": "Address of delegatee"
								},
								"returns": {
									"_0": "The delegated vote power."
								}
							},
							"votePowerFromToAt(address,address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_from": "Address of delegator",
									"_to": "Address of delegatee"
								},
								"returns": {
									"_0": "The delegated vote power."
								}
							},
							"votePowerOf(address)": {
								"params": {
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Current vote power of `_owner`."
								}
							},
							"votePowerOfAt(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`."
								}
							},
							"votePowerOfAtIgnoringRevocation(address,uint256)": {
								"params": {
									"_blockNumber": "The block number at which to fetch.",
									"_owner": "The address to get voting power."
								},
								"returns": {
									"_0": "Vote power of `_owner` at `_blockNumber`. Result doesn't change if vote power is revoked."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfAt(address,uint256)": "4ee2cd7e",
							"batchDelegate(address[],uint256[])": "dc4fcda7",
							"decimals()": "313ce567",
							"delegate(address,uint256)": "026e402b",
							"delegateExplicit(address,uint256)": "d06dc3ad",
							"delegatesOf(address)": "7de5b8ed",
							"delegatesOfAt(address,uint256)": "ed475a79",
							"delegationModeOf(address)": "f6837767",
							"governanceVotePower()": "8c2b8ae1",
							"name()": "06fdde03",
							"readVotePowerContract()": "9b3baa0e",
							"revokeDelegationAt(address,uint256)": "bbd6fbf8",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"totalSupplyAt(uint256)": "981b24d0",
							"totalVotePower()": "f5f3d4f7",
							"totalVotePowerAt(uint256)": "3e5aa26a",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"undelegateAll()": "b302f393",
							"undelegateAllExplicit(address[])": "5d6d11eb",
							"undelegatedVotePowerOf(address)": "d6aa0b77",
							"undelegatedVotePowerOfAt(address,uint256)": "83035a82",
							"votePowerFromTo(address,address)": "be0ca747",
							"votePowerFromToAt(address,address,uint256)": "e64767aa",
							"votePowerOf(address)": "142d1018",
							"votePowerOfAt(address,uint256)": "92bfe6d8",
							"votePowerOfAtIgnoringRevocation(address,uint256)": "04bb4e43",
							"writeVotePowerContract()": "1fec092a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegatees\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"}],\"name\":\"batchDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bips\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"delegateExplicit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"delegatesOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationMode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"delegatesOfAt\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bips\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_delegationMode\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"delegationModeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceVotePower\",\"outputs\":[{\"internalType\":\"contract IGovernanceVotePower\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readVotePowerContract\",\"outputs\":[{\"internalType\":\"contract IVPContractEvents\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"revokeDelegationAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVotePower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotePowerAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"undelegateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_delegateAddresses\",\"type\":\"address[]\"}],\"name\":\"undelegateAllExplicit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"undelegatedVotePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"undelegatedVotePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"votePowerFromTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerFromToAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"votePowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votePowerOfAtIgnoringRevocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"writeVotePowerContract\",\"outputs\":[{\"internalType\":\"contract IVPContractEvents\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the token balance of `_owner` at a specific `_blockNumber`.\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried.\",\"_owner\":\"The address from which the balance will be retrieved.\"},\"returns\":{\"_0\":\"The balance at `_blockNumber`.*\"}},\"batchDelegate(address[],uint256[])\":{\"params\":{\"_bips\":\"The percentages of voting power to be delegated expressed in basis points (1/100 of one percent).   Total of all `_bips` values must be at most 10000.*\",\"_delegatees\":\"The addresses of the new recipients.\"}},\"decimals()\":{\"details\":\"Should be compatible with ERC20 method\"},\"delegate(address,uint256)\":{\"params\":{\"_bips\":\"The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*\",\"_to\":\"The address of the recipient\"}},\"delegateExplicit(address,uint256)\":{\"params\":{\"_amount\":\"An explicit vote power amount to be delegated.   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*\",\"_to\":\"The address of the recipient\"}},\"delegatesOf(address)\":{\"params\":{\"_who\":\"The address to get delegations.\"},\"returns\":{\"_bips\":\"Positional array of delegation percents specified in basis points (1/100 or 1 percent)\",\"_count\":\"The number of delegates.\",\"_delegateAddresses\":\"Positional array of delegation addresses.\",\"_delegationMode\":\"The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\"}},\"delegatesOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block for which we want to know the delegations.\",\"_who\":\"The address to get delegations.\"},\"returns\":{\"_bips\":\"Positional array of delegation percents specified in basis points (1/100 or 1 percent)\",\"_count\":\"The number of delegates.\",\"_delegateAddresses\":\"Positional array of delegation addresses.\",\"_delegationMode\":\"The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2).\"}},\"delegationModeOf(address)\":{\"params\":{\"_who\":\"The address to get delegation mode.\"},\"returns\":{\"_0\":\"delegation mode: 0 = NOTSET, 1 = PERCENTAGE, 2 = AMOUNT (i.e. explicit)\"}},\"name()\":{\"details\":\"Should be compatible with ERC20 method\"},\"revokeDelegationAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to revoke delegation.\",\"_who\":\"Address of the delegatee\"}},\"symbol()\":{\"details\":\"Should be compatible with ERC20 method\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"returns\":{\"_0\":\"The total amount of tokens at `_blockNumber`*\"}},\"totalVotePower()\":{\"returns\":{\"_0\":\"The current total vote power (sum of all accounts' vote powers).\"}},\"totalVotePowerAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\"},\"returns\":{\"_0\":\"The total vote power at the block  (sum of all accounts' vote powers).\"}},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"undelegateAllExplicit(address[])\":{\"params\":{\"_delegateAddresses\":\"Explicit delegation does not store delegatees' addresses,    so the caller must supply them.\"},\"returns\":{\"_0\":\"The amount still delegated (in case the list of delegates was incomplete).\"}},\"undelegatedVotePowerOf(address)\":{\"params\":{\"_owner\":\"The address to get undelegated voting power.\"},\"returns\":{\"_0\":\"The unallocated vote power of `_owner`\"}},\"undelegatedVotePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get undelegated voting power.\"},\"returns\":{\"_0\":\"The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)\"}},\"votePowerFromTo(address,address)\":{\"params\":{\"_from\":\"Address of delegator\",\"_to\":\"Address of delegatee\"},\"returns\":{\"_0\":\"The delegated vote power.\"}},\"votePowerFromToAt(address,address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_from\":\"Address of delegator\",\"_to\":\"Address of delegatee\"},\"returns\":{\"_0\":\"The delegated vote power.\"}},\"votePowerOf(address)\":{\"params\":{\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Current vote power of `_owner`.\"}},\"votePowerOfAt(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`.\"}},\"votePowerOfAtIgnoringRevocation(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number at which to fetch.\",\"_owner\":\"The address to get voting power.\"},\"returns\":{\"_0\":\"Vote power of `_owner` at `_blockNumber`. Result doesn't change if vote power is revoked.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchDelegate(address[],uint256[])\":{\"notice\":\"Undelegate all percentage delegations from the sender and then delegate corresponding    `_bips` percentage of voting power from the sender to each member of `_delegatees`.\"},\"delegate(address,uint256)\":{\"notice\":\"Delegate by percentage `_bips` of voting power to `_to` from `msg.sender`.\"},\"delegateExplicit(address,uint256)\":{\"notice\":\"Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\"},\"delegatesOf(address)\":{\"notice\":\"Get the vote power delegation `delegationAddresses`   and `_bips` of `_who`. Returned in two separate positional arrays.\"},\"delegatesOfAt(address,uint256)\":{\"notice\":\"Get the vote power delegation `delegationAddresses`   and `pcts` of `_who`. Returned in two separate positional arrays.\"},\"delegationModeOf(address)\":{\"notice\":\"Get the delegation mode for '_who'. This mode determines whether vote power is  allocated by percentage or by explicit value. Once the delegation mode is set,   it never changes, even if all delegations are removed.\"},\"governanceVotePower()\":{\"notice\":\"When set, allows token owners to participate in governance voting and delegate governance vote power.\"},\"readVotePowerContract()\":{\"notice\":\"Returns VPContract used for readonly operations (view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`readVotePowerContract` is almost always equal to `writeVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before).You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Revoke` only).\"},\"revokeDelegationAt(address,uint256)\":{\"notice\":\"Revoke all delegation from sender to `_who` at given block.     Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.    Block `_blockNumber` must be in the past.     This method should be used only to prevent rogue delegate voting in the current voting block.    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"totalVotePower()\":{\"notice\":\"Get the current total vote power.\"},\"totalVotePowerAt(uint256)\":{\"notice\":\"Get the total vote power at block `_blockNumber`\"},\"undelegateAll()\":{\"notice\":\"Undelegate all voting power for delegates of `msg.sender`    Can only be used with percentage delegation.    Does not reset delegation mode back to NOTSET.*\"},\"undelegateAllExplicit(address[])\":{\"notice\":\"Undelegate all explicit vote power by amount delegates for `msg.sender`.    Can only be used with explicit delegation.    Does not reset delegation mode back to NOTSET.\"},\"undelegatedVotePowerOf(address)\":{\"notice\":\"Compute the current undelegated vote power of `_owner`\"},\"undelegatedVotePowerOfAt(address,uint256)\":{\"notice\":\"Get the undelegated vote power of `_owner` at given block.\"},\"votePowerFromTo(address,address)\":{\"notice\":\"Get current delegated vote power `_from` delegator delegated `_to` delegatee.\"},\"votePowerFromToAt(address,address,uint256)\":{\"notice\":\"Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\"},\"votePowerOf(address)\":{\"notice\":\"Get the current vote power of `_owner`.\"},\"votePowerOfAt(address,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber`\"},\"votePowerOfAtIgnoringRevocation(address,uint256)\":{\"notice\":\"Get the vote power of `_owner` at block `_blockNumber`, ignoring revocation information (and cache).\"},\"writeVotePowerContract()\":{\"notice\":\"Returns VPContract used for state changing operations (non-view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`writeVotePowerContract` is almost always equal to `readVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before). In the case of upgrade, `writeVotePowerContract` will be replaced first to establish delegations, and after some perio (e.g. after a reward epoch ends) `readVotePowerContract` will be set equal to it.You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Delegate` and `Revoke` only).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":\"IVPToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"batchDelegate(address[],uint256[])": {
								"notice": "Undelegate all percentage delegations from the sender and then delegate corresponding    `_bips` percentage of voting power from the sender to each member of `_delegatees`."
							},
							"delegate(address,uint256)": {
								"notice": "Delegate by percentage `_bips` of voting power to `_to` from `msg.sender`."
							},
							"delegateExplicit(address,uint256)": {
								"notice": "Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`."
							},
							"delegatesOf(address)": {
								"notice": "Get the vote power delegation `delegationAddresses`   and `_bips` of `_who`. Returned in two separate positional arrays."
							},
							"delegatesOfAt(address,uint256)": {
								"notice": "Get the vote power delegation `delegationAddresses`   and `pcts` of `_who`. Returned in two separate positional arrays."
							},
							"delegationModeOf(address)": {
								"notice": "Get the delegation mode for '_who'. This mode determines whether vote power is  allocated by percentage or by explicit value. Once the delegation mode is set,   it never changes, even if all delegations are removed."
							},
							"governanceVotePower()": {
								"notice": "When set, allows token owners to participate in governance voting and delegate governance vote power."
							},
							"readVotePowerContract()": {
								"notice": "Returns VPContract used for readonly operations (view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`readVotePowerContract` is almost always equal to `writeVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before).You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Revoke` only)."
							},
							"revokeDelegationAt(address,uint256)": {
								"notice": "Revoke all delegation from sender to `_who` at given block.     Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.    Block `_blockNumber` must be in the past.     This method should be used only to prevent rogue delegate voting in the current voting block.    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit."
							},
							"totalSupplyAt(uint256)": {
								"notice": "Total amount of tokens at a specific `_blockNumber`."
							},
							"totalVotePower()": {
								"notice": "Get the current total vote power."
							},
							"totalVotePowerAt(uint256)": {
								"notice": "Get the total vote power at block `_blockNumber`"
							},
							"undelegateAll()": {
								"notice": "Undelegate all voting power for delegates of `msg.sender`    Can only be used with percentage delegation.    Does not reset delegation mode back to NOTSET.*"
							},
							"undelegateAllExplicit(address[])": {
								"notice": "Undelegate all explicit vote power by amount delegates for `msg.sender`.    Can only be used with explicit delegation.    Does not reset delegation mode back to NOTSET."
							},
							"undelegatedVotePowerOf(address)": {
								"notice": "Compute the current undelegated vote power of `_owner`"
							},
							"undelegatedVotePowerOfAt(address,uint256)": {
								"notice": "Get the undelegated vote power of `_owner` at given block."
							},
							"votePowerFromTo(address,address)": {
								"notice": "Get current delegated vote power `_from` delegator delegated `_to` delegatee."
							},
							"votePowerFromToAt(address,address,uint256)": {
								"notice": "Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`."
							},
							"votePowerOf(address)": {
								"notice": "Get the current vote power of `_owner`."
							},
							"votePowerOfAt(address,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber`"
							},
							"votePowerOfAtIgnoringRevocation(address,uint256)": {
								"notice": "Get the vote power of `_owner` at block `_blockNumber`, ignoring revocation information (and cache)."
							},
							"writeVotePowerContract()": {
								"notice": "Returns VPContract used for state changing operations (non-view methods). The only non-view method that might be called on it is `revokeDelegationAt`.`writeVotePowerContract` is almost always equal to `readVotePowerContract` except during upgrade from one VPContract to a new version (which should happen rarely or never and will be anounced before). In the case of upgrade, `writeVotePowerContract` will be replaced first to establish delegations, and after some perio (e.g. after a reward epoch ends) `readVotePowerContract` will be set equal to it.You shouldn't call any methods on VPContract directly, all are exposed via VPToken (and state changing methods are forbidden from direct calls).  This is the reason why this method returns `IVPContractEvents` - it should only be used for listening to events (`Delegate` and `Revoke` only)."
							}
						},
						"version": 1
					}
				}
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol": {
				"IFlareContractRegistry": {
					"abi": [
						{
							"inputs": [],
							"name": "getAllContracts",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "_names",
									"type": "string[]"
								},
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_nameHash",
									"type": "bytes32"
								}
							],
							"name": "getContractAddressByHash",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "getContractAddressByName",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_nameHashes",
									"type": "bytes32[]"
								}
							],
							"name": "getContractAddressesByHash",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "_names",
									"type": "string[]"
								}
							],
							"name": "getContractAddressesByName",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getContractAddressByHash(bytes32)": {
								"params": {
									"_nameHash": "hash of the contract name (keccak256(abi.encode(name))"
								}
							},
							"getContractAddressByName(string)": {
								"params": {
									"_name": "name of the contract"
								}
							},
							"getContractAddressesByHash(bytes32[])": {
								"params": {
									"_nameHashes": "hashes of the contract names (keccak256(abi.encode(name))"
								}
							},
							"getContractAddressesByName(string[])": {
								"params": {
									"_names": "names of the contracts"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAllContracts()": "18d3ce96",
							"getContractAddressByHash(bytes32)": "159354a2",
							"getContractAddressByName(string)": "82760fca",
							"getContractAddressesByHash(bytes32[])": "5e11e2d1",
							"getContractAddressesByName(string[])": "76d2b1af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllContracts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_nameHash\",\"type\":\"bytes32\"}],\"name\":\"getContractAddressByHash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getContractAddressByName\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_nameHashes\",\"type\":\"bytes32[]\"}],\"name\":\"getContractAddressesByHash\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"}],\"name\":\"getContractAddressesByName\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getContractAddressByHash(bytes32)\":{\"params\":{\"_nameHash\":\"hash of the contract name (keccak256(abi.encode(name))\"}},\"getContractAddressByName(string)\":{\"params\":{\"_name\":\"name of the contract\"}},\"getContractAddressesByHash(bytes32[])\":{\"params\":{\"_nameHashes\":\"hashes of the contract names (keccak256(abi.encode(name))\"}},\"getContractAddressesByName(string[])\":{\"params\":{\"_names\":\"names of the contracts\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAllContracts()\":{\"notice\":\"Returns all contract names and corresponding addresses\"},\"getContractAddressByHash(bytes32)\":{\"notice\":\"Returns contract address for the given name hash - might be address(0)\"},\"getContractAddressByName(string)\":{\"notice\":\"Returns contract address for the given name - might be address(0)\"},\"getContractAddressesByHash(bytes32[])\":{\"notice\":\"Returns contract addresses for the given name hashes - might be address(0)\"},\"getContractAddressesByName(string[])\":{\"notice\":\"Returns contract addresses for the given names - might be address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol\":\"IFlareContractRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol\":{\"keccak256\":\"0x358aa3eced2172a3c252cd0c5efeb2572969ac6b64001f62facf185193668cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8627e9e0dca5664cc7f5c9db39a602bd17ae4a2d698a0fb13b274a9474804d31\",\"dweb:/ipfs/QmRNVH3EaykbgjVntcCf2bHWyXWvoL4gEKkdMiXGJdjD2R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getAllContracts()": {
								"notice": "Returns all contract names and corresponding addresses"
							},
							"getContractAddressByHash(bytes32)": {
								"notice": "Returns contract address for the given name hash - might be address(0)"
							},
							"getContractAddressByName(string)": {
								"notice": "Returns contract address for the given name - might be address(0)"
							},
							"getContractAddressesByHash(bytes32[])": {
								"notice": "Returns contract addresses for the given name hashes - might be address(0)"
							},
							"getContractAddressesByName(string[])": {
								"notice": "Returns contract addresses for the given names - might be address(0)"
							}
						},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1585,
								"contract": "lib/openzeppelin-contracts/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/UnfuckGPTPriceData.sol": {
				"UnfuckGPTPriceData": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "currentPriceInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ftsoIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "decimals",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"name": "latestPriceForToken",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "ftsoIndex",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "decimals",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IFtsoRegistry.PriceInfo",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceInfosCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refreshPrices",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/UnfuckGPTPriceData.sol\":495:1732  contract UnfuckGPTPriceData is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/UnfuckGPTPriceData.sol\":648:745  IFlareContractRegistry contractRegistry =... */\n  0x01\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"src/UnfuckGPTPriceData.sol\":599:641  0xaD67FE66660Fb8dFE9d6b1b4240d8650e30F6019 */\n  0xad67fe66660fb8dfe9d6b1b4240d8650e30f6019\n    /* \"src/UnfuckGPTPriceData.sol\":648:745  IFlareContractRegistry contractRegistry =... */\n  or\n  swap1\n  sstore\n    /* \"src/UnfuckGPTPriceData.sol\":863:879  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_8\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"src/UnfuckGPTPriceData.sol\":495:1732  contract UnfuckGPTPriceData is Ownable {... */\n  jump(tag_10)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  swap1\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"src/UnfuckGPTPriceData.sol\":495:1732  contract UnfuckGPTPriceData is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/UnfuckGPTPriceData.sol\":495:1732  contract UnfuckGPTPriceData is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3d44abf1\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x3d44abf1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x068b6bd5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16638d59\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x34ece79d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/UnfuckGPTPriceData.sol\":885:1364  function refreshPrices() external onlyOwner {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"src/UnfuckGPTPriceData.sol\":826:856  uint256 public priceInfosCount */\n    tag_4:\n      tag_13\n      sload(0x03)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"src/UnfuckGPTPriceData.sol\":826:856  uint256 public priceInfosCount */\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/UnfuckGPTPriceData.sol\":752:819  mapping(uint256 => IFtsoRegistry.PriceInfo) public currentPriceInfo */\n    tag_5:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      swap2\n      swap1\n      dup5\n      jump\n    tag_17:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":612:637   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":668:670   */\n      0x20\n        /* \"#utility.yul\":653:671   */\n      dup6\n      add\n        /* \"#utility.yul\":646:680   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":696:714   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":689:723   */\n      mstore\n        /* \"#utility.yul\":754:756   */\n      0x60\n        /* \"#utility.yul\":739:757   */\n      dup3\n      add\n        /* \"#utility.yul\":732:766   */\n      mstore\n        /* \"#utility.yul\":599:602   */\n      0x80\n        /* \"#utility.yul\":584:603   */\n      add\n        /* \"src/UnfuckGPTPriceData.sol\":752:819  mapping(uint256 => IFtsoRegistry.PriceInfo) public currentPriceInfo */\n      tag_15\n        /* \"#utility.yul\":381:772   */\n      jump\n        /* \"src/UnfuckGPTPriceData.sol\":1370:1730  function latestPriceForToken(... */\n    tag_6:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n        /* \"#utility.yul\":2433:2446   */\n      dup2\n      mload\n        /* \"#utility.yul\":2415:2447   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2491:2508   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2485:2509   */\n      mload\n        /* \"#utility.yul\":2463:2483   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2456:2510   */\n      mstore\n        /* \"#utility.yul\":2566:2570   */\n      0x40\n        /* \"#utility.yul\":2554:2571   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":2548:2572   */\n      mload\n        /* \"#utility.yul\":2526:2546   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2519:2573   */\n      mstore\n        /* \"#utility.yul\":2629:2633   */\n      0x60\n        /* \"#utility.yul\":2617:2634   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":2611:2635   */\n      mload\n        /* \"#utility.yul\":2589:2609   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2582:2636   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2402:2405   */\n      0x80\n        /* \"#utility.yul\":2387:2406   */\n      add\n      swap1\n        /* \"#utility.yul\":2216:2642   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_11\n      tag_30\n      jump\t// in\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2793:2844   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2781:2783   */\n      0x20\n        /* \"#utility.yul\":2766:2784   */\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_15\n        /* \"#utility.yul\":2647:2850   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_11\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"src/UnfuckGPTPriceData.sol\":885:1364  function refreshPrices() external onlyOwner {... */\n    tag_12:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_40\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_41\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_40:\n        /* \"src/UnfuckGPTPriceData.sol\":995:1011  contractRegistry */\n      sload(0x01)\n        /* \"src/UnfuckGPTPriceData.sol\":995:1052  contractRegistry.getContractAddressByName(\"FtsoRegistry\") */\n      mload(0x40)\n      shl(0xe1, 0x413b07e5)\n      dup2\n      mstore\n        /* \"#utility.yul\":3445:3447   */\n      0x20\n        /* \"src/UnfuckGPTPriceData.sol\":995:1052  contractRegistry.getContractAddressByName(\"FtsoRegistry\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3427:3448   */\n      mstore\n        /* \"#utility.yul\":3484:3486   */\n      0x0c\n        /* \"#utility.yul\":3464:3482   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3457:3487   */\n      mstore\n      shl(0xa0, 0x4674736f5265676973747279)\n        /* \"#utility.yul\":3503:3521   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3496:3538   */\n      mstore\n        /* \"src/UnfuckGPTPriceData.sol\":939:965  IFtsoRegistry ftsoRegistry */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/UnfuckGPTPriceData.sol\":995:1011  contractRegistry */\n      and\n      swap1\n        /* \"src/UnfuckGPTPriceData.sol\":995:1036  contractRegistry.getContractAddressByName */\n      0x82760fca\n      swap1\n        /* \"#utility.yul\":3555:3573   */\n      0x64\n      add\n        /* \"src/UnfuckGPTPriceData.sol\":995:1052  contractRegistry.getContractAddressByName(\"FtsoRegistry\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"src/UnfuckGPTPriceData.sol\":939:1062  IFtsoRegistry ftsoRegistry = IFtsoRegistry(... */\n      swap1\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":1073:1117  IFtsoRegistry.PriceInfo[] memory _priceInfos */\n      0x00\n        /* \"src/UnfuckGPTPriceData.sol\":1120:1132  ftsoRegistry */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/UnfuckGPTPriceData.sol\":1120:1165  ftsoRegistry... */\n      and\n      0x58f9296f\n        /* \"src/UnfuckGPTPriceData.sol\":1120:1167  ftsoRegistry... */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_51\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"src/UnfuckGPTPriceData.sol\":1196:1214  _priceInfos.length */\n      dup1\n      mload\n        /* \"src/UnfuckGPTPriceData.sol\":1178:1193  priceInfosCount */\n      0x03\n        /* \"src/UnfuckGPTPriceData.sol\":1178:1214  priceInfosCount = _priceInfos.length */\n      sstore\n        /* \"src/UnfuckGPTPriceData.sol\":1073:1167  IFtsoRegistry.PriceInfo[] memory _priceInfos = ftsoRegistry... */\n      swap1\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":1230:1239  uint256 i */\n      0x00\n        /* \"src/UnfuckGPTPriceData.sol\":1225:1358  for (uint256 i = 0; i < _priceInfos.length; i++) {... */\n    tag_53:\n        /* \"src/UnfuckGPTPriceData.sol\":1249:1260  _priceInfos */\n      dup2\n        /* \"src/UnfuckGPTPriceData.sol\":1249:1267  _priceInfos.length */\n      mload\n        /* \"src/UnfuckGPTPriceData.sol\":1245:1246  i */\n      dup2\n        /* \"src/UnfuckGPTPriceData.sol\":1245:1267  i < _priceInfos.length */\n      lt\n        /* \"src/UnfuckGPTPriceData.sol\":1225:1358  for (uint256 i = 0; i < _priceInfos.length; i++) {... */\n      iszero\n      tag_54\n      jumpi\n        /* \"src/UnfuckGPTPriceData.sol\":1333:1344  _priceInfos */\n      dup2\n        /* \"src/UnfuckGPTPriceData.sol\":1345:1346  i */\n      dup2\n        /* \"src/UnfuckGPTPriceData.sol\":1333:1347  _priceInfos[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/UnfuckGPTPriceData.sol\":1288:1304  currentPriceInfo */\n      0x02\n        /* \"src/UnfuckGPTPriceData.sol\":1288:1330  currentPriceInfo[_priceInfos[i].ftsoIndex] */\n      0x00\n        /* \"src/UnfuckGPTPriceData.sol\":1305:1316  _priceInfos */\n      dup5\n        /* \"src/UnfuckGPTPriceData.sol\":1317:1318  i */\n      dup5\n        /* \"src/UnfuckGPTPriceData.sol\":1305:1319  _priceInfos[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_60\n      tag_58\n      jump\t// in\n    tag_60:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/UnfuckGPTPriceData.sol\":1305:1329  _priceInfos[i].ftsoIndex */\n      0x00\n      add\n      mload\n        /* \"src/UnfuckGPTPriceData.sol\":1288:1330  currentPriceInfo[_priceInfos[i].ftsoIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/UnfuckGPTPriceData.sol\":1288:1347  currentPriceInfo[_priceInfos[i].ftsoIndex] = _priceInfos[i] */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":1269:1272  i++ */\n      dup1\n      dup1\n      tag_61\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      swap2\n      pop\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":1225:1358  for (uint256 i = 0; i < _priceInfos.length; i++) {... */\n      jump(tag_53)\n    tag_54:\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":929:1364  {... */\n      pop\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":885:1364  function refreshPrices() external onlyOwner {... */\n      jump\t// out\n        /* \"src/UnfuckGPTPriceData.sol\":1370:1730  function latestPriceForToken(... */\n    tag_26:\n        /* \"src/UnfuckGPTPriceData.sol\":1459:1489  IFtsoRegistry.PriceInfo memory */\n      tag_63\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_63:\n        /* \"src/UnfuckGPTPriceData.sol\":1558:1574  contractRegistry */\n      sload(0x01)\n        /* \"src/UnfuckGPTPriceData.sol\":1558:1615  contractRegistry.getContractAddressByName(\"FtsoRegistry\") */\n      mload(0x40)\n      shl(0xe1, 0x413b07e5)\n      dup2\n      mstore\n        /* \"#utility.yul\":3445:3447   */\n      0x20\n        /* \"src/UnfuckGPTPriceData.sol\":1558:1615  contractRegistry.getContractAddressByName(\"FtsoRegistry\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3427:3448   */\n      mstore\n        /* \"#utility.yul\":3484:3486   */\n      0x0c\n        /* \"#utility.yul\":3464:3482   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3457:3487   */\n      mstore\n      shl(0xa0, 0x4674736f5265676973747279)\n        /* \"#utility.yul\":3503:3521   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3496:3538   */\n      mstore\n        /* \"src/UnfuckGPTPriceData.sol\":1502:1528  IFtsoRegistry ftsoRegistry */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/UnfuckGPTPriceData.sol\":1558:1574  contractRegistry */\n      and\n      swap1\n        /* \"src/UnfuckGPTPriceData.sol\":1558:1599  contractRegistry.getContractAddressByName */\n      0x82760fca\n      swap1\n        /* \"#utility.yul\":3555:3573   */\n      0x64\n      add\n        /* \"src/UnfuckGPTPriceData.sol\":1558:1615  contractRegistry.getContractAddressByName(\"FtsoRegistry\") */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_69:\n        /* \"src/UnfuckGPTPriceData.sol\":1502:1625  IFtsoRegistry ftsoRegistry = IFtsoRegistry(... */\n      swap1\n      pop\n        /* \"src/UnfuckGPTPriceData.sol\":1635:1647  uint256 _idx */\n      0x00\n        /* \"src/UnfuckGPTPriceData.sol\":1650:1662  ftsoRegistry */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/UnfuckGPTPriceData.sol\":1650:1675  ftsoRegistry.getFtsoIndex */\n      and\n      0xe848da30\n        /* \"src/UnfuckGPTPriceData.sol\":1676:1683  _symbol */\n      dup6\n        /* \"src/UnfuckGPTPriceData.sol\":1650:1684  ftsoRegistry.getFtsoIndex(_symbol) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"src/UnfuckGPTPriceData.sol\":1701:1723  currentPriceInfo[_idx] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/UnfuckGPTPriceData.sol\":1701:1717  currentPriceInfo */\n      0x02\n        /* \"src/UnfuckGPTPriceData.sol\":1701:1723  currentPriceInfo[_idx] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"src/UnfuckGPTPriceData.sol\":1694:1723  return currentPriceInfo[_idx] */\n      dup4\n      mload\n      0x80\n      dup2\n      add\n      dup6\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      swap2\n      dup3\n      add\n      sload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x03\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      swap5\n        /* \"src/UnfuckGPTPriceData.sol\":1370:1730  function latestPriceForToken(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_30:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_77\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_41\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_79\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_80\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_79:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_38:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_83\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_41\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6539:6541   */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6521:6542   */\n      mstore\n        /* \"#utility.yul\":6578:6580   */\n      0x26\n        /* \"#utility.yul\":6558:6576   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6551:6581   */\n      mstore\n        /* \"#utility.yul\":6617:6651   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6597:6615   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6590:6652   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6668:6686   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6661:6697   */\n      mstore\n        /* \"#utility.yul\":6714:6733   */\n      0x84\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_88\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_80\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_88:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_41:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"lib/openzeppelin-contracts/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6946:6948   */\n      0x20\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6928:6949   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6965:6983   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6958:6988   */\n      mstore\n        /* \"#utility.yul\":7024:7058   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":7004:7022   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6997:7059   */\n      mstore\n        /* \"#utility.yul\":7076:7094   */\n      0x64\n      add\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_86\n        /* \"#utility.yul\":6744:7100   */\n      jump\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_80:\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      swap1\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:376   */\n    tag_19:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_105\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_105:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:904   */\n    tag_98:\n        /* \"#utility.yul\":838:848   */\n      0x4e487b71\n        /* \"#utility.yul\":833:836   */\n      0xe0\n        /* \"#utility.yul\":829:849   */\n      shl\n        /* \"#utility.yul\":826:827   */\n      0x00\n        /* \"#utility.yul\":819:850   */\n      mstore\n        /* \"#utility.yul\":869:873   */\n      0x41\n        /* \"#utility.yul\":866:867   */\n      0x04\n        /* \"#utility.yul\":859:874   */\n      mstore\n        /* \"#utility.yul\":893:897   */\n      0x24\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":883:898   */\n      revert\n        /* \"#utility.yul\":909:1162   */\n    tag_99:\n        /* \"#utility.yul\":981:983   */\n      0x40\n        /* \"#utility.yul\":975:984   */\n      mload\n        /* \"#utility.yul\":1023:1027   */\n      0x80\n        /* \"#utility.yul\":1011:1028   */\n      dup2\n      add\n        /* \"#utility.yul\":1058:1076   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1043:1077   */\n      dup2\n      gt\n        /* \"#utility.yul\":1079:1101   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1040:1102   */\n      or\n        /* \"#utility.yul\":1037:1125   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":1105:1123   */\n      tag_110\n      tag_98\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1141:1143   */\n      0x40\n        /* \"#utility.yul\":1134:1156   */\n      mstore\n        /* \"#utility.yul\":909:1162   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1167:1442   */\n    tag_100:\n        /* \"#utility.yul\":1238:1240   */\n      0x40\n        /* \"#utility.yul\":1232:1241   */\n      mload\n        /* \"#utility.yul\":1303:1305   */\n      0x1f\n        /* \"#utility.yul\":1284:1297   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1280:1307   */\n      and\n        /* \"#utility.yul\":1268:1308   */\n      dup2\n      add\n        /* \"#utility.yul\":1338:1356   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1323:1357   */\n      dup2\n      gt\n        /* \"#utility.yul\":1359:1381   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1320:1382   */\n      or\n        /* \"#utility.yul\":1317:1405   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1385:1403   */\n      tag_113\n      tag_98\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1421:1423   */\n      0x40\n        /* \"#utility.yul\":1414:1436   */\n      mstore\n        /* \"#utility.yul\":1167:1442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1447:2211   */\n    tag_25:\n        /* \"#utility.yul\":1516:1522   */\n      0x00\n        /* \"#utility.yul\":1547:1549   */\n      0x20\n        /* \"#utility.yul\":1590:1592   */\n      dup1\n        /* \"#utility.yul\":1578:1587   */\n      dup4\n        /* \"#utility.yul\":1569:1576   */\n      dup6\n        /* \"#utility.yul\":1565:1588   */\n      sub\n        /* \"#utility.yul\":1561:1593   */\n      slt\n        /* \"#utility.yul\":1558:1610   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1606:1607   */\n      0x00\n        /* \"#utility.yul\":1603:1604   */\n      dup1\n        /* \"#utility.yul\":1596:1608   */\n      revert\n        /* \"#utility.yul\":1558:1610   */\n    tag_115:\n        /* \"#utility.yul\":1646:1655   */\n      dup3\n        /* \"#utility.yul\":1633:1656   */\n      calldataload\n        /* \"#utility.yul\":1675:1693   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1716:1718   */\n      dup1\n        /* \"#utility.yul\":1708:1714   */\n      dup3\n        /* \"#utility.yul\":1705:1719   */\n      gt\n        /* \"#utility.yul\":1702:1736   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1729:1730   */\n      dup1\n        /* \"#utility.yul\":1722:1734   */\n      revert\n        /* \"#utility.yul\":1702:1736   */\n    tag_116:\n        /* \"#utility.yul\":1770:1776   */\n      dup2\n        /* \"#utility.yul\":1759:1768   */\n      dup6\n        /* \"#utility.yul\":1755:1777   */\n      add\n        /* \"#utility.yul\":1745:1777   */\n      swap2\n      pop\n        /* \"#utility.yul\":1815:1822   */\n      dup6\n        /* \"#utility.yul\":1808:1812   */\n      0x1f\n        /* \"#utility.yul\":1804:1806   */\n      dup4\n        /* \"#utility.yul\":1800:1813   */\n      add\n        /* \"#utility.yul\":1796:1823   */\n      slt\n        /* \"#utility.yul\":1786:1841   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1837:1838   */\n      0x00\n        /* \"#utility.yul\":1834:1835   */\n      dup1\n        /* \"#utility.yul\":1827:1839   */\n      revert\n        /* \"#utility.yul\":1786:1841   */\n    tag_117:\n        /* \"#utility.yul\":1873:1875   */\n      dup2\n        /* \"#utility.yul\":1860:1876   */\n      calldataload\n        /* \"#utility.yul\":1895:1897   */\n      dup2\n        /* \"#utility.yul\":1891:1893   */\n      dup2\n        /* \"#utility.yul\":1888:1898   */\n      gt\n        /* \"#utility.yul\":1885:1921   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1901:1919   */\n      tag_119\n      tag_98\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1943:1996   */\n      tag_120\n        /* \"#utility.yul\":1986:1988   */\n      0x1f\n        /* \"#utility.yul\":1967:1980   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1963:1990   */\n      and\n        /* \"#utility.yul\":1959:1995   */\n      dup6\n      add\n        /* \"#utility.yul\":1943:1996   */\n      tag_100\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1930:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2019:2021   */\n      dup1\n        /* \"#utility.yul\":2012:2017   */\n      dup3\n        /* \"#utility.yul\":2005:2022   */\n      mstore\n        /* \"#utility.yul\":2059:2066   */\n      dup7\n        /* \"#utility.yul\":2054:2056   */\n      dup5\n        /* \"#utility.yul\":2049:2051   */\n      dup3\n        /* \"#utility.yul\":2045:2047   */\n      dup6\n        /* \"#utility.yul\":2041:2052   */\n      add\n        /* \"#utility.yul\":2037:2057   */\n      add\n        /* \"#utility.yul\":2034:2067   */\n      gt\n        /* \"#utility.yul\":2031:2084   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":2080:2081   */\n      0x00\n        /* \"#utility.yul\":2077:2078   */\n      dup1\n        /* \"#utility.yul\":2070:2082   */\n      revert\n        /* \"#utility.yul\":2031:2084   */\n    tag_121:\n        /* \"#utility.yul\":2135:2137   */\n      dup1\n        /* \"#utility.yul\":2130:2132   */\n      dup5\n        /* \"#utility.yul\":2126:2128   */\n      dup5\n        /* \"#utility.yul\":2122:2133   */\n      add\n        /* \"#utility.yul\":2117:2119   */\n      dup6\n        /* \"#utility.yul\":2110:2115   */\n      dup5\n        /* \"#utility.yul\":2106:2120   */\n      add\n        /* \"#utility.yul\":2093:2138   */\n      calldatacopy\n        /* \"#utility.yul\":2179:2180   */\n      0x00\n        /* \"#utility.yul\":2158:2172   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2154:2177   */\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2147:2181   */\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n        /* \"#utility.yul\":2162:2167   */\n      swap4\n        /* \"#utility.yul\":1447:2211   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:2986   */\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2930:2961   */\n      dup2\n      and\n        /* \"#utility.yul\":2920:2962   */\n      dup2\n      eq\n        /* \"#utility.yul\":2910:2980   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":2976:2977   */\n      0x00\n        /* \"#utility.yul\":2973:2974   */\n      dup1\n        /* \"#utility.yul\":2966:2978   */\n      revert\n        /* \"#utility.yul\":2991:3238   */\n    tag_37:\n        /* \"#utility.yul\":3050:3056   */\n      0x00\n        /* \"#utility.yul\":3103:3105   */\n      0x20\n        /* \"#utility.yul\":3091:3100   */\n      dup3\n        /* \"#utility.yul\":3082:3089   */\n      dup5\n        /* \"#utility.yul\":3078:3101   */\n      sub\n        /* \"#utility.yul\":3074:3106   */\n      slt\n        /* \"#utility.yul\":3071:3123   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":3119:3120   */\n      0x00\n        /* \"#utility.yul\":3116:3117   */\n      dup1\n        /* \"#utility.yul\":3109:3121   */\n      revert\n        /* \"#utility.yul\":3071:3123   */\n    tag_127:\n        /* \"#utility.yul\":3158:3167   */\n      dup2\n        /* \"#utility.yul\":3145:3168   */\n      calldataload\n        /* \"#utility.yul\":3177:3208   */\n      tag_128\n        /* \"#utility.yul\":3202:3207   */\n      dup2\n        /* \"#utility.yul\":3177:3208   */\n      tag_101\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3227:3232   */\n      swap4\n        /* \"#utility.yul\":2991:3238   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3584:3835   */\n    tag_48:\n        /* \"#utility.yul\":3654:3660   */\n      0x00\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3695:3704   */\n      dup3\n        /* \"#utility.yul\":3686:3693   */\n      dup5\n        /* \"#utility.yul\":3682:3705   */\n      sub\n        /* \"#utility.yul\":3678:3710   */\n      slt\n        /* \"#utility.yul\":3675:3727   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3723:3724   */\n      0x00\n        /* \"#utility.yul\":3720:3721   */\n      dup1\n        /* \"#utility.yul\":3713:3725   */\n      revert\n        /* \"#utility.yul\":3675:3727   */\n    tag_131:\n        /* \"#utility.yul\":3755:3764   */\n      dup2\n        /* \"#utility.yul\":3749:3765   */\n      mload\n        /* \"#utility.yul\":3774:3805   */\n      tag_128\n        /* \"#utility.yul\":3799:3804   */\n      dup2\n        /* \"#utility.yul\":3774:3805   */\n      tag_101\n      jump\t// in\n        /* \"#utility.yul\":3840:5221   */\n    tag_52:\n        /* \"#utility.yul\":3961:3967   */\n      0x00\n        /* \"#utility.yul\":3992:3994   */\n      0x20\n        /* \"#utility.yul\":4035:4037   */\n      dup1\n        /* \"#utility.yul\":4023:4032   */\n      dup4\n        /* \"#utility.yul\":4014:4021   */\n      dup6\n        /* \"#utility.yul\":4010:4033   */\n      sub\n        /* \"#utility.yul\":4006:4038   */\n      slt\n        /* \"#utility.yul\":4003:4055   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":4051:4052   */\n      0x00\n        /* \"#utility.yul\":4048:4049   */\n      dup1\n        /* \"#utility.yul\":4041:4053   */\n      revert\n        /* \"#utility.yul\":4003:4055   */\n    tag_134:\n        /* \"#utility.yul\":4084:4093   */\n      dup3\n        /* \"#utility.yul\":4078:4094   */\n      mload\n        /* \"#utility.yul\":4113:4131   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4154:4156   */\n      dup1\n        /* \"#utility.yul\":4146:4152   */\n      dup3\n        /* \"#utility.yul\":4143:4157   */\n      gt\n        /* \"#utility.yul\":4140:4174   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4170:4171   */\n      0x00\n        /* \"#utility.yul\":4167:4168   */\n      dup1\n        /* \"#utility.yul\":4160:4172   */\n      revert\n        /* \"#utility.yul\":4140:4174   */\n    tag_135:\n        /* \"#utility.yul\":4208:4214   */\n      dup2\n        /* \"#utility.yul\":4197:4206   */\n      dup6\n        /* \"#utility.yul\":4193:4215   */\n      add\n        /* \"#utility.yul\":4183:4215   */\n      swap2\n      pop\n        /* \"#utility.yul\":4253:4260   */\n      dup6\n        /* \"#utility.yul\":4246:4250   */\n      0x1f\n        /* \"#utility.yul\":4242:4244   */\n      dup4\n        /* \"#utility.yul\":4238:4251   */\n      add\n        /* \"#utility.yul\":4234:4261   */\n      slt\n        /* \"#utility.yul\":4224:4279   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":4275:4276   */\n      0x00\n        /* \"#utility.yul\":4272:4273   */\n      dup1\n        /* \"#utility.yul\":4265:4277   */\n      revert\n        /* \"#utility.yul\":4224:4279   */\n    tag_136:\n        /* \"#utility.yul\":4304:4306   */\n      dup2\n        /* \"#utility.yul\":4298:4307   */\n      mload\n        /* \"#utility.yul\":4326:4328   */\n      dup2\n        /* \"#utility.yul\":4322:4324   */\n      dup2\n        /* \"#utility.yul\":4319:4329   */\n      gt\n        /* \"#utility.yul\":4316:4352   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4332:4350   */\n      tag_138\n      tag_98\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":4372:4408   */\n      tag_139\n        /* \"#utility.yul\":4404:4406   */\n      dup5\n        /* \"#utility.yul\":4399:4401   */\n      dup3\n        /* \"#utility.yul\":4396:4397   */\n      0x05\n        /* \"#utility.yul\":4392:4402   */\n      shl\n        /* \"#utility.yul\":4388:4407   */\n      add\n        /* \"#utility.yul\":4372:4408   */\n      tag_100\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4442:4457   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4473:4485   */\n      dup5\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":4524:4525   */\n      0x07\n        /* \"#utility.yul\":4520:4530   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":4512:4531   */\n      dup4\n      add\n        /* \"#utility.yul\":4508:4536   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4548:4567   */\n      dup8\n      dup3\n      gt\n        /* \"#utility.yul\":4545:4584   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":4580:4581   */\n      0x00\n        /* \"#utility.yul\":4577:4578   */\n      dup1\n        /* \"#utility.yul\":4570:4582   */\n      revert\n        /* \"#utility.yul\":4545:4584   */\n    tag_140:\n        /* \"#utility.yul\":4604:4615   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4624:5191   */\n    tag_141:\n        /* \"#utility.yul\":4640:4646   */\n      dup2\n        /* \"#utility.yul\":4635:4638   */\n      dup5\n        /* \"#utility.yul\":4632:4647   */\n      lt\n        /* \"#utility.yul\":4624:5191   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":4722:4726   */\n      0x80\n        /* \"#utility.yul\":4716:4719   */\n      dup5\n        /* \"#utility.yul\":4707:4714   */\n      dup10\n        /* \"#utility.yul\":4703:4720   */\n      sub\n        /* \"#utility.yul\":4699:4727   */\n      slt\n        /* \"#utility.yul\":4696:4814   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":4768:4769   */\n      0x00\n        /* \"#utility.yul\":4797:4799   */\n      dup1\n        /* \"#utility.yul\":4793:4795   */\n      dup2\n        /* \"#utility.yul\":4786:4800   */\n      revert\n        /* \"#utility.yul\":4696:4814   */\n    tag_144:\n        /* \"#utility.yul\":4840:4862   */\n      tag_145\n      tag_99\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4889:4899   */\n      dup5\n      mload\n        /* \"#utility.yul\":4875:4900   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4942:4954   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":4936:4955   */\n      mload\n        /* \"#utility.yul\":4920:4934   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":4913:4956   */\n      mstore\n        /* \"#utility.yul\":4979:4981   */\n      0x40\n        /* \"#utility.yul\":5023:5035   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":5017:5036   */\n      mload\n        /* \"#utility.yul\":5001:5015   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4994:5037   */\n      mstore\n        /* \"#utility.yul\":5060:5062   */\n      0x60\n        /* \"#utility.yul\":5104:5116   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":5098:5117   */\n      mload\n        /* \"#utility.yul\":5082:5096   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5075:5118   */\n      mstore\n        /* \"#utility.yul\":5131:5149   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4666:4670   */\n      0x80\n        /* \"#utility.yul\":4657:4671   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":5169:5181   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4624:5191   */\n      jump(tag_141)\n    tag_143:\n        /* \"#utility.yul\":5210:5215   */\n      swap8\n        /* \"#utility.yul\":3840:5221   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5226:5353   */\n    tag_58:\n        /* \"#utility.yul\":5287:5297   */\n      0x4e487b71\n        /* \"#utility.yul\":5282:5285   */\n      0xe0\n        /* \"#utility.yul\":5278:5298   */\n      shl\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5268:5299   */\n      mstore\n        /* \"#utility.yul\":5318:5322   */\n      0x32\n        /* \"#utility.yul\":5315:5316   */\n      0x04\n        /* \"#utility.yul\":5308:5323   */\n      mstore\n        /* \"#utility.yul\":5342:5346   */\n      0x24\n        /* \"#utility.yul\":5339:5340   */\n      0x00\n        /* \"#utility.yul\":5332:5347   */\n      revert\n        /* \"#utility.yul\":5358:5590   */\n    tag_62:\n        /* \"#utility.yul\":5397:5400   */\n      0x00\n        /* \"#utility.yul\":5418:5435   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5415:5555   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":5477:5487   */\n      0x4e487b71\n        /* \"#utility.yul\":5472:5475   */\n      0xe0\n        /* \"#utility.yul\":5468:5488   */\n      shl\n        /* \"#utility.yul\":5465:5466   */\n      0x00\n        /* \"#utility.yul\":5458:5489   */\n      mstore\n        /* \"#utility.yul\":5512:5516   */\n      0x11\n        /* \"#utility.yul\":5509:5510   */\n      0x04\n        /* \"#utility.yul\":5502:5517   */\n      mstore\n        /* \"#utility.yul\":5540:5544   */\n      0x24\n        /* \"#utility.yul\":5537:5538   */\n      0x00\n        /* \"#utility.yul\":5530:5545   */\n      revert\n        /* \"#utility.yul\":5415:5555   */\n    tag_148:\n      pop\n        /* \"#utility.yul\":5582:5583   */\n      0x01\n        /* \"#utility.yul\":5571:5584   */\n      add\n      swap1\n        /* \"#utility.yul\":5358:5590   */\n      jump\t// out\n        /* \"#utility.yul\":5595:6143   */\n    tag_71:\n        /* \"#utility.yul\":5707:5711   */\n      0x00\n        /* \"#utility.yul\":5736:5738   */\n      0x20\n        /* \"#utility.yul\":5765:5767   */\n      dup1\n        /* \"#utility.yul\":5754:5763   */\n      dup4\n        /* \"#utility.yul\":5747:5768   */\n      mstore\n        /* \"#utility.yul\":5797:5803   */\n      dup4\n        /* \"#utility.yul\":5791:5804   */\n      mload\n        /* \"#utility.yul\":5840:5846   */\n      dup1\n        /* \"#utility.yul\":5835:5837   */\n      dup3\n        /* \"#utility.yul\":5824:5833   */\n      dup6\n        /* \"#utility.yul\":5820:5838   */\n      add\n        /* \"#utility.yul\":5813:5847   */\n      mstore\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5875:6015   */\n    tag_150:\n        /* \"#utility.yul\":5889:5895   */\n      dup2\n        /* \"#utility.yul\":5886:5887   */\n      dup2\n        /* \"#utility.yul\":5883:5896   */\n      lt\n        /* \"#utility.yul\":5875:6015   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":5984:5998   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5980:6003   */\n      dup4\n      add\n        /* \"#utility.yul\":5974:6004   */\n      mload\n        /* \"#utility.yul\":5950:5967   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":5969:5971   */\n      0x40\n        /* \"#utility.yul\":5946:5972   */\n      add\n        /* \"#utility.yul\":5939:6005   */\n      mstore\n        /* \"#utility.yul\":5904:5914   */\n      dup3\n      add\n        /* \"#utility.yul\":5875:6015   */\n      jump(tag_150)\n    tag_152:\n        /* \"#utility.yul\":5879:5882   */\n      pop\n        /* \"#utility.yul\":6064:6065   */\n      0x00\n        /* \"#utility.yul\":6059:6061   */\n      0x40\n        /* \"#utility.yul\":6050:6056   */\n      dup3\n        /* \"#utility.yul\":6039:6048   */\n      dup7\n        /* \"#utility.yul\":6035:6057   */\n      add\n        /* \"#utility.yul\":6031:6062   */\n      add\n        /* \"#utility.yul\":6024:6066   */\n      mstore\n        /* \"#utility.yul\":6134:6136   */\n      0x40\n        /* \"#utility.yul\":6127:6129   */\n      0x1f\n        /* \"#utility.yul\":6123:6130   */\n      not\n        /* \"#utility.yul\":6118:6120   */\n      0x1f\n        /* \"#utility.yul\":6110:6116   */\n      dup4\n        /* \"#utility.yul\":6106:6121   */\n      add\n        /* \"#utility.yul\":6102:6131   */\n      and\n        /* \"#utility.yul\":6091:6100   */\n      dup6\n        /* \"#utility.yul\":6087:6132   */\n      add\n        /* \"#utility.yul\":6083:6137   */\n      add\n        /* \"#utility.yul\":6075:6137   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5595:6143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6148:6332   */\n    tag_75:\n        /* \"#utility.yul\":6218:6224   */\n      0x00\n        /* \"#utility.yul\":6271:6273   */\n      0x20\n        /* \"#utility.yul\":6259:6268   */\n      dup3\n        /* \"#utility.yul\":6250:6257   */\n      dup5\n        /* \"#utility.yul\":6246:6269   */\n      sub\n        /* \"#utility.yul\":6242:6274   */\n      slt\n        /* \"#utility.yul\":6239:6291   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":6287:6288   */\n      0x00\n        /* \"#utility.yul\":6284:6285   */\n      dup1\n        /* \"#utility.yul\":6277:6289   */\n      revert\n        /* \"#utility.yul\":6239:6291   */\n    tag_154:\n      pop\n        /* \"#utility.yul\":6310:6326   */\n      mload\n      swap2\n        /* \"#utility.yul\":6148:6332   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200b6cce2e2fc66805f9c56c37983dbc5ba0cfaf65646271d92391b17548fb940164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1601": {
									"entryPoint": null,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1817": {
									"entryPoint": null,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1780": {
									"entryPoint": null,
									"id": 1780,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1689": {
									"entryPoint": 69,
									"id": 1689,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600180546001600160a01b03191673ad67fe66660fb8dfe9d6b1b4240d8650e30f601917905534801561003657600080fd5b5061004033610045565b610095565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108ee806100a46000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633d44abf11161005b5780633d44abf1146100ff578063715018a6146101455780638da5cb5b1461014d578063f2fde38b1461016857600080fd5b8063068b6bd51461008257806316638d591461008c57806334ece79d146100a8575b600080fd5b61008a61017b565b005b61009560035481565b6040519081526020015b60405180910390f35b6100df6100b63660046105bf565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b60408051948552602085019390935291830152606082015260800161009f565b61011261010d366004610648565b610317565b60405161009f91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b61008a610483565b6000546040516001600160a01b03909116815260200161009f565b61008a6101763660046106f2565b610497565b610183610515565b60015460405163413b07e560e11b815260206004820152600c60248201526b4674736f526567697374727960a01b60448201526000916001600160a01b0316906382760fca90606401602060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610716565b90506000816001600160a01b03166358f9296f6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102779190810190610733565b8051600355905060005b81518110156103125781818151811061029c5761029c610814565b6020026020010151600260008484815181106102ba576102ba610814565b602002602001015160000151815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050808061030a9061082a565b915050610281565b505050565b6103426040518060800160405280600081526020016000815260200160008152602001600081525090565b60015460405163413b07e560e11b815260206004820152600c60248201526b4674736f526567697374727960a01b60448201526000916001600160a01b0316906382760fca90606401602060405180830381865afa1580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc9190610716565b90506000816001600160a01b031663e848da30856040518263ffffffff1660e01b81526004016103fc9190610851565b602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061089f565b6000908152600260208181526040928390208351608081018552815481526001820154928101929092529182015492810192909252600301546060820152949350505050565b61048b610515565b610495600061056f565b565b61049f610515565b6001600160a01b0381166105095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105128161056f565b50565b6000546001600160a01b031633146104955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610500565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105d157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610611576106116105d8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610640576106406105d8565b604052919050565b6000602080838503121561065b57600080fd5b823567ffffffffffffffff8082111561067357600080fd5b818501915085601f83011261068757600080fd5b813581811115610699576106996105d8565b6106ab601f8201601f19168501610617565b915080825286848285010111156106c157600080fd5b8084840185840137600090820190930192909252509392505050565b6001600160a01b038116811461051257600080fd5b60006020828403121561070457600080fd5b813561070f816106dd565b9392505050565b60006020828403121561072857600080fd5b815161070f816106dd565b6000602080838503121561074657600080fd5b825167ffffffffffffffff8082111561075e57600080fd5b818501915085601f83011261077257600080fd5b815181811115610784576107846105d8565b610792848260051b01610617565b818152848101925060079190911b8301840190878211156107b257600080fd5b928401925b8184101561080957608084890312156107d05760008081fd5b6107d86105ee565b84518152858501518682015260408086015190820152606080860151908201528352608090930192918401916107b7565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161084a57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208083528351808285015260005b8181101561087e57858101830151858201604001528201610862565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156108b157600080fd5b505191905056fea26469706673582212200b6cce2e2fc66805f9c56c37983dbc5ba0cfaf65646271d92391b17548fb940164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xAD67FE66660FB8DFE9D6B1B4240D8650E30F6019 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40 CALLER PUSH2 0x45 JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8EE DUP1 PUSH2 0xA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3D44ABF1 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x3D44ABF1 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68B6BD5 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x16638D59 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x34ECE79D EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x8A PUSH2 0x483 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x8A PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x413B07E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4674736F5265676973747279 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x82760FCA SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x58F9296F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x277 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x733 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 SSTORE SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x312 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x29C JUMPI PUSH2 0x29C PUSH2 0x814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2BA JUMPI PUSH2 0x2BA PUSH2 0x814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP DUP1 DUP1 PUSH2 0x30A SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x281 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x342 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x413B07E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4674736F5265676973747279 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x82760FCA SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE848DA30 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x48B PUSH2 0x515 JUMP JUMPDEST PUSH2 0x495 PUSH1 0x0 PUSH2 0x56F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x49F PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x512 DUP2 PUSH2 0x56F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x640 JUMPI PUSH2 0x640 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x617 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x70F DUP2 PUSH2 0x6DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x70F DUP2 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x784 JUMPI PUSH2 0x784 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x792 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0x617 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x809 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7D8 PUSH2 0x5EE JUMP JUMPDEST DUP5 MLOAD DUP2 MSTORE DUP6 DUP6 ADD MLOAD DUP7 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x7B7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x84A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x87E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x862 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH13 0xCE2E2FC66805F9C56C37983DBC JUMPDEST LOG0 0xCF 0xAF PUSH6 0x646271D92391 0xB1 PUSH22 0x48FB940164736F6C6343000811003300000000000000 ",
							"sourceMap": "495:1237:19:-:0;;;648:97;;;-1:-1:-1;;;;;;648:97:19;599:42;648:97;;;863:16;;;;;;;;;-1:-1:-1;936:32:16;719:10:18;936:18:16;:32::i;:::-;495:1237:19;;2426:187:16;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:16;;;-1:-1:-1;;;;;;2534:17:16;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;495:1237:19:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1632": {
									"entryPoint": 1301,
									"id": 1632,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1780": {
									"entryPoint": null,
									"id": 1780,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1689": {
									"entryPoint": 1391,
									"id": 1689,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentPriceInfo_1811": {
									"entryPoint": null,
									"id": 1811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@latestPriceForToken_1902": {
									"entryPoint": 791,
									"id": 1902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1618": {
									"entryPoint": null,
									"id": 1618,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@priceInfosCount_1813": {
									"entryPoint": null,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refreshPrices_1872": {
									"entryPoint": 379,
									"id": 1872,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_1646": {
									"entryPoint": 1155,
									"id": 1646,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1669": {
									"entryPoint": 1175,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_PriceInfo_$422_memory_ptr__to_t_struct$_PriceInfo_$422_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_1284": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7102:20",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:20",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:20"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:20",
														"type": ""
													}
												],
												"src": "14:177:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:20"
															},
															"nodeType": "YulIf",
															"src": "276:52:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:20",
														"type": ""
													}
												],
												"src": "196:180:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "566:206:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "576:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "588:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "599:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "584:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "576:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "619:9:20"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "630:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "612:25:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "612:25:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "657:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "668:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "653:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "653:18:20"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "673:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "646:34:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "646:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "700:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "711:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "696:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "696:18:20"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "716:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "689:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:34:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "689:34:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "743:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "754:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "739:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:18:20"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "759:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "732:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "732:34:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "732:34:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "511:9:20",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "522:6:20",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "530:6:20",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "538:6:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "546:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "557:4:20",
														"type": ""
													}
												],
												"src": "381:391:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "809:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "826:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "833:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "838:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "829:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "829:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "819:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "819:31:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "819:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "869:4:20",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "859:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "859:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "859:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "890:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "883:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "883:15:20"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "777:127:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "955:207:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "965:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "975:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "965:6:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "993:35:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:6:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1023:4:20",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1011:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:17:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "997:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1103:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1105:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1105:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1046:10:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1058:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1043:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1043:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1082:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1079:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1079:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1040:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:62:20"
															},
															"nodeType": "YulIf",
															"src": "1037:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1141:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1145:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:22:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1134:22:20"
														}
													]
												},
												"name": "allocate_memory_1284",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "944:6:20",
														"type": ""
													}
												],
												"src": "909:253:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:230:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1222:19:20",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1232:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:9:20"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1222:6:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1250:58:20",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1272:6:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1288:4:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1294:2:20",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1284:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1284:13:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1303:2:20",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1299:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1299:7:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1280:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1280:27:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1268:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:40:20"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1254:10:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1383:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1385:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1385:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1385:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1326:10:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1338:18:20",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1323:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:34:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1362:10:20"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1374:6:20"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1359:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:22:20"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1320:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:62:20"
															},
															"nodeType": "YulIf",
															"src": "1317:88:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:20",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1425:10:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:22:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:22:20"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1192:4:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1201:6:20",
														"type": ""
													}
												],
												"src": "1167:275:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1527:684:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1537:12:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1547:2:20",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1541:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1594:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1606:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1596:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1596:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1596:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1569:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1578:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1565:23:20"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1590:2:20"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:32:20"
															},
															"nodeType": "YulIf",
															"src": "1558:52:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1619:37:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1633:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:23:20"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1623:6:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1665:28:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1675:18:20",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1669:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1720:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1729:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1732:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1722:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1722:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:20"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1716:2:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1705:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:14:20"
															},
															"nodeType": "YulIf",
															"src": "1702:34:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1745:32:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1759:9:20"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1770:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1755:22:20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1749:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1825:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1834:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1837:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1827:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1827:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1827:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1804:2:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1808:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1800:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1800:13:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1815:7:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:35:20"
															},
															"nodeType": "YulIf",
															"src": "1786:55:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1850:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1873:2:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1860:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:16:20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1854:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1899:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1901:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1901:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1901:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1891:2:20"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1895:2:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1888:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:10:20"
															},
															"nodeType": "YulIf",
															"src": "1885:36:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:66:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1971:2:20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1975:4:20",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1967:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1967:13:20"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1986:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1982:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1982:7:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1963:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1963:27:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1992:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1959:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:36:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1943:15:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "1943:53:20"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "1934:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2012:5:20"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2019:2:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2005:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2005:17:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2005:17:20"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2068:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2080:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2070:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2070:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2070:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2045:2:20"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "2049:2:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2041:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2041:11:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2054:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2037:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2037:20:20"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2059:7:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2034:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2034:33:20"
															},
															"nodeType": "YulIf",
															"src": "2031:53:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "2110:5:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2117:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2106:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2106:14:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2126:2:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2130:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:11:20"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2135:2:20"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2093:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:45:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:45:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nodeType": "YulIdentifier",
																						"src": "2162:5:20"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "2169:2:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2158:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2158:14:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2174:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2179:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:34:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2147:34:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2190:15:20",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2200:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2190:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1493:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1504:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1516:6:20",
														"type": ""
													}
												],
												"src": "1447:764:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2369:273:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2379:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2391:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2402:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2387:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2387:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2379:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2422:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2439:6:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2433:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:13:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:32:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:32:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2467:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2478:4:20",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2463:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2463:20:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2495:6:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2503:4:20",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2491:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2491:17:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2485:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2485:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2456:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2456:54:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2456:54:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2530:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2541:4:20",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2526:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2526:20:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2558:6:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2566:4:20",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2554:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2554:17:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2548:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2519:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2519:54:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2519:54:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2604:4:20",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2589:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2589:20:20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2621:6:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2629:4:20",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2617:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2617:17:20"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2611:5:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:24:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:54:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2582:54:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_PriceInfo_$422_memory_ptr__to_t_struct$_PriceInfo_$422_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2338:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2349:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2360:4:20",
														"type": ""
													}
												],
												"src": "2216:426:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2748:102:20",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2758:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2770:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2781:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2758:4:20"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:20"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2815:6:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2831:3:20",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2836:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2827:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2827:11:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2840:1:20",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2823:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2823:19:20"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2811:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2811:32:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2793:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2793:51:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2793:51:20"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2717:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2728:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2739:4:20",
														"type": ""
													}
												],
												"src": "2647:203:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2900:86:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2964:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2973:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2976:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2966:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2966:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2966:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2923:5:20"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2934:5:20"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2949:3:20",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2954:1:20",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2945:3:20"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2945:11:20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2958:1:20",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2941:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2941:19:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2930:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2930:31:20"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2920:2:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:42:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:50:20"
															},
															"nodeType": "YulIf",
															"src": "2910:70:20"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2889:5:20",
														"type": ""
													}
												],
												"src": "2855:131:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:177:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3107:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3116:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3119:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3109:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3074:32:20"
															},
															"nodeType": "YulIf",
															"src": "3071:52:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3132:36:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3158:9:20"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3145:12:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:23:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3136:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3202:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3177:24:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3177:31:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3177:31:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3217:15:20",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3227:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3027:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3038:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3050:6:20",
														"type": ""
													}
												],
												"src": "2991:247:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3417:162:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3434:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3445:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3427:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:21:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3427:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3468:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3479:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3464:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3464:18:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3484:2:20",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3457:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:30:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3457:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3507:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3518:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3503:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3503:18:20"
																	},
																	{
																		"hexValue": "4674736f5265676973747279",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3523:14:20",
																		"type": "",
																		"value": "FtsoRegistry"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3496:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:42:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3496:42:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3547:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3559:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3570:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3555:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3547:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3394:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3408:4:20",
														"type": ""
													}
												],
												"src": "3243:336:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3665:170:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3711:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3720:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3723:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3713:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3713:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3713:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3686:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3695:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3682:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3678:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:32:20"
															},
															"nodeType": "YulIf",
															"src": "3675:52:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3736:29:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3755:9:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3749:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:16:20"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3740:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3799:5:20"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3774:24:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:31:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:31:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3814:15:20",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3824:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3631:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3642:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3654:6:20",
														"type": ""
													}
												],
												"src": "3584:251:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3972:1249:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3982:12:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3992:2:20",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3986:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4039:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4048:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4051:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4041:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4041:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4041:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4014:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4010:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4010:23:20"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4035:2:20"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4006:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4006:32:20"
															},
															"nodeType": "YulIf",
															"src": "4003:52:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4064:30:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4084:9:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4078:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:16:20"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4068:6:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4103:28:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4113:18:20",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4107:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4158:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4167:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4170:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4160:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4160:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4160:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4146:6:20"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4154:2:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4143:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:14:20"
															},
															"nodeType": "YulIf",
															"src": "4140:34:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4183:32:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4197:9:20"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4208:6:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4193:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:22:20"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4187:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4263:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4272:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4275:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4265:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4265:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4265:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4242:2:20"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4246:4:20",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4238:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4238:13:20"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4253:7:20"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4234:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4234:27:20"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4227:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4227:35:20"
															},
															"nodeType": "YulIf",
															"src": "4224:55:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4288:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4304:2:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4298:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:9:20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4292:2:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4330:22:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4332:16:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4332:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4332:18:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4322:2:20"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4326:2:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4319:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:10:20"
															},
															"nodeType": "YulIf",
															"src": "4316:36:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4361:47:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4396:1:20",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "4399:2:20"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4392:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4392:10:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4404:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:19:20"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4372:15:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4372:36:20"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4365:3:20",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4417:16:20",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4430:3:20"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4421:5:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4449:3:20"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4454:2:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:15:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4466:19:20",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4477:3:20"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4482:2:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:12:20"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4466:3:20"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4494:42:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4516:2:20"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4524:1:20",
																						"type": "",
																						"value": "7"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "4527:2:20"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4520:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4520:10:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4512:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4512:19:20"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4533:2:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:28:20"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4498:6:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4568:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4577:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4580:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4570:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4570:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4551:6:20"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4559:7:20"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4548:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:19:20"
															},
															"nodeType": "YulIf",
															"src": "4545:39:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4593:22:20",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4608:2:20"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4612:2:20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4604:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:11:20"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4597:3:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4682:509:20",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4740:74:20",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "4758:11:20",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4768:1:20",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "4762:2:20",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "4793:2:20"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "4797:2:20"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "4786:6:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4786:14:20"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "4786:14:20"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dataEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4707:7:20"
																						},
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4716:3:20"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "4703:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4703:17:20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4722:4:20",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nodeType": "YulIdentifier",
																				"src": "4699:3:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4699:28:20"
																		},
																		"nodeType": "YulIf",
																		"src": "4696:118:20"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4827:35:20",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_1284",
																				"nodeType": "YulIdentifier",
																				"src": "4840:20:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4840:22:20"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "4831:5:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "4882:5:20"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "4895:3:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4889:5:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4889:10:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4875:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4875:25:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4875:25:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "4924:5:20"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4931:2:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4920:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4920:14:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4946:3:20"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4951:2:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4942:3:20"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4942:12:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4936:5:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4936:19:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4913:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4913:43:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4913:43:20"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4969:12:20",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4979:2:20",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "4973:2:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "5005:5:20"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "5012:2:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5001:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5001:14:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5027:3:20"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "5032:2:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5023:3:20"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5023:12:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5017:5:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5017:19:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4994:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4994:43:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4994:43:20"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5050:12:20",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5060:2:20",
																			"type": "",
																			"value": "96"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "5054:2:20",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "5086:5:20"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "5093:2:20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5082:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5082:14:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "5108:3:20"
																								},
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "5113:2:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5104:3:20"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5104:12:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5098:5:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5098:19:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5075:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5075:43:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5075:43:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5138:3:20"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "5143:5:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5131:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5131:18:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5131:18:20"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5162:19:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5173:3:20"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5178:2:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5169:3:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5169:12:20"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5162:3:20"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4635:3:20"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4640:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4632:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:15:20"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4648:25:20",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4650:21:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4661:3:20"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4666:4:20",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4657:3:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4657:14:20"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4650:3:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4628:3:20",
																"statements": []
															},
															"src": "4624:567:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5200:15:20",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5210:5:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5200:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3938:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3949:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3961:6:20",
														"type": ""
													}
												],
												"src": "3840:1381:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5258:95:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5282:3:20",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5287:10:20",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5278:20:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:31:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5268:31:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:20",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:4:20",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5308:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5308:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5308:15:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5339:1:20",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5342:4:20",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5332:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5332:15:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5332:15:20"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5226:127:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5405:185:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5444:111:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5465:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5472:3:20",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5477:10:20",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5468:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5468:20:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5458:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5458:31:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5458:31:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5509:1:20",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5512:4:20",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5502:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5502:15:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5502:15:20"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5537:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5540:4:20",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5530:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5530:15:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5530:15:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5421:5:20"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5432:1:20",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5428:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5428:6:20"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5418:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:17:20"
															},
															"nodeType": "YulIf",
															"src": "5415:140:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5564:20:20",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5575:5:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5582:1:20",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5571:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5571:13:20"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5564:3:20"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5387:5:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5397:3:20",
														"type": ""
													}
												],
												"src": "5358:232:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5716:427:20",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5726:12:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5736:2:20",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5730:2:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5754:9:20"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5765:2:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5747:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:21:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5747:21:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5777:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5797:6:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5791:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:13:20"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5781:6:20",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5824:9:20"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5835:2:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5820:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5820:18:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5840:6:20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5813:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5813:34:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5813:34:20"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5856:10:20",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5865:1:20",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5860:1:20",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5925:90:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "5954:9:20"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5965:1:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5950:3:20"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5950:17:20"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5969:2:20",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5946:3:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5946:26:20"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5988:6:20"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5996:1:20"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5984:3:20"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5984:14:20"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "6000:2:20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5980:3:20"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5980:23:20"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5974:5:20"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5974:30:20"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5939:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5939:66:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5939:66:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5886:1:20"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5889:6:20"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5883:2:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:13:20"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5897:19:20",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5899:15:20",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5908:1:20"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5911:2:20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5904:3:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5904:10:20"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5899:1:20"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5879:3:20",
																"statements": []
															},
															"src": "5875:140:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6039:9:20"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6050:6:20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6035:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6035:22:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6059:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6031:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6031:31:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6064:1:20",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6024:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6024:42:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6024:42:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6075:62:20",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6091:9:20"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6110:6:20"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6118:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6106:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6106:15:20"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6127:2:20",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6123:3:20"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6123:7:20"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6102:3:20"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6102:29:20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6087:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6087:45:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6134:2:20",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6083:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:54:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6075:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5685:9:20",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5696:6:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5707:4:20",
														"type": ""
													}
												],
												"src": "5595:548:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6229:103:20",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6275:16:20",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6284:1:20",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6287:1:20",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6277:6:20"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6277:12:20"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6277:12:20"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6250:7:20"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6259:9:20"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6246:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6246:23:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6271:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6242:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6242:32:20"
															},
															"nodeType": "YulIf",
															"src": "6239:52:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6300:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6316:9:20"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6310:5:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6310:16:20"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:20"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6195:9:20",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6206:7:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6218:6:20",
														"type": ""
													}
												],
												"src": "6148:184:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6511:228:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6528:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6539:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:21:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6521:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6573:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6558:18:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6578:2:20",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6551:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:30:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6601:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6612:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6597:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6597:18:20"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6617:34:20",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6590:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:62:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:62:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6672:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6683:2:20",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6668:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6668:18:20"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6688:8:20",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6661:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:36:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6661:36:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6706:27:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6718:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6729:3:20",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6714:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:19:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6706:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6488:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6502:4:20",
														"type": ""
													}
												],
												"src": "6337:402:20"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6918:182:20",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6935:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6946:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6928:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6928:21:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6928:21:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6969:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6980:2:20",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6965:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6965:18:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6985:2:20",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6958:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:30:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6958:30:20"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7008:9:20"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7019:2:20",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7004:3:20"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7004:18:20"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7024:34:20",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6997:6:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "6997:62:20"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6997:62:20"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7068:26:20",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7080:9:20"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:2:20",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:20"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:18:20"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7068:4:20"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6895:9:20",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6909:4:20",
														"type": ""
													}
												],
												"src": "6744:356:20"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_1284() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x80)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value0 := array\n    }\n    function abi_encode_tuple_t_struct$_PriceInfo_$422_memory_ptr__to_t_struct$_PriceInfo_$422_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"FtsoRegistry\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let dst := allocate_memory(add(shl(5, _4), _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(7, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, 0x80) }\n        {\n            if slt(sub(dataEnd, src), 0x80)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            let value := allocate_memory_1284()\n            mstore(value, mload(src))\n            mstore(add(value, _1), mload(add(src, _1)))\n            let _6 := 64\n            mstore(add(value, _6), mload(add(src, _6)))\n            let _7 := 96\n            mstore(add(value, _7), mload(add(src, _7)))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 20,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80633d44abf11161005b5780633d44abf1146100ff578063715018a6146101455780638da5cb5b1461014d578063f2fde38b1461016857600080fd5b8063068b6bd51461008257806316638d591461008c57806334ece79d146100a8575b600080fd5b61008a61017b565b005b61009560035481565b6040519081526020015b60405180910390f35b6100df6100b63660046105bf565b600260208190526000918252604090912080546001820154928201546003909201549092919084565b60408051948552602085019390935291830152606082015260800161009f565b61011261010d366004610648565b610317565b60405161009f91908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b61008a610483565b6000546040516001600160a01b03909116815260200161009f565b61008a6101763660046106f2565b610497565b610183610515565b60015460405163413b07e560e11b815260206004820152600c60248201526b4674736f526567697374727960a01b60448201526000916001600160a01b0316906382760fca90606401602060405180830381865afa1580156101e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020d9190610716565b90506000816001600160a01b03166358f9296f6040518163ffffffff1660e01b8152600401600060405180830381865afa15801561024f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102779190810190610733565b8051600355905060005b81518110156103125781818151811061029c5761029c610814565b6020026020010151600260008484815181106102ba576102ba610814565b602002602001015160000151815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155905050808061030a9061082a565b915050610281565b505050565b6103426040518060800160405280600081526020016000815260200160008152602001600081525090565b60015460405163413b07e560e11b815260206004820152600c60248201526b4674736f526567697374727960a01b60448201526000916001600160a01b0316906382760fca90606401602060405180830381865afa1580156103a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cc9190610716565b90506000816001600160a01b031663e848da30856040518263ffffffff1660e01b81526004016103fc9190610851565b602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d919061089f565b6000908152600260208181526040928390208351608081018552815481526001820154928101929092529182015492810192909252600301546060820152949350505050565b61048b610515565b610495600061056f565b565b61049f610515565b6001600160a01b0381166105095760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105128161056f565b50565b6000546001600160a01b031633146104955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610500565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156105d157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610611576106116105d8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610640576106406105d8565b604052919050565b6000602080838503121561065b57600080fd5b823567ffffffffffffffff8082111561067357600080fd5b818501915085601f83011261068757600080fd5b813581811115610699576106996105d8565b6106ab601f8201601f19168501610617565b915080825286848285010111156106c157600080fd5b8084840185840137600090820190930192909252509392505050565b6001600160a01b038116811461051257600080fd5b60006020828403121561070457600080fd5b813561070f816106dd565b9392505050565b60006020828403121561072857600080fd5b815161070f816106dd565b6000602080838503121561074657600080fd5b825167ffffffffffffffff8082111561075e57600080fd5b818501915085601f83011261077257600080fd5b815181811115610784576107846105d8565b610792848260051b01610617565b818152848101925060079190911b8301840190878211156107b257600080fd5b928401925b8184101561080957608084890312156107d05760008081fd5b6107d86105ee565b84518152858501518682015260408086015190820152606080860151908201528352608090930192918401916107b7565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161084a57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208083528351808285015260005b8181101561087e57858101830151858201604001528201610862565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156108b157600080fd5b505191905056fea26469706673582212200b6cce2e2fc66805f9c56c37983dbc5ba0cfaf65646271d92391b17548fb940164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3D44ABF1 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x3D44ABF1 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x68B6BD5 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x16638D59 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x34ECE79D EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x17B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x95 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x112 PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9F SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x8A PUSH2 0x483 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x8A PUSH2 0x176 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x183 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x413B07E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4674736F5265676973747279 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x82760FCA SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x58F9296F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x277 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x733 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x3 SSTORE SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x312 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x29C JUMPI PUSH2 0x29C PUSH2 0x814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2BA JUMPI PUSH2 0x2BA PUSH2 0x814 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP DUP1 DUP1 PUSH2 0x30A SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x281 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x342 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x413B07E5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x4674736F5265676973747279 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x82760FCA SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x716 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE848DA30 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x419 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x89F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x80 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x48B PUSH2 0x515 JUMP JUMPDEST PUSH2 0x495 PUSH1 0x0 PUSH2 0x56F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x49F PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x509 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x512 DUP2 PUSH2 0x56F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x500 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x611 JUMPI PUSH2 0x611 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x640 JUMPI PUSH2 0x640 PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x699 JUMPI PUSH2 0x699 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x6AB PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x617 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 SWAP1 DUP3 ADD SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x512 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x70F DUP2 PUSH2 0x6DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x70F DUP2 PUSH2 0x6DD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x75E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x784 JUMPI PUSH2 0x784 PUSH2 0x5D8 JUMP JUMPDEST PUSH2 0x792 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0x617 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x809 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x7D8 PUSH2 0x5EE JUMP JUMPDEST DUP5 MLOAD DUP2 MSTORE DUP6 DUP6 ADD MLOAD DUP7 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x7B7 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x84A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x87E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x862 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH13 0xCE2E2FC66805F9C56C37983DBC JUMPDEST LOG0 0xCF 0xAF PUSH6 0x646271D92391 0xB1 PUSH22 0x48FB940164736F6C6343000811003300000000000000 ",
							"sourceMap": "495:1237:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;885:479;;;:::i;:::-;;826:30;;;;;;;;;160:25:20;;;148:2;133:18;826:30:19;;;;;;;;752:67;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;612:25:20;;;668:2;653:18;;646:34;;;;696:18;;;689:34;754:2;739:18;;732:34;599:3;584:19;752:67:19;381:391:20;1370:360:19;;;;;;:::i;:::-;;:::i;:::-;;;;;;2433:13:20;;2415:32;;2503:4;2491:17;;;2485:24;2463:20;;;2456:54;2566:4;2554:17;;;2548:24;2526:20;;;2519:54;2629:4;2617:17;;;2611:24;2589:20;;;2582:54;;;;2402:3;2387:19;;2216:426;1824:101:16;;;:::i;1201:85::-;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:16;;;2793:51:20;;2781:2;2766:18;1201:85:16;2647:203:20;2074:198:16;;;;;;:::i;:::-;;:::i;885:479:19:-;1094:13:16;:11;:13::i;:::-;995:16:19::1;::::0;:57:::1;::::0;-1:-1:-1;;;995:57:19;;3445:2:20;995:57:19::1;::::0;::::1;3427:21:20::0;3484:2;3464:18;;;3457:30;-1:-1:-1;;;3503:18:20;;;3496:42;939:26:19::1;::::0;-1:-1:-1;;;;;995:16:19::1;::::0;:41:::1;::::0;3555:18:20;;995:57:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;939:123;;1073:44;1120:12;-1:-1:-1::0;;;;;1120:45:19::1;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;1120:47:19::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;1196:18:::0;;1178:15:::1;:36:::0;1073:94;-1:-1:-1;1230:9:19::1;1225:133;1249:11;:18;1245:1;:22;1225:133;;;1333:11;1345:1;1333:14;;;;;;;;:::i;:::-;;;;;;;1288:16;:42;1305:11;1317:1;1305:14;;;;;;;;:::i;:::-;;;;;;;:24;;;1288:42;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:3;;;;;:::i;:::-;;;;1225:133;;;;929:435;;885:479::o:0;1370:360::-;1459:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1459:30:19;1558:16;;:57;;-1:-1:-1;;;1558:57:19;;3445:2:20;1558:57:19;;;3427:21:20;3484:2;3464:18;;;3457:30;-1:-1:-1;;;3503:18:20;;;3496:42;1502:26:19;;-1:-1:-1;;;;;1558:16:19;;:41;;3555:18:20;;1558:57:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1502:123;;1635:12;1650;-1:-1:-1;;;;;1650:25:19;;1676:7;1650:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:22;;;;:16;:22;;;;;;;;;1694:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1370:360;-1:-1:-1;;;;1370:360:19:o;1824:101:16:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:16;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:16;;6539:2:20;2154:73:16::1;::::0;::::1;6521:21:20::0;6578:2;6558:18;;;6551:30;6617:34;6597:18;;;6590:62;-1:-1:-1;;;6668:18:20;;;6661:36;6714:19;;2154:73:16::1;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:16;719:10:18;1422:23:16;1414:68;;;;-1:-1:-1;;;1414:68:16;;6946:2:20;1414:68:16;;;6928:21:20;;;6965:18;;;6958:30;7024:34;7004:18;;;6997:62;7076:18;;1414:68:16;6744:356:20;2426:187:16;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:16;;;-1:-1:-1;;;;;;2534:17:16;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;196:180:20:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:20;;196:180;-1:-1:-1;196:180:20:o;777:127::-;838:10;833:3;829:20;826:1;819:31;869:4;866:1;859:15;893:4;890:1;883:15;909:253;981:2;975:9;1023:4;1011:17;;1058:18;1043:34;;1079:22;;;1040:62;1037:88;;;1105:18;;:::i;:::-;1141:2;1134:22;909:253;:::o;1167:275::-;1238:2;1232:9;1303:2;1284:13;;-1:-1:-1;;1280:27:20;1268:40;;1338:18;1323:34;;1359:22;;;1320:62;1317:88;;;1385:18;;:::i;:::-;1421:2;1414:22;1167:275;;-1:-1:-1;1167:275:20:o;1447:764::-;1516:6;1547:2;1590;1578:9;1569:7;1565:23;1561:32;1558:52;;;1606:1;1603;1596:12;1558:52;1646:9;1633:23;1675:18;1716:2;1708:6;1705:14;1702:34;;;1732:1;1729;1722:12;1702:34;1770:6;1759:9;1755:22;1745:32;;1815:7;1808:4;1804:2;1800:13;1796:27;1786:55;;1837:1;1834;1827:12;1786:55;1873:2;1860:16;1895:2;1891;1888:10;1885:36;;;1901:18;;:::i;:::-;1943:53;1986:2;1967:13;;-1:-1:-1;;1963:27:20;1959:36;;1943:53;:::i;:::-;1930:66;;2019:2;2012:5;2005:17;2059:7;2054:2;2049;2045;2041:11;2037:20;2034:33;2031:53;;;2080:1;2077;2070:12;2031:53;2135:2;2130;2126;2122:11;2117:2;2110:5;2106:14;2093:45;2179:1;2158:14;;;2154:23;;;2147:34;;;;-1:-1:-1;2162:5:20;1447:764;-1:-1:-1;;;1447:764:20:o;2855:131::-;-1:-1:-1;;;;;2930:31:20;;2920:42;;2910:70;;2976:1;2973;2966:12;2991:247;3050:6;3103:2;3091:9;3082:7;3078:23;3074:32;3071:52;;;3119:1;3116;3109:12;3071:52;3158:9;3145:23;3177:31;3202:5;3177:31;:::i;:::-;3227:5;2991:247;-1:-1:-1;;;2991:247:20:o;3584:251::-;3654:6;3707:2;3695:9;3686:7;3682:23;3678:32;3675:52;;;3723:1;3720;3713:12;3675:52;3755:9;3749:16;3774:31;3799:5;3774:31;:::i;3840:1381::-;3961:6;3992:2;4035;4023:9;4014:7;4010:23;4006:32;4003:52;;;4051:1;4048;4041:12;4003:52;4084:9;4078:16;4113:18;4154:2;4146:6;4143:14;4140:34;;;4170:1;4167;4160:12;4140:34;4208:6;4197:9;4193:22;4183:32;;4253:7;4246:4;4242:2;4238:13;4234:27;4224:55;;4275:1;4272;4265:12;4224:55;4304:2;4298:9;4326:2;4322;4319:10;4316:36;;;4332:18;;:::i;:::-;4372:36;4404:2;4399;4396:1;4392:10;4388:19;4372:36;:::i;:::-;4442:15;;;4473:12;;;;-1:-1:-1;4524:1:20;4520:10;;;;4512:19;;4508:28;;;4548:19;;;4545:39;;;4580:1;4577;4570:12;4545:39;4604:11;;;;4624:567;4640:6;4635:3;4632:15;4624:567;;;4722:4;4716:3;4707:7;4703:17;4699:28;4696:118;;;4768:1;4797:2;4793;4786:14;4696:118;4840:22;;:::i;:::-;4889:10;;4875:25;;4942:12;;;4936:19;4920:14;;;4913:43;4979:2;5023:12;;;5017:19;5001:14;;;4994:43;5060:2;5104:12;;;5098:19;5082:14;;;5075:43;5131:18;;4666:4;4657:14;;;;5169:12;;;;4624:567;;;5210:5;3840:1381;-1:-1:-1;;;;;;;3840:1381:20:o;5226:127::-;5287:10;5282:3;5278:20;5275:1;5268:31;5318:4;5315:1;5308:15;5342:4;5339:1;5332:15;5358:232;5397:3;5418:17;;;5415:140;;5477:10;5472:3;5468:20;5465:1;5458:31;5512:4;5509:1;5502:15;5540:4;5537:1;5530:15;5415:140;-1:-1:-1;5582:1:20;5571:13;;5358:232::o;5595:548::-;5707:4;5736:2;5765;5754:9;5747:21;5797:6;5791:13;5840:6;5835:2;5824:9;5820:18;5813:34;5865:1;5875:140;5889:6;5886:1;5883:13;5875:140;;;5984:14;;;5980:23;;5974:30;5950:17;;;5969:2;5946:26;5939:66;5904:10;;5875:140;;;5879:3;6064:1;6059:2;6050:6;6039:9;6035:22;6031:31;6024:42;6134:2;6127;6123:7;6118:2;6110:6;6106:15;6102:29;6091:9;6087:45;6083:54;6075:62;;;;5595:548;;;;:::o;6148:184::-;6218:6;6271:2;6259:9;6250:7;6246:23;6242:32;6239:52;;;6287:1;6284;6277:12;6239:52;-1:-1:-1;6310:16:20;;6148:184;-1:-1:-1;6148:184:20:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "457200",
								"executionCost": "50570",
								"totalCost": "507770"
							},
							"external": {
								"currentPriceInfo(uint256)": "8894",
								"latestPriceForToken(string)": "infinite",
								"owner()": "2345",
								"priceInfosCount()": "2307",
								"refreshPrices()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH",
									"source": 19,
									"value": "80"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 648,
									"end": 745,
									"name": "PUSH",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 648,
									"end": 745,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 648,
									"end": 745,
									"name": "SLOAD",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 648,
									"end": 745,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 599,
									"end": 641,
									"name": "PUSH",
									"source": 19,
									"value": "AD67FE66660FB8DFE9D6B1B4240D8650E30F6019"
								},
								{
									"begin": 648,
									"end": 745,
									"name": "OR",
									"source": 19
								},
								{
									"begin": 648,
									"end": 745,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 648,
									"end": 745,
									"name": "SSTORE",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "CALLVALUE",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 863,
									"end": 879,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 863,
									"end": 879,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 863,
									"end": 879,
									"name": "tag",
									"source": 19,
									"value": "1"
								},
								{
									"begin": 863,
									"end": 879,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 18
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "10"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 16,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 16
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "tag",
									"source": 19,
									"value": "10"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH #[$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH [$]",
									"source": 19,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "CODECOPY",
									"source": 19
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 1732,
									"name": "RETURN",
									"source": 19
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b6cce2e2fc66805f9c56c37983dbc5ba0cfaf65646271d92391b17548fb940164736f6c63430008110033",
									".code": [
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "CALLVALUE",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "tag",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "SHR",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "3D44ABF1"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "3D44ABF1"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "715018A6"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "7"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "8DA5CB5B"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "F2FDE38B"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "9"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "tag",
											"source": 19,
											"value": "10"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "68B6BD5"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "16638D59"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "34ECE79D"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "tag",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 495,
											"end": 1732,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "tag",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "STOP",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "tag",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "tag",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 826,
											"end": 856,
											"name": "tag",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 856,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 826,
											"end": 856,
											"name": "RETURN",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "tag",
											"source": 19,
											"value": "5"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "19"
										},
										{
											"begin": 752,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "tag",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 819,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 752,
											"end": 819,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 612,
											"end": 637,
											"name": "SWAP5",
											"source": 20
										},
										{
											"begin": 612,
											"end": 637,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 612,
											"end": 637,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 668,
											"end": 670,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 653,
											"end": 671,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 653,
											"end": 671,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 646,
											"end": 680,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 646,
											"end": 680,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 646,
											"end": 680,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 646,
											"end": 680,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 696,
											"end": 714,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 696,
											"end": 714,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 696,
											"end": 714,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 689,
											"end": 723,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 739,
											"end": 757,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 739,
											"end": 757,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 732,
											"end": 766,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 599,
											"end": 602,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 584,
											"end": 603,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 752,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 381,
											"end": 772,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "tag",
											"source": 19,
											"value": "6"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "CALLDATASIZE",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 1370,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "tag",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 1370,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2415,
											"end": 2447,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2491,
											"end": 2508,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2485,
											"end": 2509,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2463,
											"end": 2483,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2456,
											"end": 2510,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2566,
											"end": 2570,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2571,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2554,
											"end": 2571,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 2554,
											"end": 2571,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2548,
											"end": 2572,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2526,
											"end": 2546,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2519,
											"end": 2573,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2629,
											"end": 2633,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 2617,
											"end": 2634,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2617,
											"end": 2634,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2617,
											"end": 2634,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2611,
											"end": 2635,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2582,
											"end": 2636,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2582,
											"end": 2636,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2582,
											"end": 2636,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 2582,
											"end": 2636,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2402,
											"end": 2405,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 2387,
											"end": 2406,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2387,
											"end": 2406,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2216,
											"end": 2642,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2793,
											"end": 2844,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2793,
											"end": 2844,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2781,
											"end": 2783,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 2647,
											"end": 2850,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "tag",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 995,
											"end": 1011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 995,
											"end": 1011,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1052,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "413B07E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 995,
											"end": 1052,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3445,
											"end": 3447,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 995,
											"end": 1052,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3427,
											"end": 3448,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": 20,
											"value": "C"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3457,
											"end": 3487,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4674736F5265676973747279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3496,
											"end": 3538,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 939,
											"end": 965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 965,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 995,
											"end": 1011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1011,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "82760FCA"
										},
										{
											"begin": 995,
											"end": 1036,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1052,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 995,
											"end": 1052,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "47"
										},
										{
											"begin": 995,
											"end": 1052,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 939,
											"end": 1062,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 939,
											"end": 1062,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1073,
											"end": 1117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1132,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1165,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "58F9296F"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "50"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "52"
										},
										{
											"begin": 1120,
											"end": 1167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "51"
										},
										{
											"begin": 1120,
											"end": 1167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1196,
											"end": 1214,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1196,
											"end": 1214,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1178,
											"end": 1193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1178,
											"end": 1214,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1073,
											"end": 1167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1249,
											"end": 1260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1249,
											"end": 1267,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1245,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1245,
											"end": 1267,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1344,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1345,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1333,
											"end": 1347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "57"
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1333,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1316,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1317,
											"end": 1318,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "58"
										},
										{
											"begin": 1305,
											"end": 1319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1319,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1330,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1288,
											"end": 1347,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "62"
										},
										{
											"begin": 1269,
											"end": 1272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1269,
											"end": 1272,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "53"
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 19,
											"value": "54"
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1225,
											"end": 1358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 929,
											"end": 1364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 929,
											"end": 1364,
											"modifierDepth": 1,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 885,
											"end": 1364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "tag",
											"source": 19,
											"value": "26"
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1459,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1459,
											"end": 1489,
											"name": "tag",
											"source": 19,
											"value": "63"
										},
										{
											"begin": 1459,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1574,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1558,
											"end": 1574,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "413B07E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3445,
											"end": 3447,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3427,
											"end": 3448,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": 20,
											"value": "C"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3464,
											"end": 3482,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3457,
											"end": 3487,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4674736F5265676973747279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3503,
											"end": 3521,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 3496,
											"end": 3538,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1528,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1558,
											"end": 1574,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1574,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "PUSH",
											"source": 19,
											"value": "82760FCA"
										},
										{
											"begin": 1558,
											"end": 1599,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "68"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "tag",
											"source": 19,
											"value": "68"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "48"
										},
										{
											"begin": 1558,
											"end": 1615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "tag",
											"source": 19,
											"value": "69"
										},
										{
											"begin": 1558,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1502,
											"end": 1625,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1502,
											"end": 1625,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1662,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1675,
											"name": "PUSH",
											"source": 19,
											"value": "E848DA30"
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SHL",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 1650,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "tag",
											"source": 19,
											"value": "70"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "GAS",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "STATICCALL",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "RETURNDATACOPY",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "tag",
											"source": 19,
											"value": "73"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "RETURNDATASIZE",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "NOT",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "74"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "75"
										},
										{
											"begin": 1650,
											"end": 1684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "tag",
											"source": 19,
											"value": "74"
										},
										{
											"begin": 1650,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1717,
											"name": "PUSH",
											"source": 19,
											"value": "2"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "KECCAK256",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "3"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SLOAD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1694,
											"end": 1723,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 1370,
											"end": 1730,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "77"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6539,
											"end": 6541,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6521,
											"end": 6542,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6578,
											"end": 6580,
											"name": "PUSH",
											"source": 20,
											"value": "26"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6558,
											"end": 6576,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6551,
											"end": 6581,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6617,
											"end": 6651,
											"name": "PUSH",
											"source": 20,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6597,
											"end": 6615,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6590,
											"end": 6652,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6668,
											"end": 6686,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 6668,
											"end": 6686,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6668,
											"end": 6686,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6661,
											"end": 6697,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6714,
											"end": 6733,
											"name": "PUSH",
											"source": 20,
											"value": "84"
										},
										{
											"begin": 6714,
											"end": 6733,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "88"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6946,
											"end": 6948,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6928,
											"end": 6949,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 6928,
											"end": 6949,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 6928,
											"end": 6949,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6965,
											"end": 6983,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 6965,
											"end": 6983,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6965,
											"end": 6983,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6958,
											"end": 6988,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7024,
											"end": 7058,
											"name": "PUSH",
											"source": 20,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 7004,
											"end": 7022,
											"name": "PUSH",
											"source": 20,
											"value": "44"
										},
										{
											"begin": 7004,
											"end": 7022,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 7004,
											"end": 7022,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6997,
											"end": 7059,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH",
											"source": 20,
											"value": "64"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 6744,
											"end": 7100,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 16,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 20,
											"value": "19"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 20,
											"value": "105"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 777,
											"end": 904,
											"name": "tag",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 777,
											"end": 904,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 838,
											"end": 848,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 833,
											"end": 836,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 829,
											"end": 849,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 826,
											"end": 827,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 850,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 869,
											"end": 873,
											"name": "PUSH",
											"source": 20,
											"value": "41"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 874,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 898,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 909,
											"end": 1162,
											"name": "tag",
											"source": 20,
											"value": "99"
										},
										{
											"begin": 909,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 975,
											"end": 984,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1023,
											"end": 1027,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 1011,
											"end": 1028,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1011,
											"end": 1028,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1058,
											"end": 1076,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1043,
											"end": 1077,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1043,
											"end": 1077,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1079,
											"end": 1101,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1079,
											"end": 1101,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1079,
											"end": 1101,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 1040,
											"end": 1102,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1037,
											"end": 1125,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1037,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 1037,
											"end": 1125,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 1105,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "tag",
											"source": 20,
											"value": "110"
										},
										{
											"begin": 1105,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1141,
											"end": 1143,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1134,
											"end": 1156,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 909,
											"end": 1162,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 909,
											"end": 1162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1167,
											"end": 1442,
											"name": "tag",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1167,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1238,
											"end": 1240,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 1303,
											"end": 1305,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1284,
											"end": 1297,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1284,
											"end": 1297,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1308,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1268,
											"end": 1308,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1323,
											"end": 1357,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1359,
											"end": 1381,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1359,
											"end": 1381,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1359,
											"end": 1381,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 1320,
											"end": 1382,
											"name": "OR",
											"source": 20
										},
										{
											"begin": 1317,
											"end": 1405,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1317,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 1317,
											"end": 1405,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 1385,
											"end": 1403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "tag",
											"source": 20,
											"value": "113"
										},
										{
											"begin": 1385,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1421,
											"end": 1423,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1436,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 1167,
											"end": 1442,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1167,
											"end": 1442,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1167,
											"end": 1442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 2211,
											"name": "tag",
											"source": 20,
											"value": "25"
										},
										{
											"begin": 1447,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1592,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1578,
											"end": 1587,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1569,
											"end": 1576,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1565,
											"end": 1588,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 1561,
											"end": 1593,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1606,
											"end": 1607,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1596,
											"end": 1608,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "tag",
											"source": 20,
											"value": "115"
										},
										{
											"begin": 1558,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1718,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1705,
											"end": 1719,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1702,
											"end": 1736,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1702,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 1702,
											"end": 1736,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1722,
											"end": 1734,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1702,
											"end": 1736,
											"name": "tag",
											"source": 20,
											"value": "116"
										},
										{
											"begin": 1702,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1759,
											"end": 1768,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1745,
											"end": 1777,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1745,
											"end": 1777,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 1815,
											"end": 1822,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1804,
											"end": 1806,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 1800,
											"end": 1813,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1796,
											"end": 1823,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 1786,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 1786,
											"end": 1841,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1837,
											"end": 1838,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1835,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 1827,
											"end": 1839,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 1786,
											"end": 1841,
											"name": "tag",
											"source": 20,
											"value": "117"
										},
										{
											"begin": 1786,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1873,
											"end": 1875,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1860,
											"end": 1876,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1891,
											"end": 1893,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 1885,
											"end": 1921,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 1885,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 1885,
											"end": 1921,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 1901,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "tag",
											"source": 20,
											"value": "119"
										},
										{
											"begin": 1901,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 1967,
											"end": 1980,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 1967,
											"end": 1980,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 1990,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 1959,
											"end": 1995,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 1959,
											"end": 1995,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 1943,
											"end": 1996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 1943,
											"end": 1996,
											"name": "tag",
											"source": 20,
											"value": "120"
										},
										{
											"begin": 1943,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 1930,
											"end": 1996,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 1930,
											"end": 1996,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2012,
											"end": 2017,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2005,
											"end": 2022,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 2059,
											"end": 2066,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2045,
											"end": 2047,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2041,
											"end": 2052,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2037,
											"end": 2057,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2034,
											"end": 2067,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 2031,
											"end": 2084,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 2031,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 2031,
											"end": 2084,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2070,
											"end": 2082,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2031,
											"end": 2084,
											"name": "tag",
											"source": 20,
											"value": "121"
										},
										{
											"begin": 2031,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 2135,
											"end": 2137,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2122,
											"end": 2133,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 2110,
											"end": 2115,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 2106,
											"end": 2120,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2093,
											"end": 2138,
											"name": "CALLDATACOPY",
											"source": 20
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2172,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2158,
											"end": 2172,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 2158,
											"end": 2172,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2154,
											"end": 2177,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 2147,
											"end": 2181,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2147,
											"end": 2181,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 2147,
											"end": 2181,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 2147,
											"end": 2181,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 1447,
											"end": 2211,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1447,
											"end": 2211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 2855,
											"end": 2986,
											"name": "tag",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 2855,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 2920,
											"end": 2962,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 2920,
											"end": 2962,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 2910,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "88"
										},
										{
											"begin": 2910,
											"end": 2980,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 2976,
											"end": 2977,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 2974,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 2991,
											"end": 3238,
											"name": "tag",
											"source": 20,
											"value": "37"
										},
										{
											"begin": 2991,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3105,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3082,
											"end": 3089,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3078,
											"end": 3101,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3074,
											"end": 3106,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3119,
											"end": 3120,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3109,
											"end": 3121,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "tag",
											"source": 20,
											"value": "127"
										},
										{
											"begin": 3071,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3158,
											"end": 3167,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "CALLDATALOAD",
											"source": 20
										},
										{
											"begin": 3177,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 3202,
											"end": 3207,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3177,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 3177,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3177,
											"end": 3208,
											"name": "tag",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 3177,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 2991,
											"end": 3238,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2991,
											"end": 3238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3584,
											"end": 3835,
											"name": "tag",
											"source": 20,
											"value": "48"
										},
										{
											"begin": 3584,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3654,
											"end": 3660,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 3695,
											"end": 3704,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 3686,
											"end": 3693,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 3682,
											"end": 3705,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 3678,
											"end": 3710,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "131"
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3721,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 3713,
											"end": 3725,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "tag",
											"source": 20,
											"value": "131"
										},
										{
											"begin": 3675,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3755,
											"end": 3764,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3749,
											"end": 3765,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 3774,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "128"
										},
										{
											"begin": 3799,
											"end": 3804,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 3774,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "101"
										},
										{
											"begin": 3774,
											"end": 3805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 3840,
											"end": 5221,
											"name": "tag",
											"source": 20,
											"value": "52"
										},
										{
											"begin": 3840,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 3961,
											"end": 3967,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 3994,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 4035,
											"end": 4037,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4014,
											"end": 4021,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4010,
											"end": 4033,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4006,
											"end": 4038,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "134"
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4051,
											"end": 4052,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4041,
											"end": 4053,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "tag",
											"source": 20,
											"value": "134"
										},
										{
											"begin": 4003,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4078,
											"end": 4094,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "PUSH",
											"source": 20,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4154,
											"end": 4156,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4146,
											"end": 4152,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4143,
											"end": 4157,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "135"
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4168,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4160,
											"end": 4172,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "tag",
											"source": 20,
											"value": "135"
										},
										{
											"begin": 4140,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4208,
											"end": 4214,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4197,
											"end": 4206,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4193,
											"end": 4215,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4183,
											"end": 4215,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4183,
											"end": 4215,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 4253,
											"end": 4260,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4246,
											"end": 4250,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 4242,
											"end": 4244,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4238,
											"end": 4251,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4234,
											"end": 4261,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4224,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "136"
										},
										{
											"begin": 4224,
											"end": 4279,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4275,
											"end": 4276,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4272,
											"end": 4273,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4265,
											"end": 4277,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4224,
											"end": 4279,
											"name": "tag",
											"source": 20,
											"value": "136"
										},
										{
											"begin": 4224,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4298,
											"end": 4307,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4326,
											"end": 4328,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4322,
											"end": 4324,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4319,
											"end": 4329,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4352,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4316,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "138"
										},
										{
											"begin": 4316,
											"end": 4352,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "138"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "98"
										},
										{
											"begin": 4332,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "tag",
											"source": 20,
											"value": "138"
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "139"
										},
										{
											"begin": 4404,
											"end": 4406,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4399,
											"end": 4401,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4396,
											"end": 4397,
											"name": "PUSH",
											"source": 20,
											"value": "5"
										},
										{
											"begin": 4392,
											"end": 4402,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 4388,
											"end": 4407,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "100"
										},
										{
											"begin": 4372,
											"end": 4408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "tag",
											"source": 20,
											"value": "139"
										},
										{
											"begin": 4372,
											"end": 4408,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4473,
											"end": 4485,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4473,
											"end": 4485,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4473,
											"end": 4485,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4473,
											"end": 4485,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4525,
											"name": "PUSH",
											"source": 20,
											"value": "7"
										},
										{
											"begin": 4520,
											"end": 4530,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4520,
											"end": 4530,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4520,
											"end": 4530,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4520,
											"end": 4530,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 4512,
											"end": 4531,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 4512,
											"end": 4531,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4508,
											"end": 4536,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4508,
											"end": 4536,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4508,
											"end": 4536,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4548,
											"end": 4567,
											"name": "DUP8",
											"source": 20
										},
										{
											"begin": 4548,
											"end": 4567,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4548,
											"end": 4567,
											"name": "GT",
											"source": 20
										},
										{
											"begin": 4545,
											"end": 4584,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4545,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 4545,
											"end": 4584,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4580,
											"end": 4581,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4577,
											"end": 4578,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4570,
											"end": 4582,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4545,
											"end": 4584,
											"name": "tag",
											"source": 20,
											"value": "140"
										},
										{
											"begin": 4545,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4604,
											"end": 4615,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4604,
											"end": 4615,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4604,
											"end": 4615,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4604,
											"end": 4615,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "tag",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4635,
											"end": 4638,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4632,
											"end": 4647,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 4716,
											"end": 4719,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4707,
											"end": 4714,
											"name": "DUP10",
											"source": 20
										},
										{
											"begin": 4703,
											"end": 4720,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 4699,
											"end": 4727,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 4768,
											"end": 4769,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 4797,
											"end": 4799,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 4793,
											"end": 4795,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4786,
											"end": 4800,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "tag",
											"source": 20,
											"value": "144"
										},
										{
											"begin": 4696,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "99"
										},
										{
											"begin": 4840,
											"end": 4862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "tag",
											"source": 20,
											"value": "145"
										},
										{
											"begin": 4840,
											"end": 4862,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 4889,
											"end": 4899,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 4889,
											"end": 4899,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4875,
											"end": 4900,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 4875,
											"end": 4900,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4942,
											"end": 4954,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4942,
											"end": 4954,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 4942,
											"end": 4954,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4936,
											"end": 4955,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 4920,
											"end": 4934,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 4920,
											"end": 4934,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 4920,
											"end": 4934,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4913,
											"end": 4956,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4979,
											"end": 4981,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5035,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5035,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5023,
											"end": 5035,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5017,
											"end": 5036,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5001,
											"end": 5015,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5001,
											"end": 5015,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5001,
											"end": 5015,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4994,
											"end": 5037,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5060,
											"end": 5062,
											"name": "PUSH",
											"source": 20,
											"value": "60"
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5098,
											"end": 5117,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5082,
											"end": 5096,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5082,
											"end": 5096,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5082,
											"end": 5096,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5075,
											"end": 5118,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 4666,
											"end": 4670,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 4657,
											"end": 4671,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 4657,
											"end": 4671,
											"name": "SWAP4",
											"source": 20
										},
										{
											"begin": 4657,
											"end": 4671,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 4657,
											"end": 4671,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5169,
											"end": 5181,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "141"
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "tag",
											"source": 20,
											"value": "143"
										},
										{
											"begin": 4624,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5210,
											"end": 5215,
											"name": "SWAP8",
											"source": 20
										},
										{
											"begin": 3840,
											"end": 5221,
											"name": "SWAP7",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3840,
											"end": 5221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5226,
											"end": 5353,
											"name": "tag",
											"source": 20,
											"value": "58"
										},
										{
											"begin": 5226,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5287,
											"end": 5297,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 5278,
											"end": 5298,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5299,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "PUSH",
											"source": 20,
											"value": "32"
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5308,
											"end": 5323,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5342,
											"end": 5346,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5332,
											"end": 5347,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 5358,
											"end": 5590,
											"name": "tag",
											"source": 20,
											"value": "62"
										},
										{
											"begin": 5358,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5397,
											"end": 5400,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5418,
											"end": 5435,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 5418,
											"end": 5435,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5418,
											"end": 5435,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5415,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "148"
										},
										{
											"begin": 5415,
											"end": 5555,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5477,
											"end": 5487,
											"name": "PUSH",
											"source": 20,
											"value": "4E487B71"
										},
										{
											"begin": 5472,
											"end": 5475,
											"name": "PUSH",
											"source": 20,
											"value": "E0"
										},
										{
											"begin": 5468,
											"end": 5488,
											"name": "SHL",
											"source": 20
										},
										{
											"begin": 5465,
											"end": 5466,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5489,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5512,
											"end": 5516,
											"name": "PUSH",
											"source": 20,
											"value": "11"
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 20,
											"value": "4"
										},
										{
											"begin": 5502,
											"end": 5517,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 20,
											"value": "24"
										},
										{
											"begin": 5537,
											"end": 5538,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5545,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 5415,
											"end": 5555,
											"name": "tag",
											"source": 20,
											"value": "148"
										},
										{
											"begin": 5415,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5582,
											"end": 5583,
											"name": "PUSH",
											"source": 20,
											"value": "1"
										},
										{
											"begin": 5571,
											"end": 5584,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5571,
											"end": 5584,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": 5358,
											"end": 5590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5595,
											"end": 6143,
											"name": "tag",
											"source": 20,
											"value": "71"
										},
										{
											"begin": 5595,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5707,
											"end": 5711,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5736,
											"end": 5738,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5754,
											"end": 5763,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5747,
											"end": 5768,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5797,
											"end": 5803,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5791,
											"end": 5804,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5840,
											"end": 5846,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5813,
											"end": 5847,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "tag",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5889,
											"end": 5895,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5886,
											"end": 5887,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5883,
											"end": 5896,
											"name": "LT",
											"source": 20
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "DUP2",
											"source": 20
										},
										{
											"begin": 5984,
											"end": 5998,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5980,
											"end": 6003,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 5980,
											"end": 6003,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5974,
											"end": 6004,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 5950,
											"end": 5967,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 5950,
											"end": 5967,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5950,
											"end": 5967,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5969,
											"end": 5971,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 5946,
											"end": 5972,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5939,
											"end": 6005,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 5904,
											"end": 5914,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 5904,
											"end": 5914,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "150"
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "tag",
											"source": 20,
											"value": "152"
										},
										{
											"begin": 5875,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 5879,
											"end": 5882,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6064,
											"end": 6065,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6061,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6050,
											"end": 6056,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6039,
											"end": 6048,
											"name": "DUP7",
											"source": 20
										},
										{
											"begin": 6035,
											"end": 6057,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6031,
											"end": 6062,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6024,
											"end": 6066,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 6134,
											"end": 6136,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 6127,
											"end": 6129,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6123,
											"end": 6130,
											"name": "NOT",
											"source": 20
										},
										{
											"begin": 6118,
											"end": 6120,
											"name": "PUSH",
											"source": 20,
											"value": "1F"
										},
										{
											"begin": 6110,
											"end": 6116,
											"name": "DUP4",
											"source": 20
										},
										{
											"begin": 6106,
											"end": 6121,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6102,
											"end": 6131,
											"name": "AND",
											"source": 20
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "DUP6",
											"source": 20
										},
										{
											"begin": 6087,
											"end": 6132,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6083,
											"end": 6137,
											"name": "ADD",
											"source": 20
										},
										{
											"begin": 6075,
											"end": 6137,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 6075,
											"end": 6137,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6075,
											"end": 6137,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 6075,
											"end": 6137,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5595,
											"end": 6143,
											"name": "SWAP3",
											"source": 20
										},
										{
											"begin": 5595,
											"end": 6143,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 5595,
											"end": 6143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5595,
											"end": 6143,
											"name": "POP",
											"source": 20
										},
										{
											"begin": 5595,
											"end": 6143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										},
										{
											"begin": 6148,
											"end": 6332,
											"name": "tag",
											"source": 20,
											"value": "75"
										},
										{
											"begin": 6148,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": 6218,
											"end": 6224,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6271,
											"end": 6273,
											"name": "PUSH",
											"source": 20,
											"value": "20"
										},
										{
											"begin": 6259,
											"end": 6268,
											"name": "DUP3",
											"source": 20
										},
										{
											"begin": 6250,
											"end": 6257,
											"name": "DUP5",
											"source": 20
										},
										{
											"begin": 6246,
											"end": 6269,
											"name": "SUB",
											"source": 20
										},
										{
											"begin": 6242,
											"end": 6274,
											"name": "SLT",
											"source": 20
										},
										{
											"begin": 6239,
											"end": 6291,
											"name": "ISZERO",
											"source": 20
										},
										{
											"begin": 6239,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 6239,
											"end": 6291,
											"name": "JUMPI",
											"source": 20
										},
										{
											"begin": 6287,
											"end": 6288,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6285,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 6277,
											"end": 6289,
											"name": "REVERT",
											"source": 20
										},
										{
											"begin": 6239,
											"end": 6291,
											"name": "tag",
											"source": 20,
											"value": "154"
										},
										{
											"begin": 6239,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6310,
											"end": 6326,
											"name": "MLOAD",
											"source": 20
										},
										{
											"begin": 6310,
											"end": 6326,
											"name": "SWAP2",
											"source": 20
										},
										{
											"begin": 6148,
											"end": 6332,
											"name": "SWAP1",
											"source": 20
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6148,
											"end": 6332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol",
								"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol",
								"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol",
								"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol",
								"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol",
								"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol",
								"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol",
								"lib/openzeppelin-contracts/contracts/access/Ownable.sol",
								"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
								"lib/openzeppelin-contracts/contracts/utils/Context.sol",
								"src/UnfuckGPTPriceData.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"currentPriceInfo(uint256)": "34ece79d",
							"latestPriceForToken(string)": "3d44abf1",
							"owner()": "8da5cb5b",
							"priceInfosCount()": "16638d59",
							"refreshPrices()": "068b6bd5",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"currentPriceInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"latestPriceForToken\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IFtsoRegistry.PriceInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceInfosCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refreshPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/UnfuckGPTPriceData.sol\":\"UnfuckGPTPriceData\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol\":{\"keccak256\":\"0xd245b3c083496b3539224dc707381db5a5e8a49a5012d370b34514caefa3415d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bfe225cca2e036b4c9e460e9fd7c3f568e9574d879f81c038309563987e2348\",\"dweb:/ipfs/QmUeLdoDMG7eyQSHzaHqXwVpEYB4Nd3FpvoDjpXckDs1dq\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol\":{\"keccak256\":\"0xd015bc43b8a22afaba50c42a56409df0d81172845dabc124a3d37b3b0bbd4df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc305f048820c05956ec05fa246ec9070f9d813b43935356e7fe35969f49fc02\",\"dweb:/ipfs/QmaUJ42ZFzcRgy6GQtstkXMk9UgL5ERZx2V9HueXApgWBW\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol\":{\"keccak256\":\"0x4765fdcb22dcc64c015d02c019f0ddce8d8b36111160fd4160a3d94ea4f370a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0baa5b9b24e3049bcf8de78d5dbdb778d53f5585fbe479550bfdcef2ed676257\",\"dweb:/ipfs/Qmd8Eby81zX1YptGo5E2zAraTFo2NGLRCL9XuyU7YSsaqG\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol\":{\"keccak256\":\"0xfae54442fb489dccc5f0a0a6f8d946c9fdebceece98fcb087c5998fa1363ff30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53d8b87f403e7d868ed832f8cb965a440c8c32d20699a07f0a3f7bb2abeff2b5\",\"dweb:/ipfs/QmTYEoSzDJyhiJyY2AhnirXD6F737mzSVbqbnr6g4Fa7kT\"]},\"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol\":{\"keccak256\":\"0x2b818c0cd8f2f1be88da36edd966d2b358c6954e50e0aa653a9d65ef2e9712d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07258af95b9556c024aaab2e2ff83955c56f255f82a024ed190f19947087682d\",\"dweb:/ipfs/QmeRKq6cYMau8VdLkEJw3xE6eK19Hz5DvzLEzUk1ZnVJxh\"]},\"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol\":{\"keccak256\":\"0x8c70a1ae9079bb9d29c8e2dde781f546b6cb621f0b7cc943b9cbcbd52718bb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4e89abe97c65481a1cacb59abcde6d18b127a89ed46f99402c30c6477ea0722\",\"dweb:/ipfs/Qmd6i71hUPHR11U1U8EvDwJyEg4xUZhLbDe7D4Z7LLrAZx\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol\":{\"keccak256\":\"0x1a1d0a1302b59249f9d2ca2700bb9759bc66bae73fe1c920cf4c20ac75b475fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7155abcad1dee722dbfad7bbdcf68608d9c9bddc0cb367897ce9ecc0185f7ff1\",\"dweb:/ipfs/Qmckp3mGWvBjQxeiGQAMQyeq3EK4tJmtMmj9EHZjzVXMQH\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol\":{\"keccak256\":\"0x23e31ef2ab9227795930728dc240fbe59f31f1b05e595ee137acc1e5e6e8497e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aecec4b505b6ea3963e78b39a6131b4562b908c24cfea9a674559dde23af72fe\",\"dweb:/ipfs/QmQmK8aAzcSYUCkvcZcXRNVybermZ6CEqjSXbS99gpytLa\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol\":{\"keccak256\":\"0x5388cd6705f08a9d7a82be3d4c1aea3266df20eb5263b9f5ecf95e73338dc595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c7a9b55b0d6dd4d053d702f897ea5272695006ae0ca25f3b3a1ccbf4e604fd9\",\"dweb:/ipfs/QmP1HtdwBY9ZJvDAQTEDZzCNBTrS2Rdk7QRy3An6PLMjd5\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol\":{\"keccak256\":\"0x6eb8619a51e0e00a93b32055e4f43d64f050b129e31bf0e161584d79cfbc5dc7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab5b8f39e1cb4f5a861e6468b4340ee57272d329488340fac71418e8c9936984\",\"dweb:/ipfs/QmdKDZkCAEjMeL233hsFTvGLG6rZzn6XVNnopKLV2iz4g8\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol\":{\"keccak256\":\"0x49a647d1e8c394320c337b09f14b0ca70f43b0a1327233ddd9b8dcf7f005f92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb712e00e5801b8f1a1d2c05d4e46556bac15e227df7e21cd5c80ad1cc16192d\",\"dweb:/ipfs/QmUAGmvn65u4R165gPMbNoJwVFicCtAC2Ce6Y3f8PpTbTw\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol\":{\"keccak256\":\"0xf1c8aa57f9840fff577e24abc3d24b92717e77f73384f82b0f2446812d0497fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://387a5149f1be7496efb046038f88d9599e417128aa507a39869f2bd929d687b6\",\"dweb:/ipfs/QmaEp9wagP6iw6qrGGwTceXzbfsXcmw1UkHzM7wyJoqve6\"]},\"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol\":{\"keccak256\":\"0x358aa3eced2172a3c252cd0c5efeb2572969ac6b64001f62facf185193668cea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8627e9e0dca5664cc7f5c9db39a602bd17ae4a2d698a0fb13b274a9474804d31\",\"dweb:/ipfs/QmRNVH3EaykbgjVntcCf2bHWyXWvoL4gEKkdMiXGJdjD2R\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/UnfuckGPTPriceData.sol\":{\"keccak256\":\"0x2e46f21b79f5b5a163b16f1945e31f5c640540437ecc14a32a02ffef91e833cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adb925437606058ddf3c8dbda147b2e642720e79a77bd5f4620ed634329a46b2\",\"dweb:/ipfs/QmRPMRQmQ2LDhwwBoHCr7i3Mq2P8JFiEe7poDVR4ug4mGc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1585,
								"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1806,
								"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
								"label": "contractRegistry",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IFlareContractRegistry)1577"
							},
							{
								"astId": 1811,
								"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
								"label": "currentPriceInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(PriceInfo)422_storage)"
							},
							{
								"astId": 1813,
								"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
								"label": "priceInfosCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IFlareContractRegistry)1577": {
								"encoding": "inplace",
								"label": "contract IFlareContractRegistry",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(PriceInfo)422_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IFtsoRegistry.PriceInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(PriceInfo)422_storage"
							},
							"t_struct(PriceInfo)422_storage": {
								"encoding": "inplace",
								"label": "struct IFtsoRegistry.PriceInfo",
								"members": [
									{
										"astId": 415,
										"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
										"label": "ftsoIndex",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 417,
										"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 419,
										"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
										"label": "decimals",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 421,
										"contract": "src/UnfuckGPTPriceData.sol:UnfuckGPTPriceData",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						],
						"IFtso": [
							406
						],
						"IFtsoGenesis": [
							195
						],
						"IGovernanceVotePower": [
							631
						],
						"IICleanable": [
							905
						],
						"IIFtso": [
							170
						],
						"IIGovernanceVotePower": [
							978
						],
						"IIVPContract": [
							1210
						],
						"IIVPToken": [
							1265
						],
						"IPChainStakeMirror": [
							732
						],
						"IPChainStakeMirrorVerifier": [
							752
						],
						"IPChainVotePower": [
							884
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						]
					},
					"id": 171,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:0"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol",
							"file": "../../genesis/interface/IFtsoGenesis.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 171,
							"sourceUnit": 196,
							"src": "63:50:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol",
							"file": "../../userInterfaces/IFtso.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 171,
							"sourceUnit": 407,
							"src": "114:40:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol",
							"file": "../../../util-contracts/token/token/interface/IIVPToken.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 171,
							"sourceUnit": 1266,
							"src": "155:69:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IFtso",
										"nameLocations": [
											"247:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 406,
										"src": "247:5:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "247:5:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "IFtsoGenesis",
										"nameLocations": [
											"254:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 195,
										"src": "254:12:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "254:12:0"
								}
							],
							"canonicalName": "IIFtso",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 170,
							"linearizedBaseContracts": [
								170,
								195,
								406
							],
							"name": "IIFtso",
							"nameLocation": "237:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "274:357:0",
										"text": "function finalizePriceReveal\n called by reward manager only on correct timing.\n if price reveal period for epoch x ended. finalize.\n iterate list of price submissions\n find weighted median\n find adjucant 50% of price submissions.\n Allocate reward for any price submission which is same as a \"winning\" submission"
									},
									"functionSelector": "40462a2d",
									"id": 24,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalizePriceEpoch",
									"nameLocation": "645:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "672:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "664:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "_returnRewardData",
												"nameLocation": "687:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "682:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 12,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "682:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:42:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "_eligibleAddresses",
												"nameLocation": "761:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "744:35:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 15,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "744:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 16,
													"nodeType": "ArrayTypeName",
													"src": "744:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_natWeights",
												"nameLocation": "810:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "793:28:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 18,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 19,
													"nodeType": "ArrayTypeName",
													"src": "793:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_totalNatWeight",
												"nameLocation": "843:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "835:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:138:0"
									},
									"scope": 170,
									"src": "636:233:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4afd5102",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fallbackFinalizePriceEpoch",
									"nameLocation": "884:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "919:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "911:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:18:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:0:0"
									},
									"scope": 170,
									"src": "875:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "974d7a6b",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "forceFinalizePriceEpoch",
									"nameLocation": "953:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "985:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "977:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:18:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1003:0:0"
									},
									"scope": 170,
									"src": "944:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f0a6f3c",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "activateFtso",
									"nameLocation": "1133:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "_firstEpochStartTs",
												"nameLocation": "1163:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1155:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_submitPeriodSeconds",
												"nameLocation": "1199:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1191:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_revealPeriodSeconds",
												"nameLocation": "1237:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1229:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1145:118:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:0"
									},
									"scope": 170,
									"src": "1124:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "555989da",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deactivateFtso",
									"nameLocation": "1288:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1302:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1313:0:0"
									},
									"scope": 170,
									"src": "1279:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "306ba253",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateInitialPrice",
									"nameLocation": "1392:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_initialPriceUSD",
												"nameLocation": "1419:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1411:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_initialPriceTimestamp",
												"nameLocation": "1445:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1437:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:58:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1477:0:0"
									},
									"scope": 170,
									"src": "1383:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3c9d8e",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "configureEpochs",
									"nameLocation": "1493:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "_maxVotePowerNatThresholdFraction",
												"nameLocation": "1526:33:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1518:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_maxVotePowerAssetThresholdFraction",
												"nameLocation": "1577:35:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1569:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "_lowAssetUSDThreshold",
												"nameLocation": "1630:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1622:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_highAssetUSDThreshold",
												"nameLocation": "1669:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1661:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_highAssetTurnoutThresholdBIPS",
												"nameLocation": "1709:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1701:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_lowNatTurnoutThresholdBIPS",
												"nameLocation": "1757:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1749:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "_elasticBandRewardBIPS",
												"nameLocation": "1802:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1794:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "_elasticBandWidthPPM",
												"nameLocation": "1842:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1834:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_trustedAddresses",
												"nameLocation": "1889:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1872:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 70,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1872:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 71,
													"nodeType": "ArrayTypeName",
													"src": "1872:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:404:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1921:0:0"
									},
									"scope": 170,
									"src": "1484:438:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0d552dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAsset",
									"nameLocation": "1937:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "_asset",
												"nameLocation": "1956:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1946:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIVPToken_$1265",
													"typeString": "contract IIVPToken"
												},
												"typeName": {
													"id": 77,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 76,
														"name": "IIVPToken",
														"nameLocations": [
															"1946:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1265,
														"src": "1946:9:0"
													},
													"referencedDeclaration": 1265,
													"src": "1946:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIVPToken_$1265",
														"typeString": "contract IIVPToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:18:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:0:0"
									},
									"scope": 170,
									"src": "1928:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "131fdee2",
									"id": 88,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setAssetFtsos",
									"nameLocation": "1988:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "_assetFtsos",
												"nameLocation": "2018:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "2002:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_memory_ptr",
													"typeString": "contract IIFtso[]"
												},
												"typeName": {
													"baseType": {
														"id": 83,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 82,
															"name": "IIFtso",
															"nameLocations": [
																"2002:6:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 170,
															"src": "2002:6:0"
														},
														"referencedDeclaration": 170,
														"src": "2002:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIFtso_$170",
															"typeString": "contract IIFtso"
														}
													},
													"id": 84,
													"nodeType": "ArrayTypeName",
													"src": "2002:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_storage_ptr",
														"typeString": "contract IIFtso[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:29:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2039:0:0"
									},
									"scope": 170,
									"src": "1979:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e536f396",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setVotePowerBlock",
									"nameLocation": "2219:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2236:22:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:0:0"
									},
									"scope": 170,
									"src": "2210:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f670ebe3",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeCurrentEpochStateForReveal",
									"nameLocation": "2283:36:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_circulatingSupplyNat",
												"nameLocation": "2328:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2320:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_fallbackMode",
												"nameLocation": "2356:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "2351:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 96,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:51:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2379:0:0"
									},
									"scope": 170,
									"src": "2274:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "2388:55:0",
										"text": " @notice Returns ftso manager address"
									},
									"functionSelector": "11a7aaaa",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ftsoManager",
									"nameLocation": "2457:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:9:0"
									},
									"scope": 170,
									"src": "2448:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2509:103:0",
										"text": " @notice Returns the FTSO asset\n @dev Asset is null in case of multi-asset FTSO"
									},
									"functionSelector": "5c222bad",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAsset",
									"nameLocation": "2626:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:2:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "2660:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIVPToken_$1265",
													"typeString": "contract IIVPToken"
												},
												"typeName": {
													"id": 110,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 109,
														"name": "IIVPToken",
														"nameLocations": [
															"2660:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1265,
														"src": "2660:9:0"
													},
													"referencedDeclaration": 1265,
													"src": "2660:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIVPToken_$1265",
														"typeString": "contract IIVPToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:11:0"
									},
									"scope": 170,
									"src": "2617:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "2677:118:0",
										"text": " @notice Returns the Asset FTSOs\n @dev AssetFtsos is not null only in case of multi-asset FTSO"
									},
									"functionSelector": "18931c35",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetFtsos",
									"nameLocation": "2809:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2822:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2848:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_memory_ptr",
													"typeString": "contract IIFtso[]"
												},
												"typeName": {
													"baseType": {
														"id": 117,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 116,
															"name": "IIFtso",
															"nameLocations": [
																"2848:6:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 170,
															"src": "2848:6:0"
														},
														"referencedDeclaration": 170,
														"src": "2848:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIFtso_$170",
															"typeString": "contract IIFtso"
														}
													},
													"id": 118,
													"nodeType": "ArrayTypeName",
													"src": "2848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_storage_ptr",
														"typeString": "contract IIFtso[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2847:17:0"
									},
									"scope": 170,
									"src": "2800:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "2871:1071:0",
										"text": " @notice Returns current configuration of epoch state\n @return _maxVotePowerNatThresholdFraction        High threshold for native token vote power per voter\n @return _maxVotePowerAssetThresholdFraction      High threshold for asset vote power per voter\n @return _lowAssetUSDThreshold            Threshold for low asset vote power\n @return _highAssetUSDThreshold           Threshold for high asset vote power\n @return _highAssetTurnoutThresholdBIPS   Threshold for high asset turnout\n @return _lowNatTurnoutThresholdBIPS      Threshold for low nat turnout\n @return _elasticBandRewardBIPS           Hybrid reward band, where _elasticBandRewardBIPS goes to the \nelastic band (prices within _elasticBandWidthPPM of the median) \nand 10000 - elasticBandRewardBIPS to the IQR \n @return _elasticBandWidthPPM             Prices within _elasticBandWidthPPM of median are rewarded\n @return _trustedAddresses                Trusted addresses - use their prices if low nat turnout is not achieved"
									},
									"functionSelector": "e3749e0c",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "epochsConfiguration",
									"nameLocation": "3956:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3975:2:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "_maxVotePowerNatThresholdFraction",
												"nameLocation": "4031:33:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4023:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "_maxVotePowerAssetThresholdFraction",
												"nameLocation": "4086:35:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4078:43:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_lowAssetUSDThreshold",
												"nameLocation": "4143:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4135:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_highAssetUSDThreshold",
												"nameLocation": "4186:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4178:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "_highAssetTurnoutThresholdBIPS",
												"nameLocation": "4230:30:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4222:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_lowNatTurnoutThresholdBIPS",
												"nameLocation": "4282:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4274:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "_elasticBandRewardBIPS",
												"nameLocation": "4331:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4323:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "_elasticBandWidthPPM",
												"nameLocation": "4375:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4367:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_trustedAddresses",
												"nameLocation": "4426:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4409:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 140,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4409:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 141,
													"nodeType": "ArrayTypeName",
													"src": "4409:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:444:0"
									},
									"scope": 170,
									"src": "3947:507:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4460:619:0",
										"text": " @notice Returns parameters necessary for approximately replicating vote weighting.\n @return _assets                  the list of Assets that are accounted in vote\n @return _assetMultipliers        weight of each asset in (multiasset) ftso, mutiplied by TERA\n @return _totalVotePowerNat       total native token vote power at block\n @return _totalVotePowerAsset     total combined asset vote power at block\n @return _assetWeightRatio        ratio of combined asset vp vs. native token vp (in BIPS)\n @return _votePowerBlock          vote powewr block for given epoch"
									},
									"functionSelector": "8357d08c",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVoteWeightingParameters",
									"nameLocation": "5093:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5119:2:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_assets",
												"nameLocation": "5186:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5167:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIVPToken_$1265_$dyn_memory_ptr",
													"typeString": "contract IIVPToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 148,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 147,
															"name": "IIVPToken",
															"nameLocations": [
																"5167:9:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1265,
															"src": "5167:9:0"
														},
														"referencedDeclaration": 1265,
														"src": "5167:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIVPToken_$1265",
															"typeString": "contract IIVPToken"
														}
													},
													"id": 149,
													"nodeType": "ArrayTypeName",
													"src": "5167:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIVPToken_$1265_$dyn_storage_ptr",
														"typeString": "contract IIVPToken[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "_assetMultipliers",
												"nameLocation": "5224:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5207:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 151,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 152,
													"nodeType": "ArrayTypeName",
													"src": "5207:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_totalVotePowerNat",
												"nameLocation": "5263:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5255:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_totalVotePowerAsset",
												"nameLocation": "5303:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5295:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "_assetWeightRatio",
												"nameLocation": "5345:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5337:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_votePowerBlock",
												"nameLocation": "5384:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "5376:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5153:256:0"
									},
									"scope": 170,
									"src": "5084:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9edbf007",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wNat",
									"nameLocation": "5425:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5429:2:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "5455:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIVPToken_$1265",
													"typeString": "contract IIVPToken"
												},
												"typeName": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "IIVPToken",
														"nameLocations": [
															"5455:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1265,
														"src": "5455:9:0"
													},
													"referencedDeclaration": 1265,
													"src": "5455:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIVPToken_$1265",
														"typeString": "contract IIVPToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5454:11:0"
									},
									"scope": 170,
									"src": "5416:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 171,
							"src": "227:5241:0",
							"usedErrors": []
						}
					],
					"src": "32:5437:0"
				},
				"id": 0
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol",
					"exportedSymbols": {
						"IFtsoGenesis": [
							195
						]
					},
					"id": 196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 172,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:29:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFtsoGenesis",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 195,
							"linearizedBaseContracts": [
								195
							],
							"name": "IFtsoGenesis",
							"nameLocation": "75:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "95:422:1",
										"text": " @notice Reveals submitted price during epoch reveal period - only price submitter\n @param _voter                Voter address\n @param _epochId              Id of the epoch in which the price hash was submitted\n @param _price                Submitted price in USD\n @notice The hash of _price and _random must be equal to the submitted hash\n @notice Emits PriceRevealed event"
									},
									"functionSelector": "c1f6c36e",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revealPriceSubmitter",
									"nameLocation": "531:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "569:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "561:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "593:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "585:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "619:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "611:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_wNatVP",
												"nameLocation": "643:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "635:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:105:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:1"
									},
									"scope": 195,
									"src": "522:144:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "672:268:1",
										"text": " @notice Get (and cache) wNat vote power for specified voter and given epoch id\n @param _voter                Voter address\n @param _epochId              Id of the epoch in which the price hash was submitted\n @return wNat vote power"
									},
									"functionSelector": "f72cab28",
									"id": 194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "wNatVotePowerCached",
									"nameLocation": "954:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "982:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "974:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "998:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "990:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:34:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "1026:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:9:1"
									},
									"scope": 195,
									"src": "945:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 196,
							"src": "65:972:1",
							"usedErrors": []
						}
					],
					"src": "33:1005:1"
				},
				"id": 1
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol",
					"exportedSymbols": {
						"IFtsoGenesis": [
							195
						],
						"IFtsoRegistryGenesis": [
							209
						]
					},
					"id": 210,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 197,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:29:2"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoGenesis.sol",
							"file": "./IFtsoGenesis.sol",
							"id": 198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 210,
							"sourceUnit": 196,
							"src": "64:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFtsoRegistryGenesis",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IFtsoRegistryGenesis",
							"nameLocation": "105:20:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "9cb47538",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFtsos",
									"nameLocation": "142:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "_indices",
												"nameLocation": "168:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "151:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 199,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"nodeType": "ArrayTypeName",
													"src": "151:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:27:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_ftsos",
												"nameLocation": "222:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "200:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IFtsoGenesis_$195_$dyn_memory_ptr",
													"typeString": "contract IFtsoGenesis[]"
												},
												"typeName": {
													"baseType": {
														"id": 204,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 203,
															"name": "IFtsoGenesis",
															"nameLocations": [
																"200:12:2"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 195,
															"src": "200:12:2"
														},
														"referencedDeclaration": 195,
														"src": "200:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFtsoGenesis_$195",
															"typeString": "contract IFtsoGenesis"
														}
													},
													"id": 205,
													"nodeType": "ArrayTypeName",
													"src": "200:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IFtsoGenesis_$195_$dyn_storage_ptr",
														"typeString": "contract IFtsoGenesis[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "199:30:2"
									},
									"scope": 209,
									"src": "133:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 210,
							"src": "95:137:2",
							"usedErrors": []
						}
					],
					"src": "33:200:2"
				},
				"id": 2
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtso.sol",
					"exportedSymbols": {
						"IFtso": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 211,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFtso",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IFtso",
							"nameLocation": "73:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IFtso.PriceFinalizationType",
									"id": 218,
									"members": [
										{
											"id": 212,
											"name": "NOT_FINALIZED",
											"nameLocation": "147:13:3",
											"nodeType": "EnumValue",
											"src": "147:13:3"
										},
										{
											"id": 213,
											"name": "WEIGHTED_MEDIAN",
											"nameLocation": "219:15:3",
											"nodeType": "EnumValue",
											"src": "219:15:3"
										},
										{
											"id": 214,
											"name": "TRUSTED_ADDRESSES",
											"nameLocation": "319:17:3",
											"nodeType": "EnumValue",
											"src": "319:17:3"
										},
										{
											"id": 215,
											"name": "PREVIOUS_PRICE_COPIED",
											"nameLocation": "438:21:3",
											"nodeType": "EnumValue",
											"src": "438:21:3"
										},
										{
											"id": 216,
											"name": "TRUSTED_ADDRESSES_EXCEPTION",
											"nameLocation": "562:27:3",
											"nodeType": "EnumValue",
											"src": "562:27:3"
										},
										{
											"id": 217,
											"name": "PREVIOUS_PRICE_COPIED_EXCEPTION",
											"nameLocation": "664:31:3",
											"nodeType": "EnumValue",
											"src": "664:31:3"
										}
									],
									"name": "PriceFinalizationType",
									"nameLocation": "90:21:3",
									"nodeType": "EnumDefinition",
									"src": "85:616:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c1b1d37612887c207efe8cb44f4069b7f10c45edaf6e8405648a94e02b6e9ec7",
									"id": 232,
									"name": "PriceRevealed",
									"nameLocation": "713:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "736:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "epochId",
												"nameLocation": "775:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "759:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "792:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "784:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "807:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "799:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"indexed": false,
												"mutability": "mutable",
												"name": "votePowerNat",
												"nameLocation": "834:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "826:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": false,
												"mutability": "mutable",
												"name": "votePowerAsset",
												"nameLocation": "856:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "848:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "726:150:3"
									},
									"src": "707:170:3"
								},
								{
									"anonymous": false,
									"eventSelector": "1856740832ecbdceafeb109e01b188b9c0499df6a33dc8129aa0dd8f9d9a9db0",
									"id": 253,
									"name": "PriceFinalized",
									"nameLocation": "889:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "epochId",
												"nameLocation": "929:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "913:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "946:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "938:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardedFtso",
												"nameLocation": "958:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "953:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "953:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"indexed": false,
												"mutability": "mutable",
												"name": "lowIQRRewardPrice",
												"nameLocation": "988:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "980:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"indexed": false,
												"mutability": "mutable",
												"name": "highIQRRewardPrice",
												"nameLocation": "1015:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1007:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"indexed": false,
												"mutability": "mutable",
												"name": "lowElasticBandRewardPrice",
												"nameLocation": "1051:25:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1043:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"indexed": false,
												"mutability": "mutable",
												"name": "highElasticBandRewardPrice",
												"nameLocation": "1086:26:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1078:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"indexed": false,
												"mutability": "mutable",
												"name": "finalizationType",
												"nameLocation": "1145:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1123:38:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PriceFinalizationType_$218",
													"typeString": "enum IFtso.PriceFinalizationType"
												},
												"typeName": {
													"id": 248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 247,
														"name": "PriceFinalizationType",
														"nameLocations": [
															"1123:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "1123:21:3"
													},
													"referencedDeclaration": 218,
													"src": "1123:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PriceFinalizationType_$218",
														"typeString": "enum IFtso.PriceFinalizationType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1171:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1163:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:283:3"
									},
									"src": "883:304:3"
								},
								{
									"anonymous": false,
									"eventSelector": "c0eaa359541c7c642d9947c9496507c134f3e4f8e1fd433313eb27dc48cb1fb7",
									"id": 261,
									"name": "PriceEpochInitializedOnFtso",
									"nameLocation": "1199:27:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"indexed": true,
												"mutability": "mutable",
												"name": "epochId",
												"nameLocation": "1252:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1236:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1269:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1261:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1286:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "1278:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:75:3"
									},
									"src": "1193:109:3"
								},
								{
									"anonymous": false,
									"eventSelector": "bece8aa526cdc5e528cdaa56c1d03edc19da51e41845aa146f64a7071f74c65a",
									"id": 271,
									"name": "LowTurnout",
									"nameLocation": "1314:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"indexed": true,
												"mutability": "mutable",
												"name": "epochId",
												"nameLocation": "1350:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1334:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"indexed": false,
												"mutability": "mutable",
												"name": "natTurnout",
												"nameLocation": "1375:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1367:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "lowNatTurnoutThresholdBIPS",
												"nameLocation": "1403:26:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1395:34:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "1439:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:138:3"
									},
									"src": "1308:155:3"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "1469:52:3",
										"text": " @notice Returns if FTSO is active"
									},
									"functionSelector": "02fb0c5e",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "active",
									"nameLocation": "1535:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1541:2:3"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1567:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1567:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:6:3"
									},
									"scope": 406,
									"src": "1526:47:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1579:50:3",
										"text": " @notice Returns the FTSO symbol"
									},
									"functionSelector": "95d89b41",
									"id": 283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1643:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:2:3"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1675:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 280,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1675:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:15:3"
									},
									"scope": 406,
									"src": "1634:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "1696:51:3",
										"text": " @notice Returns current epoch id"
									},
									"functionSelector": "a29a839f",
									"id": 289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentEpochId",
									"nameLocation": "1761:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1778:2:3"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1804:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1804:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:9:3"
									},
									"scope": 406,
									"src": "1752:61:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "1819:188:3",
										"text": " @notice Returns id of the epoch which was opened for price submission at the specified timestamp\n @param _timestamp            Timestamp as seconds from unix epoch"
									},
									"functionSelector": "5303548b",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEpochId",
									"nameLocation": "2021:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "2040:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2032:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:20:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "2075:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2075:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:9:3"
									},
									"scope": 406,
									"src": "2012:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2094:123:3",
										"text": " @notice Returns random number of the specified epoch\n @param _epochId              Id of the epoch"
									},
									"functionSelector": "cd4b6914",
									"id": 305,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRandom",
									"nameLocation": "2231:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "2249:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2241:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2240:18:3"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2282:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:9:3"
									},
									"scope": 406,
									"src": "2222:69:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "2297:193:3",
										"text": " @notice Returns asset price consented in specific epoch\n @param _epochId              Id of the epoch\n @return Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"
									},
									"functionSelector": "7d1d6f12",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEpochPrice",
									"nameLocation": "2504:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "2526:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2518:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:18:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "2559:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:9:3"
									},
									"scope": 406,
									"src": "2495:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "2574:591:3",
										"text": " @notice Returns current epoch data\n @return _epochId                 Current epoch id\n @return _epochSubmitEndTime      End time of the current epoch price submission as seconds from unix epoch\n @return _epochRevealEndTime      End time of the current epoch price reveal as seconds from unix epoch\n @return _votePowerBlock          Vote power block for the current epoch\n @return _fallbackMode            Current epoch in fallback mode - only votes from trusted addresses will be used\n @dev half-closed intervals - end time not included"
									},
									"functionSelector": "e3b3a3b3",
									"id": 327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceEpochData",
									"nameLocation": "3179:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3196:2:3"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "3239:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3231:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3231:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "_epochSubmitEndTime",
												"nameLocation": "3265:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3257:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3257:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "_epochRevealEndTime",
												"nameLocation": "3302:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3294:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "_votePowerBlock",
												"nameLocation": "3339:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3331:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3331:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "_fallbackMode",
												"nameLocation": "3369:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3364:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3364:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:167:3"
									},
									"scope": 406,
									"src": "3170:219:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3395:263:3",
										"text": " @notice Returns current epoch data\n @return _firstEpochStartTs           First epoch start timestamp\n @return _submitPeriodSeconds         Submit period in seconds\n @return _revealPeriodSeconds         Reveal period in seconds"
									},
									"functionSelector": "144e1591",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceEpochConfiguration",
									"nameLocation": "3672:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3698:2:3"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_firstEpochStartTs",
												"nameLocation": "3741:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3733:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "_submitPeriodSeconds",
												"nameLocation": "3777:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3769:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3769:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_revealPeriodSeconds",
												"nameLocation": "3815:20:3",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "3807:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:118:3"
									},
									"scope": 406,
									"src": "3663:179:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "3852:259:3",
										"text": " @notice Returns asset price submitted by voter in specific epoch\n @param _epochId              Id of the epoch\n @param _voter                Address of the voter\n @return Price in USD multiplied by ASSET_PRICE_USD_DECIMALS"
									},
									"functionSelector": "c5d8b9e7",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEpochPriceForVoter",
									"nameLocation": "4125:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "_epochId",
												"nameLocation": "4155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "_voter",
												"nameLocation": "4173:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4165:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:34:3"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "4204:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4203:9:3"
									},
									"scope": 406,
									"src": "4116:97:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "4219:224:3",
										"text": " @notice Returns current asset price\n @return _price               Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n @return _timestamp           Time when price was updated for the last time"
									},
									"functionSelector": "eb91d37e",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "4457:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4472:2:3"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "4522:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "4514:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4497:36:3"
									},
									"scope": 406,
									"src": "4448:86:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "4540:333:3",
										"text": " @notice Returns current asset price and number of decimals\n @return _price                   Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n @return _timestamp               Time when price was updated for the last time\n @return _assetPriceUsdDecimals   Number of decimals used for USD price"
									},
									"functionSelector": "65f5cd86",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPriceWithDecimals",
									"nameLocation": "4887:27:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4914:2:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "4957:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4949:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "4981:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "4973:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "_assetPriceUsdDecimals",
												"nameLocation": "5009:22:3",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "5001:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5001:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4939:98:3"
									},
									"scope": 406,
									"src": "4878:160:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "5048:258:3",
										"text": " @notice Returns current asset price calculated from trusted providers\n @return _price               Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n @return _timestamp           Time when price was updated for the last time"
									},
									"functionSelector": "af52df08",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPriceFromTrustedProviders",
									"nameLocation": "5320:35:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5355:2:3"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "5389:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "5381:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "5405:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "5397:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5397:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5380:36:3"
									},
									"scope": 406,
									"src": "5311:106:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "5423:367:3",
										"text": " @notice Returns current asset price calculated from trusted providers and number of decimals\n @return _price                   Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n @return _timestamp               Time when price was updated for the last time\n @return _assetPriceUsdDecimals   Number of decimals used for USD price"
									},
									"functionSelector": "3cacb3ae",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPriceWithDecimalsFromTrustedProviders",
									"nameLocation": "5804:47:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5851:2:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "5894:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5886:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "5918:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5910:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5910:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "_assetPriceUsdDecimals",
												"nameLocation": "5946:22:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5938:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5938:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5876:98:3"
									},
									"scope": 406,
									"src": "5795:180:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "5981:588:3",
										"text": " @notice Returns current asset price details\n @return _price                                   Price in USD multiplied by ASSET_PRICE_USD_DECIMALS\n @return _priceTimestamp                          Time when price was updated for the last time\n @return _priceFinalizationType                   Finalization type when price was updated for the last time\n @return _lastPriceEpochFinalizationTimestamp     Time when last price epoch was finalized\n @return _lastPriceEpochFinalizationType          Finalization type of last finalized price epoch"
									},
									"functionSelector": "040d73b8",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPriceDetails",
									"nameLocation": "6583:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6605:2:3"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "6648:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "6640:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "_priceTimestamp",
												"nameLocation": "6672:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "6664:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_priceFinalizationType",
												"nameLocation": "6719:22:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "6697:44:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PriceFinalizationType_$218",
													"typeString": "enum IFtso.PriceFinalizationType"
												},
												"typeName": {
													"id": 391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 390,
														"name": "PriceFinalizationType",
														"nameLocations": [
															"6697:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "6697:21:3"
													},
													"referencedDeclaration": 218,
													"src": "6697:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PriceFinalizationType_$218",
														"typeString": "enum IFtso.PriceFinalizationType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "_lastPriceEpochFinalizationTimestamp",
												"nameLocation": "6759:36:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "6751:44:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "_lastPriceEpochFinalizationType",
												"nameLocation": "6827:31:3",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "6805:53:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_PriceFinalizationType_$218",
													"typeString": "enum IFtso.PriceFinalizationType"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "PriceFinalizationType",
														"nameLocations": [
															"6805:21:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 218,
														"src": "6805:21:3"
													},
													"referencedDeclaration": 218,
													"src": "6805:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_PriceFinalizationType_$218",
														"typeString": "enum IFtso.PriceFinalizationType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6630:234:3"
									},
									"scope": 406,
									"src": "6574:291:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "6871:56:3",
										"text": " @notice Returns current random number"
									},
									"functionSelector": "d89601fd",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentRandom",
									"nameLocation": "6941:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6957:2:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "6983:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6983:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6982:9:3"
									},
									"scope": 406,
									"src": "6932:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 407,
							"src": "63:6931:3",
							"usedErrors": []
						}
					],
					"src": "32:6963:3"
				},
				"id": 3
			},
			"lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						],
						"IFtso": [
							406
						],
						"IFtsoGenesis": [
							195
						],
						"IFtsoRegistry": [
							581
						],
						"IFtsoRegistryGenesis": [
							209
						],
						"IGovernanceVotePower": [
							631
						],
						"IICleanable": [
							905
						],
						"IIFtso": [
							170
						],
						"IIGovernanceVotePower": [
							978
						],
						"IIVPContract": [
							1210
						],
						"IIVPToken": [
							1265
						],
						"IPChainStakeMirror": [
							732
						],
						"IPChainStakeMirrorVerifier": [
							752
						],
						"IPChainVotePower": [
							884
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						]
					},
					"id": 582,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:4"
						},
						{
							"id": 409,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:4"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/ftso/interface/IIFtso.sol",
							"file": "../ftso/interface/IIFtso.sol",
							"id": 410,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 171,
							"src": "83:38:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/genesis/interface/IFtsoRegistryGenesis.sol",
							"file": "../genesis/interface/IFtsoRegistryGenesis.sol",
							"id": 411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 210,
							"src": "122:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 412,
										"name": "IFtsoRegistryGenesis",
										"nameLocations": [
											"206:20:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 209,
										"src": "206:20:4"
									},
									"id": 413,
									"nodeType": "InheritanceSpecifier",
									"src": "206:20:4"
								}
							],
							"canonicalName": "IFtsoRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 581,
							"linearizedBaseContracts": [
								581,
								209
							],
							"name": "IFtsoRegistry",
							"nameLocation": "189:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IFtsoRegistry.PriceInfo",
									"id": 422,
									"members": [
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "ftsoIndex",
											"nameLocation": "269:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 422,
											"src": "261:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 414,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 417,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "296:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 422,
											"src": "288:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 416,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "288:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 419,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "319:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 422,
											"src": "311:16:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "311:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 421,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "345:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 422,
											"src": "337:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "337:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PriceInfo",
									"nameLocation": "241:9:4",
									"nodeType": "StructDefinition",
									"scope": 581,
									"src": "234:127:4",
									"visibility": "public"
								},
								{
									"functionSelector": "d75f6d81",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFtso",
									"nameLocation": "376:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_ftsoIndex",
												"nameLocation": "392:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "384:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "384:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:20:4"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "_activeFtsoAddress",
												"nameLocation": "433:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "426:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIFtso_$170",
													"typeString": "contract IIFtso"
												},
												"typeName": {
													"id": 427,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 426,
														"name": "IIFtso",
														"nameLocations": [
															"426:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 170,
														"src": "426:6:4"
													},
													"referencedDeclaration": 170,
													"src": "426:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIFtso_$170",
														"typeString": "contract IIFtso"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:27:4"
									},
									"scope": 581,
									"src": "367:86:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "97da6af4",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFtsoBySymbol",
									"nameLocation": "467:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "497:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "483:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "483:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:23:4"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_activeFtsoAddress",
												"nameLocation": "535:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "528:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIFtso_$170",
													"typeString": "contract IIFtso"
												},
												"typeName": {
													"id": 435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 434,
														"name": "IIFtso",
														"nameLocations": [
															"528:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 170,
														"src": "528:6:4"
													},
													"referencedDeclaration": 170,
													"src": "528:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIFtso_$170",
														"typeString": "contract IIFtso"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:27:4"
									},
									"scope": 581,
									"src": "458:97:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "798aac5b",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedIndices",
									"nameLocation": "569:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:2:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_supportedIndices",
												"nameLocation": "630:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "613:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "613:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 441,
													"nodeType": "ArrayTypeName",
													"src": "613:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:36:4"
									},
									"scope": 581,
									"src": "560:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ce1c0e4d",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedSymbols",
									"nameLocation": "663:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "682:2:4"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "_supportedSymbols",
												"nameLocation": "723:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "707:33:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 446,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "707:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 447,
													"nodeType": "ArrayTypeName",
													"src": "707:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:35:4"
									},
									"scope": 581,
									"src": "654:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a40060ba",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedFtsos",
									"nameLocation": "756:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "_ftsos",
												"nameLocation": "814:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "798:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_memory_ptr",
													"typeString": "contract IIFtso[]"
												},
												"typeName": {
													"baseType": {
														"id": 453,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 452,
															"name": "IIFtso",
															"nameLocations": [
																"798:6:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 170,
															"src": "798:6:4"
														},
														"referencedDeclaration": 170,
														"src": "798:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIFtso_$170",
															"typeString": "contract IIFtso"
														}
													},
													"id": 454,
													"nodeType": "ArrayTypeName",
													"src": "798:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_storage_ptr",
														"typeString": "contract IIFtso[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:24:4"
									},
									"scope": 581,
									"src": "747:75:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e848da30",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFtsoIndex",
									"nameLocation": "836:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "863:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "849:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 458,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "849:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:23:4"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_assetIndex",
												"nameLocation": "903:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "895:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:21:4"
									},
									"scope": 581,
									"src": "827:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "136d3f64",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFtsoSymbol",
									"nameLocation": "930:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "_ftsoIndex",
												"nameLocation": "952:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "944:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:20:4"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1001:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "987:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "987:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:23:4"
									},
									"scope": 581,
									"src": "921:89:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c55d0f56",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "1024:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_ftsoIndex",
												"nameLocation": "1048:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1040:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:20:4"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1090:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1082:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "1106:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1098:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1098:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:36:4"
									},
									"scope": 581,
									"src": "1015:103:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42a0f243",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPrice",
									"nameLocation": "1132:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1162:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1148:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:23:4"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1201:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1193:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "1217:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1209:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1192:36:4"
									},
									"scope": 581,
									"src": "1123:106:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "257cbd3a",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPriceWithDecimals",
									"nameLocation": "1243:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_assetIndex",
												"nameLocation": "1279:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1271:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:21:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1330:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1322:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "1346:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1338:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1338:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "_assetPriceUsdDecimals",
												"nameLocation": "1366:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1358:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1321:68:4"
									},
									"scope": 581,
									"src": "1234:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a69afdc6",
									"id": 511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPriceWithDecimals",
									"nameLocation": "1404:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1446:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1432:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1432:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:23:4"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_price",
												"nameLocation": "1493:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1485:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "1509:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1501:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "_assetPriceUsdDecimals",
												"nameLocation": "1529:22:4",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1521:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:68:4"
									},
									"scope": 581,
									"src": "1395:158:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "58f9296f",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllCurrentPrices",
									"nameLocation": "1568:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1587:2:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1613:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IFtsoRegistry.PriceInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 514,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 513,
															"name": "PriceInfo",
															"nameLocations": [
																"1613:9:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 422,
															"src": "1613:9:4"
														},
														"referencedDeclaration": 422,
														"src": "1613:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceInfo_$422_storage_ptr",
															"typeString": "struct IFtsoRegistry.PriceInfo"
														}
													},
													"id": 515,
													"nodeType": "ArrayTypeName",
													"src": "1613:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_storage_$dyn_storage_ptr",
														"typeString": "struct IFtsoRegistry.PriceInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:20:4"
									},
									"scope": 581,
									"src": "1559:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6ba31fa1",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPricesByIndices",
									"nameLocation": "1647:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "_indices",
												"nameLocation": "1690:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1673:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 519,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1673:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 520,
													"nodeType": "ArrayTypeName",
													"src": "1673:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:27:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1723:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IFtsoRegistry.PriceInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 524,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 523,
															"name": "PriceInfo",
															"nameLocations": [
																"1723:9:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 422,
															"src": "1723:9:4"
														},
														"referencedDeclaration": 422,
														"src": "1723:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceInfo_$422_storage_ptr",
															"typeString": "struct IFtsoRegistry.PriceInfo"
														}
													},
													"id": 525,
													"nodeType": "ArrayTypeName",
													"src": "1723:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_storage_$dyn_storage_ptr",
														"typeString": "struct IFtsoRegistry.PriceInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:20:4"
									},
									"scope": 581,
									"src": "1638:105:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79d5ea4b",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentPricesBySymbols",
									"nameLocation": "1757:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_symbols",
												"nameLocation": "1799:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1783:24:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1783:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 530,
													"nodeType": "ArrayTypeName",
													"src": "1783:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1782:26:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1832:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IFtsoRegistry.PriceInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 534,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 533,
															"name": "PriceInfo",
															"nameLocations": [
																"1832:9:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 422,
															"src": "1832:9:4"
														},
														"referencedDeclaration": 422,
														"src": "1832:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PriceInfo_$422_storage_ptr",
															"typeString": "struct IFtsoRegistry.PriceInfo"
														}
													},
													"id": 535,
													"nodeType": "ArrayTypeName",
													"src": "1832:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_storage_$dyn_storage_ptr",
														"typeString": "struct IFtsoRegistry.PriceInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1831:20:4"
									},
									"scope": 581,
									"src": "1748:104:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06a2ba29",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedIndicesAndFtsos",
									"nameLocation": "1867:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "_supportedIndices",
												"nameLocation": "1945:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1928:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 540,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1928:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 541,
													"nodeType": "ArrayTypeName",
													"src": "1928:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "_ftsos",
												"nameLocation": "1980:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1964:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_memory_ptr",
													"typeString": "contract IIFtso[]"
												},
												"typeName": {
													"baseType": {
														"id": 544,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 543,
															"name": "IIFtso",
															"nameLocations": [
																"1964:6:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 170,
															"src": "1964:6:4"
														},
														"referencedDeclaration": 170,
														"src": "1964:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIFtso_$170",
															"typeString": "contract IIFtso"
														}
													},
													"id": 545,
													"nodeType": "ArrayTypeName",
													"src": "1964:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_storage_ptr",
														"typeString": "contract IIFtso[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:60:4"
									},
									"scope": 581,
									"src": "1858:130:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0cf48497",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedSymbolsAndFtsos",
									"nameLocation": "2003:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:2:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_supportedSymbols",
												"nameLocation": "2080:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2064:33:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 550,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2064:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 551,
													"nodeType": "ArrayTypeName",
													"src": "2064:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "_ftsos",
												"nameLocation": "2115:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2099:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_memory_ptr",
													"typeString": "contract IIFtso[]"
												},
												"typeName": {
													"baseType": {
														"id": 554,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 553,
															"name": "IIFtso",
															"nameLocations": [
																"2099:6:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 170,
															"src": "2099:6:4"
														},
														"referencedDeclaration": 170,
														"src": "2099:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIFtso_$170",
															"typeString": "contract IIFtso"
														}
													},
													"id": 555,
													"nodeType": "ArrayTypeName",
													"src": "2099:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_storage_ptr",
														"typeString": "contract IIFtso[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:59:4"
									},
									"scope": 581,
									"src": "1994:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e68f283b",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedIndicesAndSymbols",
									"nameLocation": "2138:29:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:2:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "_supportedIndices",
												"nameLocation": "2218:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2201:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2201:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "2201:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "_supportedSymbols",
												"nameLocation": "2253:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2237:33:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 563,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2237:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 564,
													"nodeType": "ArrayTypeName",
													"src": "2237:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2200:71:4"
									},
									"scope": 581,
									"src": "2129:143:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7687542c",
									"id": 580,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getSupportedIndicesSymbolsAndFtsos",
									"nameLocation": "2287:34:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:4"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "_supportedIndices",
												"nameLocation": "2372:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2355:34:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 569,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2355:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 570,
													"nodeType": "ArrayTypeName",
													"src": "2355:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "_supportedSymbols",
												"nameLocation": "2407:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2391:33:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 572,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "2391:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 573,
													"nodeType": "ArrayTypeName",
													"src": "2391:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "_ftsos",
												"nameLocation": "2442:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2426:22:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_memory_ptr",
													"typeString": "contract IIFtso[]"
												},
												"typeName": {
													"baseType": {
														"id": 576,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 575,
															"name": "IIFtso",
															"nameLocations": [
																"2426:6:4"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 170,
															"src": "2426:6:4"
														},
														"referencedDeclaration": 170,
														"src": "2426:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IIFtso_$170",
															"typeString": "contract IIFtso"
														}
													},
													"id": 577,
													"nodeType": "ArrayTypeName",
													"src": "2426:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IIFtso_$170_$dyn_storage_ptr",
														"typeString": "contract IIFtso[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2354:95:4"
									},
									"scope": 581,
									"src": "2278:172:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 582,
							"src": "179:2273:4",
							"usedErrors": []
						}
					],
					"src": "32:2421:4"
				},
				"id": 4
			},
			"lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol",
					"exportedSymbols": {
						"IGovernanceVotePower": [
							631
						]
					},
					"id": 632,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGovernanceVotePower",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 584,
								"nodeType": "StructuredDocumentation",
								"src": "63:74:5",
								"text": " Interface for contracts delegating their governance vote power."
							},
							"fullyImplemented": false,
							"id": 631,
							"linearizedBaseContracts": [
								631
							],
							"name": "IGovernanceVotePower",
							"nameLocation": "148:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "175:136:5",
										"text": " Delegates all governance vote power of `msg.sender` to address `_to`.\n @param _to The address of the recipient."
									},
									"functionSelector": "5c19a95c",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "325:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "342:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "334:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:13:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:0:5"
									},
									"scope": 631,
									"src": "316:40:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "362:73:5",
										"text": " Undelegates all governance vote power of `msg.sender`."
									},
									"functionSelector": "92ab89bb",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegate",
									"nameLocation": "449:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:5"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "470:0:5"
									},
									"scope": 631,
									"src": "440:31:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "477:323:5",
										"text": " Gets the governance vote power of an address at a given block number, including\n all delegations made to it.\n @param _who The address being queried.\n @param _blockNumber The block number at which to fetch the vote power.\n @return Governance vote power of `_who` at `_blockNumber`."
									},
									"functionSelector": "92bfe6d8",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAt",
									"nameLocation": "814:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "836:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "828:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "850:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "842:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:36:5"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "886:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:9:5"
									},
									"scope": 631,
									"src": "805:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "901:247:5",
										"text": " Gets the governance vote power of an address at the latest block, including\n all delegations made to it.\n @param _who The address being queried.\n @return Governance vote power of `account` at the lastest block."
									},
									"functionSelector": "9ab24eb0",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVotes",
									"nameLocation": "1162:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "1179:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1171:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1171:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1170:14:5"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1208:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:9:5"
									},
									"scope": 631,
									"src": "1153:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "1223:338:5",
										"text": " Gets the address an account is delegating its governance vote power to, at a given block number.\n @param _who The address being queried.\n @param _blockNumber The block number at which to fetch the address.\n @return Address where `_who` was delegating its governance vote power at block `_blockNumber`."
									},
									"functionSelector": "3c028e9d",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegateOfAt",
									"nameLocation": "1575:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "1599:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1591:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "1613:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1605:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:36:5"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "1650:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1650:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:9:5"
									},
									"scope": 631,
									"src": "1566:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "1665:251:5",
										"text": " Gets the address an account is delegating its governance vote power to, at the latest block number.\n @param _who The address being queried.\n @return Address where `_who` is currently delegating its governance vote power."
									},
									"functionSelector": "b3e871ee",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getDelegateOfAtNow",
									"nameLocation": "1930:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "1957:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1949:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1949:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:14:5"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1986:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:9:5"
									},
									"scope": 631,
									"src": "1921:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 632,
							"src": "138:1859:5",
							"usedErrors": []
						}
					],
					"src": "32:1966:5"
				},
				"id": 5
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol",
					"exportedSymbols": {
						"IPChainStakeMirror": [
							732
						],
						"IPChainStakeMirrorVerifier": [
							752
						],
						"IPChainVotePower": [
							884
						]
					},
					"id": 733,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 633,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:6"
						},
						{
							"id": 634,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:6"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol",
							"file": "./IPChainVotePower.sol",
							"id": 635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 885,
							"src": "83:32:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol",
							"file": "./IPChainStakeMirrorVerifier.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 733,
							"sourceUnit": 753,
							"src": "116:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 638,
										"name": "IPChainVotePower",
										"nameLocations": [
											"252:16:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "252:16:6"
									},
									"id": 639,
									"nodeType": "InheritanceSpecifier",
									"src": "252:16:6"
								}
							],
							"canonicalName": "IPChainStakeMirror",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 637,
								"nodeType": "StructuredDocumentation",
								"src": "161:58:6",
								"text": " Interface for the `PChainStakeMirror` contract."
							},
							"fullyImplemented": false,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								884
							],
							"name": "IPChainStakeMirror",
							"nameLocation": "230:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "276:136:6",
										"text": " Event emitted when max updates per block is set.\n @param maxUpdatesPerBlock new number of max updated per block"
									},
									"eventSelector": "45e418145c8aa16b8f8c5a80e9589a7f2e054bac2d90cd0f05e19f40cdd37a75",
									"id": 644,
									"name": "MaxUpdatesPerBlockSet",
									"nameLocation": "423:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxUpdatesPerBlock",
												"nameLocation": "453:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "445:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:28:6"
									},
									"src": "417:56:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "479:375:6",
										"text": " Event emitted when the stake is confirmed.\n @param owner The address who opened the stake.\n @param nodeId Node id to which the stake was added.\n @param txHash Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\n @param amountWei Stake amount (in wei).\n @param pChainTxId P-chain transaction id."
									},
									"eventSelector": "4963ffc566fe8fe6af0920b81985e6514afa925fe3408430f490ea3b61e548cd",
									"id": 657,
									"name": "StakeConfirmed",
									"nameLocation": "865:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "905:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "889:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"indexed": true,
												"mutability": "mutable",
												"name": "nodeId",
												"nameLocation": "936:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "920:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 648,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"indexed": true,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "968:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "952:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 650,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountWei",
												"nameLocation": "992:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "984:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"indexed": false,
												"mutability": "mutable",
												"name": "pChainTxId",
												"nameLocation": "1019:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1011:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 654,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:156:6"
									},
									"src": "859:177:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "1042:328:6",
										"text": " Event emitted when the stake has ended.\n @param owner The address whose stake has ended.\n @param nodeId Node id from which the stake was removed.\n @param txHash Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\n @param amountWei Stake amount (in wei)."
									},
									"eventSelector": "d89d725ca28c0d5002ce399c8a15b0a26908a79c36244c807f9f0b9878f7e756",
									"id": 668,
									"name": "StakeEnded",
									"nameLocation": "1381:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1417:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1401:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"indexed": true,
												"mutability": "mutable",
												"name": "nodeId",
												"nameLocation": "1448:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1432:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 661,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"indexed": true,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "1480:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1464:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 663,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountWei",
												"nameLocation": "1504:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "1496:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1391:128:6"
									},
									"src": "1375:145:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "1526:330:6",
										"text": " Event emitted when the stake was revoked.\n @param owner The address whose stake has ended.\n @param nodeId Node id from which the stake was removed.\n @param txHash Unique tx hash - keccak256(abi.encode(PChainStake.txId, PChainStake.inputAddress));\n @param amountWei Stake amount (in wei)."
									},
									"eventSelector": "b525ad07d0e7dcf68eb9bb9b2d4d080e58708f78f3529ae522c2b1e202cce981",
									"id": 679,
									"name": "StakeRevoked",
									"nameLocation": "1867:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1905:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1889:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": true,
												"mutability": "mutable",
												"name": "nodeId",
												"nameLocation": "1936:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1920:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 672,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"indexed": true,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "1968:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1952:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 674,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1952:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountWei",
												"nameLocation": "1992:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1984:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1879:128:6"
									},
									"src": "1861:147:6"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "2014:242:6",
										"text": " Method for P-chain stake mirroring using `PChainStake` data and Merkle proof.\n @param _stakeData Information about P-chain stake.\n @param _merkleProof Merkle proof that should be used to prove the P-chain stake."
									},
									"functionSelector": "2e335805",
									"id": 689,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mirrorStake",
									"nameLocation": "2270:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "_stakeData",
												"nameLocation": "2339:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "2291:58:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PChainStake_$751_calldata_ptr",
													"typeString": "struct IPChainStakeMirrorVerifier.PChainStake"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "IPChainStakeMirrorVerifier.PChainStake",
														"nameLocations": [
															"2291:26:6",
															"2318:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 751,
														"src": "2291:38:6"
													},
													"referencedDeclaration": 751,
													"src": "2291:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PChainStake_$751_storage_ptr",
														"typeString": "struct IPChainStakeMirrorVerifier.PChainStake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_merkleProof",
												"nameLocation": "2378:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "2359:31:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 684,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2359:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 685,
													"nodeType": "ArrayTypeName",
													"src": "2359:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:115:6"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2413:0:6"
									},
									"scope": 732,
									"src": "2261:153:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "2420:297:6",
										"text": " Method for checking if active stake (stake start time <= block.timestamp < stake end time) was already mirrored.\n @param _txId P-chain stake transaction id.\n @param _inputAddress P-chain address that opened stake.\n @return True if stake is active and mirrored."
									},
									"functionSelector": "d9ab4dfe",
									"id": 699,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isActiveStakeMirrored",
									"nameLocation": "2731:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "_txId",
												"nameLocation": "2761:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2753:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 691,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2753:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "_inputAddress",
												"nameLocation": "2776:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2768:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 693,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2752:38:6"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "2813:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2813:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:6:6"
									},
									"scope": 732,
									"src": "2722:97:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 700,
										"nodeType": "StructuredDocumentation",
										"src": "2825:111:6",
										"text": " Total amount of tokens at current block.\n @return The current total amount of tokens.*"
									},
									"functionSelector": "18160ddd",
									"id": 705,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2950:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2961:2:6"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "2987:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:9:6"
									},
									"scope": 732,
									"src": "2941:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3002:210:6",
										"text": " Total amount of tokens at a specific `_blockNumber`.\n @param _blockNumber The block number when the totalSupply is queried.\n @return The total amount of tokens at `_blockNumber`.*"
									},
									"functionSelector": "981b24d0",
									"id": 713,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyAt",
									"nameLocation": "3226:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "3245:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "3240:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3239:19:6"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "3281:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3280:9:6"
									},
									"scope": 732,
									"src": "3217:73:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "3296:186:6",
										"text": " Queries the token balance of `_owner` at current block.\n @param _owner The address from which the balance will be retrieved.\n @return The current balance.*"
									},
									"functionSelector": "70a08231",
									"id": 721,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3496:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3514:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "3506:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:16:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "3545:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3544:9:6"
									},
									"scope": 732,
									"src": "3487:67:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "3560:281:6",
										"text": " Queries the token balance of `_owner` at a specific `_blockNumber`.\n @param _owner The address from which the balance will be retrieved.\n @param _blockNumber The block number when the balance is queried.\n @return The balance at `_blockNumber`.*"
									},
									"functionSelector": "4ee2cd7e",
									"id": 731,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nameLocation": "3855:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3875:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3867:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "3888:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3883:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3883:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3866:35:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3925:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3924:9:6"
									},
									"scope": 732,
									"src": "3846:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 733,
							"src": "220:3716:6",
							"usedErrors": []
						}
					],
					"src": "32:3905:6"
				},
				"id": 6
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirrorVerifier.sol",
					"exportedSymbols": {
						"IPChainStakeMirrorVerifier": [
							752
						]
					},
					"id": 753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 734,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:7"
						},
						{
							"id": 735,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPChainStakeMirrorVerifier",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 736,
								"nodeType": "StructuredDocumentation",
								"src": "83:75:7",
								"text": " Interface with structure for P-chain stake mirror verifications."
							},
							"fullyImplemented": true,
							"id": 752,
							"linearizedBaseContracts": [
								752
							],
							"name": "IPChainStakeMirrorVerifier",
							"nameLocation": "169:26:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPChainStakeMirrorVerifier.PChainStake",
									"id": 751,
									"members": [
										{
											"constant": false,
											"id": 738,
											"mutability": "mutable",
											"name": "txId",
											"nameLocation": "363:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "355:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 737,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "355:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 740,
											"mutability": "mutable",
											"name": "stakingType",
											"nameLocation": "497:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "491:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 739,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "491:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 742,
											"mutability": "mutable",
											"name": "inputAddress",
											"nameLocation": "724:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "716:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes20",
												"typeString": "bytes20"
											},
											"typeName": {
												"id": 741,
												"name": "bytes20",
												"nodeType": "ElementaryTypeName",
												"src": "716:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 744,
											"mutability": "mutable",
											"name": "nodeId",
											"nameLocation": "912:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "904:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes20",
												"typeString": "bytes20"
											},
											"typeName": {
												"id": 743,
												"name": "bytes20",
												"nodeType": "ElementaryTypeName",
												"src": "904:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 746,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1008:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "1001:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 745,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1001:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 748,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "1105:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "1098:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 747,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1098:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 750,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "1187:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 751,
											"src": "1180:13:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 749,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1180:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PChainStake",
									"nameLocation": "273:11:7",
									"nodeType": "StructDefinition",
									"scope": 752,
									"src": "266:934:7",
									"visibility": "public"
								}
							],
							"scope": 753,
							"src": "159:1043:7",
							"usedErrors": []
						}
					],
					"src": "32:1171:7"
				},
				"id": 7
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainVotePower.sol",
					"exportedSymbols": {
						"IPChainVotePower": [
							884
						]
					},
					"id": 885,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 754,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPChainVotePower",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 755,
								"nodeType": "StructuredDocumentation",
								"src": "63:81:8",
								"text": " Interface for the vote power part of the `PChainStakeMirror` contract."
							},
							"fullyImplemented": false,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "IPChainVotePower",
							"nameLocation": "155:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "179:496:8",
										"text": " Event triggered when a stake is confirmed or at the time it ends.\n Definition: `votePowerFromTo(owner, nodeId)` is `changed` from `priorVotePower` to `newVotePower`.\n @param owner The account that has changed the amount of vote power it is staking.\n @param nodeId The node id whose received vote power has changed.\n @param priorVotePower The vote power originally on that node id.\n @param newVotePower The new vote power that triggered this event."
									},
									"eventSelector": "e03ab1522dc81fa0410fe7c9668da7d7b8b9be42ea6011d936e90deda8c0aea1",
									"id": 766,
									"name": "VotePowerChanged",
									"nameLocation": "686:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "728:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "712:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "nodeId",
												"nameLocation": "759:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "743:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 759,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"indexed": false,
												"mutability": "mutable",
												"name": "priorVotePower",
												"nameLocation": "783:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "775:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"indexed": false,
												"mutability": "mutable",
												"name": "newVotePower",
												"nameLocation": "815:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "807:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:131:8"
									},
									"src": "680:154:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "840:314:8",
										"text": " Emitted when a vote power cache entry is created.\n Allows history cleaners to track vote power cache cleanup opportunities off-chain.\n @param nodeId The node id whose vote power has just been cached.\n @param blockNumber The block number at which the vote power has been cached."
									},
									"eventSelector": "b34d3f5bc1f5b60002062672fcc0a956db7b59b3416f8c5343e9aef5adc7b971",
									"id": 773,
									"name": "VotePowerCacheCreated",
									"nameLocation": "1165:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"indexed": false,
												"mutability": "mutable",
												"name": "nodeId",
												"nameLocation": "1195:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1187:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 768,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "1211:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1203:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:37:8"
									},
									"src": "1159:65:8"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "1230:438:8",
										"text": " Get the vote power of `_owner` at block `_blockNumber` using cache.\n   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n   Can only be used if _blockNumber is in the past, otherwise reverts.\n @param _owner The node id to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_owner` at `_blockNumber`."
									},
									"functionSelector": "bd61ffee",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAtCached",
									"nameLocation": "1682:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1710:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1702:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 775,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "1726:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1718:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:38:8"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1757:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1756:9:8"
									},
									"scope": 884,
									"src": "1673:93:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "1772:409:8",
										"text": " Get the total vote power at block `_blockNumber` using cache.\n   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n   Can only be used if `_blockNumber` is in the past, otherwise reverts.\n @param _blockNumber The block number at which to fetch.\n @return The total vote power at the block (sum of all accounts' vote powers)."
									},
									"functionSelector": "caeb942b",
									"id": 791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVotePowerAtCached",
									"nameLocation": "2195:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2226:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2218:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2217:22:8"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "2257:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:9:8"
									},
									"scope": 884,
									"src": "2186:80:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "2272:132:8",
										"text": " Get the current total vote power.\n @return The current total vote power (sum of all accounts' vote powers)."
									},
									"functionSelector": "f5f3d4f7",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVotePower",
									"nameLocation": "2418:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2432:2:8"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "2457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2456:9:8"
									},
									"scope": 884,
									"src": "2409:57:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "2472:212:8",
										"text": " Get the total vote power at block `_blockNumber`\n @param _blockNumber The block number at which to fetch.\n @return The total vote power at the block  (sum of all accounts' vote powers)."
									},
									"functionSelector": "3e5aa26a",
									"id": 805,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVotePowerAt",
									"nameLocation": "2698:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2720:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2715:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2715:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:19:8"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2756:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:9:8"
									},
									"scope": 884,
									"src": "2689:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "2771:244:8",
										"text": " Get the amounts and node ids being staked to by a vote power owner.\n @param _owner The address being queried.\n @return _nodeIds Array of node ids.\n @return _amounts Array of staked amounts, for each node id."
									},
									"functionSelector": "33b69c4c",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakesOf",
									"nameLocation": "3029:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3046:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3038:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:16:8"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "_nodeIds",
												"nameLocation": "3123:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3106:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes20_$dyn_memory_ptr",
													"typeString": "bytes20[]"
												},
												"typeName": {
													"baseType": {
														"id": 810,
														"name": "bytes20",
														"nodeType": "ElementaryTypeName",
														"src": "3106:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"id": 811,
													"nodeType": "ArrayTypeName",
													"src": "3106:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes20_$dyn_storage_ptr",
														"typeString": "bytes20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "3162:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3145:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 813,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3145:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 814,
													"nodeType": "ArrayTypeName",
													"src": "3145:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:88:8"
									},
									"scope": 884,
									"src": "3020:161:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "3187:328:8",
										"text": " Get the amounts and node ids being staked to by a vote power owner,\n at a given block.\n @param _owner The address being queried.\n @param _blockNumber The block number being queried.\n @return _nodeIds Array of node ids.\n @return _amounts Array of staked amounts, for each node id."
									},
									"functionSelector": "4be91f32",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "stakesOfAt",
									"nameLocation": "3529:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "3581:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3573:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3573:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3539:60:8"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "_nodeIds",
												"nameLocation": "3669:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3652:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes20_$dyn_memory_ptr",
													"typeString": "bytes20[]"
												},
												"typeName": {
													"baseType": {
														"id": 824,
														"name": "bytes20",
														"nodeType": "ElementaryTypeName",
														"src": "3652:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"id": 825,
													"nodeType": "ArrayTypeName",
													"src": "3652:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes20_$dyn_storage_ptr",
														"typeString": "bytes20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "3708:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "3691:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 827,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3691:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 828,
													"nodeType": "ArrayTypeName",
													"src": "3691:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3638:88:8"
									},
									"scope": 884,
									"src": "3520:207:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "3733:162:8",
										"text": " Get the current vote power of `_nodeId`.\n @param _nodeId The node id to get voting power.\n @return Current vote power of `_nodeId`."
									},
									"functionSelector": "b4eb2a81",
									"id": 839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOf",
									"nameLocation": "3909:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "_nodeId",
												"nameLocation": "3929:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3921:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 833,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3920:17:8"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "3960:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3959:9:8"
									},
									"scope": 884,
									"src": "3900:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "3975:245:8",
										"text": " Get the vote power of `_nodeId` at block `_blockNumber`\n @param _nodeId The node id to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_nodeId` at `_blockNumber`."
									},
									"functionSelector": "46431374",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAt",
									"nameLocation": "4234:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "_nodeId",
												"nameLocation": "4256:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4248:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 841,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "4273:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4265:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4265:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4247:39:8"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "4309:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4309:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:9:8"
									},
									"scope": 884,
									"src": "4225:93:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "4324:197:8",
										"text": " Get current staked vote power from `_owner` staked to `_nodeId`.\n @param _owner Address of vote power owner.\n @param _nodeId Node id.\n @return The staked vote power."
									},
									"functionSelector": "59c345f5",
									"id": 859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerFromTo",
									"nameLocation": "4535:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4559:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4551:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4551:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "_nodeId",
												"nameLocation": "4575:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4567:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 853,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4550:33:8"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4606:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4606:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4605:9:8"
									},
									"scope": 884,
									"src": "4526:89:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "4621:277:8",
										"text": " Get current staked vote power from `_owner` staked to `_nodeId` at `_blockNumber`.\n @param _owner Address of vote power owner.\n @param _nodeId Node id.\n @param _blockNumber The block number at which to fetch.\n @return The staked vote power."
									},
									"functionSelector": "1f7ff2c7",
									"id": 871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerFromToAt",
									"nameLocation": "4912:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4938:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "4930:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_nodeId",
												"nameLocation": "4954:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "4946:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes20",
													"typeString": "bytes20"
												},
												"typeName": {
													"id": 863,
													"name": "bytes20",
													"nodeType": "ElementaryTypeName",
													"src": "4946:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes20",
														"typeString": "bytes20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "4968:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "4963:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4963:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4929:52:8"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "5004:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5004:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5003:9:8"
									},
									"scope": 884,
									"src": "4903:110:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "5019:239:8",
										"text": " Return vote powers for several node ids in a batch.\n @param _nodeIds The list of node ids to fetch vote power of.\n @param _blockNumber The block number at which to fetch.\n @return A list of vote powers."
									},
									"functionSelector": "a9e70199",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchVotePowerOfAt",
									"nameLocation": "5272:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "_nodeIds",
												"nameLocation": "5317:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "5300:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes20_$dyn_memory_ptr",
													"typeString": "bytes20[]"
												},
												"typeName": {
													"baseType": {
														"id": 873,
														"name": "bytes20",
														"nodeType": "ElementaryTypeName",
														"src": "5300:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes20",
															"typeString": "bytes20"
														}
													},
													"id": 874,
													"nodeType": "ArrayTypeName",
													"src": "5300:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes20_$dyn_storage_ptr",
														"typeString": "bytes20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "5343:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "5335:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5335:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5290:71:8"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "5384:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5384:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"nodeType": "ArrayTypeName",
													"src": "5384:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5383:18:8"
									},
									"scope": 884,
									"src": "5263:139:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 885,
							"src": "145:5259:8",
							"usedErrors": []
						}
					],
					"src": "32:5373:8"
				},
				"id": 8
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol",
					"exportedSymbols": {
						"IICleanable": [
							905
						]
					},
					"id": 906,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 886,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IICleanable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 905,
							"linearizedBaseContracts": [
								905
							],
							"name": "IICleanable",
							"nameLocation": "73:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "91:85:9",
										"text": " Set the contract that is allowed to call history cleaning methods."
									},
									"functionSelector": "f6a494af",
									"id": 892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCleanerContract",
									"nameLocation": "190:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "_cleanerContract",
												"nameLocation": "217:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "209:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:26:9"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:0:9"
									},
									"scope": 905,
									"src": "181:63:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "254:352:9",
										"text": " Set the cleanup block number.\n Historic data for the blocks before `cleanupBlockNumber` can be erased,\n history before that block should never be used since it can be inconsistent.\n In particular, cleanup block number must be before current vote power block.\n @param _blockNumber The new cleanup block number."
									},
									"functionSelector": "13de97f5",
									"id": 898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCleanupBlockNumber",
									"nameLocation": "620:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "650:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "642:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:9"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:0:9"
									},
									"scope": 905,
									"src": "611:62:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "683:56:9",
										"text": " Get the current cleanup block number."
									},
									"functionSelector": "deea13e7",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cleanupBlockNumber",
									"nameLocation": "753:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:9"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "797:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:9:9"
									},
									"scope": 905,
									"src": "744:62:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 906,
							"src": "63:745:9",
							"usedErrors": []
						}
					],
					"src": "32:777:9"
				},
				"id": 9
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						],
						"IGovernanceVotePower": [
							631
						],
						"IIGovernanceVotePower": [
							978
						],
						"IPChainStakeMirror": [
							732
						],
						"IPChainStakeMirrorVerifier": [
							752
						],
						"IPChainVotePower": [
							884
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						]
					},
					"id": 979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 907,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:10"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol",
							"file": "../../userInterfaces/IVPToken.sol",
							"id": 908,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 979,
							"sourceUnit": 1528,
							"src": "63:43:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/infrastructure/userInterfaces/IPChainStakeMirror.sol",
							"file": "../../../infrastructure/userInterfaces/IPChainStakeMirror.sol",
							"id": 909,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 979,
							"sourceUnit": 733,
							"src": "107:71:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol",
							"file": "../../../../governance/userInterfaces/IGovernanceVotePower.sol",
							"id": 910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 979,
							"sourceUnit": 632,
							"src": "179:72:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 912,
										"name": "IGovernanceVotePower",
										"nameLocations": [
											"372:20:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 631,
										"src": "372:20:10"
									},
									"id": 913,
									"nodeType": "InheritanceSpecifier",
									"src": "372:20:10"
								}
							],
							"canonicalName": "IIGovernanceVotePower",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 911,
								"nodeType": "StructuredDocumentation",
								"src": "253:83:10",
								"text": " Internal interface for contracts delegating their governance vote power."
							},
							"fullyImplemented": false,
							"id": 978,
							"linearizedBaseContracts": [
								978,
								631
							],
							"name": "IIGovernanceVotePower",
							"nameLocation": "347:21:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 914,
										"nodeType": "StructuredDocumentation",
										"src": "399:432:10",
										"text": " Emitted when a delegate's vote power changes, as a result of a new delegation\n or a token transfer, for example.\n The event is always emitted from a `GovernanceVotePower` contract.\n @param delegate The account receiving the changing delegated vote power.\n @param previousBalance Delegated vote power before the change.\n @param newBalance Delegated vote power after the change."
									},
									"eventSelector": "dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724",
									"id": 922,
									"name": "DelegateVotesChanged",
									"nameLocation": "842:20:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegate",
												"nameLocation": "888:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "872:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousBalance",
												"nameLocation": "914:15:10",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "906:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "947:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "939:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "862:101:10"
									},
									"src": "836:128:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "970:559:10",
										"text": " Emitted when an account starts delegating vote power or switches its delegation\n to another address.\n The event is always emitted from a `GovernanceVotePower` contract.\n @param delegator Account delegating its vote power.\n @param fromDelegate Account receiving the delegation before the change.\n Can be address(0) if there was no previous delegation.\n @param toDelegate Account receiving the delegation after the change.\n Can be address(0) if `delegator` just undelegated all its vote power."
									},
									"eventSelector": "3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f",
									"id": 931,
									"name": "DelegateChanged",
									"nameLocation": "1540:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "1581:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1565:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromDelegate",
												"nameLocation": "1616:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1600:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1600:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "toDelegate",
												"nameLocation": "1654:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "1638:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1555:115:10"
									},
									"src": "1534:137:10"
								},
								{
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "1677:473:10",
										"text": " Update governance vote power of all involved delegates after tokens are transferred.\n This function **MUST** be called after each governance token transfer for the\n delegates to reflect the correct balance.\n @param _from Source address of the transfer.\n @param _to Destination address of the transfer.\n @param _fromBalance _Ignored._\n @param _toBalance _Ignored._\n @param _amount Amount being transferred."
									},
									"functionSelector": "eadb4362",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAtTokenTransfer",
									"nameLocation": "2164:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2203:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2195:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "2226:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2218:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_fromBalance",
												"nameLocation": "2247:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2239:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2239:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_toBalance",
												"nameLocation": "2277:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2269:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2305:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "2297:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2297:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:133:10"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2327:0:10"
									},
									"scope": 978,
									"src": "2155:173:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "2334:360:10",
										"text": " Set the cleanup block number.\n Historic data for the blocks before `cleanupBlockNumber` can be erased.\n History before that block should never be used since it can be inconsistent.\n In particular, cleanup block number must be lower than the current vote power block.\n @param _blockNumber The new cleanup block number."
									},
									"functionSelector": "13de97f5",
									"id": 951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCleanupBlockNumber",
									"nameLocation": "2708:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2738:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "2730:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:22:10"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2760:0:10"
									},
									"scope": 978,
									"src": "2699:62:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "2767:221:10",
										"text": " Set the contract that is allowed to call history cleaning methods.\n @param _cleanerContract Address of the cleanup contract.\n Usually this will be an instance of `CleanupBlockNumberManager`."
									},
									"functionSelector": "f6a494af",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCleanerContract",
									"nameLocation": "3002:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_cleanerContract",
												"nameLocation": "3029:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3021:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:26:10"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3055:0:10"
									},
									"scope": 978,
									"src": "2993:63:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3062:145:10",
										"text": " Get the token that this governance vote power contract belongs to.\n @return The IVPToken interface owning this contract."
									},
									"functionSelector": "65371883",
									"id": 964,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerToken",
									"nameLocation": "3221:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:2:10"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "3257:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVPToken_$1527",
													"typeString": "contract IVPToken"
												},
												"typeName": {
													"id": 961,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 960,
														"name": "IVPToken",
														"nameLocations": [
															"3257:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "3257:8:10"
													},
													"referencedDeclaration": 1527,
													"src": "3257:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVPToken_$1527",
														"typeString": "contract IVPToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3256:10:10"
									},
									"scope": 978,
									"src": "3212:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "3273:171:10",
										"text": " Get the stake mirror contract that this governance vote power contract belongs to.\n @return The IPChainStakeMirror interface owning this contract."
									},
									"functionSelector": "62d9c89a",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pChainStakeMirror",
									"nameLocation": "3458:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:2:10"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "3501:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPChainStakeMirror_$732",
													"typeString": "contract IPChainStakeMirror"
												},
												"typeName": {
													"id": 968,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 967,
														"name": "IPChainStakeMirror",
														"nameLocations": [
															"3501:18:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 732,
														"src": "3501:18:10"
													},
													"referencedDeclaration": 732,
													"src": "3501:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPChainStakeMirror_$732",
														"typeString": "contract IPChainStakeMirror"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:20:10"
									},
									"scope": 978,
									"src": "3449:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "3527:146:10",
										"text": " Get the current cleanup block number set with `setCleanupBlockNumber()`.\n @return The currently set cleanup block number."
									},
									"functionSelector": "a72ec4b6",
									"id": 977,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCleanupBlockNumber",
									"nameLocation": "3687:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3708:2:10"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "3733:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3732:9:10"
									},
									"scope": 978,
									"src": "3678:64:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 979,
							"src": "337:3407:10",
							"usedErrors": []
						}
					],
					"src": "32:3713:10"
				},
				"id": 10
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						],
						"IGovernanceVotePower": [
							631
						],
						"IICleanable": [
							905
						],
						"IIVPContract": [
							1210
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						]
					},
					"id": 1211,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 980,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:11"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol",
							"file": "../../userInterfaces/IVPToken.sol",
							"id": 981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1211,
							"sourceUnit": 1528,
							"src": "63:43:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol",
							"file": "../../userInterfaces/IVPContractEvents.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1211,
							"sourceUnit": 1291,
							"src": "107:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol",
							"file": "./IICleanable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1211,
							"sourceUnit": 906,
							"src": "160:27:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 984,
										"name": "IICleanable",
										"nameLocations": [
											"215:11:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 905,
										"src": "215:11:11"
									},
									"id": 985,
									"nodeType": "InheritanceSpecifier",
									"src": "215:11:11"
								},
								{
									"baseName": {
										"id": 986,
										"name": "IVPContractEvents",
										"nameLocations": [
											"228:17:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1290,
										"src": "228:17:11"
									},
									"id": 987,
									"nodeType": "InheritanceSpecifier",
									"src": "228:17:11"
								}
							],
							"canonicalName": "IIVPContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1210,
							"linearizedBaseContracts": [
								1210,
								1290,
								905
							],
							"name": "IIVPContract",
							"nameLocation": "199:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "252:193:11",
										"text": " Update vote powers when tokens are transfered.\n Also update delegated vote powers for percentage delegation\n and check for enough funds for explicit delegations.*"
									},
									"functionSelector": "eadb4362",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateAtTokenTransfer",
									"nameLocation": "459:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "498:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "490:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "522:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "514:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "_fromBalance",
												"nameLocation": "544:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "536:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_toBalance",
												"nameLocation": "574:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "566:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "602:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "594:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "480:135:11"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:11"
									},
									"scope": 1210,
									"src": "450:175:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "631:463:11",
										"text": " @notice Delegate `_bips` percentage of voting power to `_to` from `_from`\n @param _from The address of the delegator\n @param _to The address of the recipient\n @param _balance The delegator's current balance\n @param _bips The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).\n   Not cumulative - every call resets the delegation value (and value of 0 revokes delegation).*"
									},
									"functionSelector": "6230001a",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "1108:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1134:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1126:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1158:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1150:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "1180:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1172:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "1207:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1199:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:102:11"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:0:11"
									},
									"scope": 1210,
									"src": "1099:129:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "1238:421:11",
										"text": " @notice Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\n @param _from The address of the delegator\n @param _to The address of the recipient\n @param _balance The delegator's current balance\n @param _amount An explicit vote power amount to be delegated.\n   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*"
									},
									"functionSelector": "404d9e82",
									"id": 1025,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateExplicit",
									"nameLocation": "1677:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "1711:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1703:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1735:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1727:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1727:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "1757:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1749:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1781:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1776:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1776:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:101:11"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1803:0:11"
									},
									"scope": 1210,
									"src": "1668:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "1814:673:11",
										"text": " @notice Revoke all delegation from sender to `_who` at given block. \n    Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.\n    Block `_blockNumber` must be in the past. \n    This method should be used only to prevent rogue delegate voting in the current voting block.\n    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\n @param _from The address of the delegator\n @param _who Address of the delegatee\n @param _balance The delegator's current balance\n @param _blockNumber The block number at which to revoke delegation.*"
									},
									"functionSelector": "c7c62fab",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeDelegationAt",
									"nameLocation": "2501:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2537:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2529:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "2561:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2553:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "2584:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2576:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2607:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2602:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2602:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2519:106:11"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:11"
									},
									"scope": 1210,
									"src": "2492:143:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2649:246:11",
										"text": " @notice Undelegate all voting power for delegates of `msg.sender`\n    Can only be used with percentage delegation.\n    Does not reset delegation mode back to NOTSET.\n @param _from The address of the delegator*"
									},
									"functionSelector": "05109ecf",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegateAll",
									"nameLocation": "2909:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "2940:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2932:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "2963:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2955:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2955:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2922:55:11"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2986:0:11"
									},
									"scope": 1210,
									"src": "2900:87:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "2997:481:11",
										"text": " @notice Undelegate all explicit vote power by amount delegates for `msg.sender`.\n    Can only be used with explicit delegation.\n    Does not reset delegation mode back to NOTSET.\n @param _from The address of the delegator\n @param _delegateAddresses Explicit delegation does not store delegatees' addresses, \n   so the caller must supply them.\n @return The amount still delegated (in case the list of delegates was incomplete)."
									},
									"functionSelector": "0f8b8af7",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegateAllExplicit",
									"nameLocation": "3492:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "3531:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3523:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "_delegateAddresses",
												"nameLocation": "3564:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3547:35:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1049,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3547:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1050,
													"nodeType": "ArrayTypeName",
													"src": "3547:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3513:75:11"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "3607:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3607:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:9:11"
									},
									"scope": 1210,
									"src": "3483:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "3626:297:11",
										"text": " @notice Get the vote power of `_who` at block `_blockNumber`\n   Reads/updates cache and upholds revocations.\n @param _who The address to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_who` at `_blockNumber`."
									},
									"functionSelector": "e587497e",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAtCached",
									"nameLocation": "3937:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "3965:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3957:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "3979:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "3971:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3956:36:11"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "4010:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:9:11"
									},
									"scope": 1210,
									"src": "3928:91:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "4029:161:11",
										"text": " @notice Get the current vote power of `_who`.\n @param _who The address to get voting power.\n @return Current vote power of `_who`."
									},
									"functionSelector": "142d1018",
									"id": 1074,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOf",
									"nameLocation": "4204:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "4224:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "4216:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4216:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:14:11"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "4252:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4252:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:9:11"
									},
									"scope": 1210,
									"src": "4195:66:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "4271:244:11",
										"text": " @notice Get the vote power of `_who` at block `_blockNumber`\n @param _who The address to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_who` at `_blockNumber`."
									},
									"functionSelector": "92bfe6d8",
									"id": 1084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAt",
									"nameLocation": "4529:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "4551:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "4543:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4543:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "4565:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "4557:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4557:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4542:36:11"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "4601:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:9:11"
									},
									"scope": 1210,
									"src": "4520:90:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "4616:338:11",
										"text": " @notice Get the vote power of `_who` at block `_blockNumber`, ignoring revocation information (and cache).\n @param _who The address to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_who` at `_blockNumber`. Result doesn't change if vote power is revoked."
									},
									"functionSelector": "04bb4e43",
									"id": 1094,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAtIgnoringRevocation",
									"nameLocation": "4968:31:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "5008:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "5000:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "5022:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "5014:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5014:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4999:36:11"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "5058:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5058:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5057:9:11"
									},
									"scope": 1210,
									"src": "4959:108:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "5073:240:11",
										"text": " Return vote powers for several addresses in a batch.\n @param _owners The list of addresses to fetch vote power of.\n @param _blockNumber The block number at which to fetch.\n @return A list of vote powers."
									},
									"functionSelector": "49e3c7e5",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchVotePowerOfAt",
									"nameLocation": "5331:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "5376:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "5359:24:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1096,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5359:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1097,
													"nodeType": "ArrayTypeName",
													"src": "5359:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "5402:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "5394:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5394:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:71:11"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "5451:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1102,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5451:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1103,
													"nodeType": "ArrayTypeName",
													"src": "5451:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5450:18:11"
									},
									"scope": 1210,
									"src": "5322:147:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "5475:274:11",
										"text": " @notice Get current delegated vote power `_from` delegator delegated `_to` delegatee.\n @param _from Address of delegator\n @param _to Address of delegatee\n @param _balance The delegator's current balance\n @return The delegated vote power."
									},
									"functionSelector": "9dc6b9f2",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerFromTo",
									"nameLocation": "5763:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5796:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5788:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5788:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5820:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5812:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "5842:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5834:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5834:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5778:78:11"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "5879:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5879:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5878:9:11"
									},
									"scope": 1210,
									"src": "5754:134:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "5898:350:11",
										"text": " @notice Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\n @param _from Address of delegator\n @param _to Address of delegatee\n @param _balance The delegator's current balance\n @param _blockNumber The block number at which to fetch.\n @return The delegated vote power."
									},
									"functionSelector": "833aca92",
									"id": 1132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerFromToAt",
									"nameLocation": "6262:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6297:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6289:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6321:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6313:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6313:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "6343:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6335:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "6366:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6361:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6361:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6279:105:11"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6407:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6407:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6406:9:11"
									},
									"scope": 1210,
									"src": "6253:163:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "6422:248:11",
										"text": " @notice Compute the current undelegated vote power of `_owner`\n @param _owner The address to get undelegated voting power.\n @param _balance Owner's current balance\n @return The unallocated vote power of `_owner`"
									},
									"functionSelector": "4a03d556",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegatedVotePowerOf",
									"nameLocation": "6684:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "6724:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6716:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "6748:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6740:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6740:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6706:56:11"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "6785:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6785:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6784:9:11"
									},
									"scope": 1210,
									"src": "6675:119:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "6800:325:11",
										"text": " @notice Get the undelegated vote power of `_owner` at given block.\n @param _owner The address to get undelegated voting power.\n @param _blockNumber The block number at which to fetch.\n @return The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)"
									},
									"functionSelector": "31503927",
									"id": 1154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegatedVotePowerOfAt",
									"nameLocation": "7139:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7181:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "7173:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7173:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "7206:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "7198:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7198:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "7232:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "7224:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7224:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7163:87:11"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "7273:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7273:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7272:9:11"
									},
									"scope": 1210,
									"src": "7130:152:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "7288:281:11",
										"text": " @notice Get the delegation mode for '_who'. This mode determines whether vote power is\n  allocated by percentage or by explicit value.\n @param _who The address to get delegation mode.\n @return Delegation mode (NOTSET=0, PERCENTAGE=1, AMOUNT=2))"
									},
									"functionSelector": "f6837767",
									"id": 1162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationModeOf",
									"nameLocation": "7583:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "7608:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "7600:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7599:14:11"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "7637:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7637:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7636:9:11"
									},
									"scope": 1210,
									"src": "7574:72:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "7656:527:11",
										"text": " @notice Get the vote power delegation `_delegateAddresses` \n  and `pcts` of an `_owner`. Returned in two separate positional arrays.\n @param _owner The address to get delegations.\n @return _delegateAddresses Positional array of delegation addresses.\n @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n @return _count The number of delegates.\n @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
									},
									"functionSelector": "7de5b8ed",
									"id": 1178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatesOf",
									"nameLocation": "8197:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "8226:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8218:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8218:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8208:30:11"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "_delegateAddresses",
												"nameLocation": "8309:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8292:35:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1167,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8292:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1168,
													"nodeType": "ArrayTypeName",
													"src": "8292:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "8359:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8342:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1170,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8342:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1171,
													"nodeType": "ArrayTypeName",
													"src": "8342:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "_count",
												"nameLocation": "8386:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8378:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8378:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_delegationMode",
												"nameLocation": "8414:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "8406:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8278:161:11"
									},
									"scope": 1210,
									"src": "8188:252:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "8446:607:11",
										"text": " @notice Get the vote power delegation `delegationAddresses` \n  and `pcts` of an `_owner`. Returned in two separate positional arrays.\n @param _owner The address to get delegations.\n @param _blockNumber The block for which we want to know the delegations.\n @return _delegateAddresses Positional array of delegation addresses.\n @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n @return _count The number of delegates.\n @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
									},
									"functionSelector": "ed475a79",
									"id": 1196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatesOfAt",
									"nameLocation": "9067:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "9098:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9090:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9090:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "9122:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9114:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9114:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9080:60:11"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "_delegateAddresses",
												"nameLocation": "9211:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9194:35:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1185,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9194:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1186,
													"nodeType": "ArrayTypeName",
													"src": "9194:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "9261:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9244:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1188,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9244:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1189,
													"nodeType": "ArrayTypeName",
													"src": "9244:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_count",
												"nameLocation": "9288:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9280:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9280:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_delegationMode",
												"nameLocation": "9316:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9308:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9308:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9180:161:11"
									},
									"scope": 1210,
									"src": "9058:284:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "9348:402:11",
										"text": " The VPToken (or some other contract) that owns this VPContract.\n All state changing methods may be called only from this address.\n This is because original msg.sender is sent in `_from` parameter\n and we must be sure that it cannot be faked by directly calling VPContract.\n Owner token is also used in case of replacement to recover vote powers from balances."
									},
									"functionSelector": "65371883",
									"id": 1203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerToken",
									"nameLocation": "9764:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9774:2:11"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "9800:8:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVPToken_$1527",
													"typeString": "contract IVPToken"
												},
												"typeName": {
													"id": 1200,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1199,
														"name": "IVPToken",
														"nameLocations": [
															"9800:8:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1527,
														"src": "9800:8:11"
													},
													"referencedDeclaration": 1527,
													"src": "9800:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVPToken_$1527",
														"typeString": "contract IVPToken"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9799:10:11"
									},
									"scope": 1210,
									"src": "9755:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "9820:314:11",
										"text": " Return true if this IIVPContract is configured to be used as a replacement for other contract.\n It means that vote powers are not necessarily correct at the initialization, therefore\n every method that reads vote power must check whether it is initialized for that address and block."
									},
									"functionSelector": "aa94d3f2",
									"id": 1209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isReplacement",
									"nameLocation": "10148:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10161:2:11"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "10187:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10187:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10186:6:11"
									},
									"scope": 1210,
									"src": "10139:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1211,
							"src": "189:10006:11",
							"usedErrors": []
						}
					],
					"src": "32:10164:11"
				},
				"id": 11
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPToken.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						],
						"IGovernanceVotePower": [
							631
						],
						"IICleanable": [
							905
						],
						"IIGovernanceVotePower": [
							978
						],
						"IIVPContract": [
							1210
						],
						"IIVPToken": [
							1265
						],
						"IPChainStakeMirror": [
							732
						],
						"IPChainStakeMirrorVerifier": [
							752
						],
						"IPChainVotePower": [
							884
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						]
					},
					"id": 1266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1212,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:12"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol",
							"file": "../../userInterfaces/IVPToken.sol",
							"id": 1213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1266,
							"sourceUnit": 1528,
							"src": "63:43:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol",
							"file": "../../../../governance/userInterfaces/IGovernanceVotePower.sol",
							"id": 1214,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1266,
							"sourceUnit": 632,
							"src": "107:72:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIVPContract.sol",
							"file": "./IIVPContract.sol",
							"id": 1215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1266,
							"sourceUnit": 1211,
							"src": "180:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IIGovernanceVotePower.sol",
							"file": "./IIGovernanceVotePower.sol",
							"id": 1216,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1266,
							"sourceUnit": 979,
							"src": "209:37:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/token/interface/IICleanable.sol",
							"file": "./IICleanable.sol",
							"id": 1217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1266,
							"sourceUnit": 906,
							"src": "247:27:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1218,
										"name": "IVPToken",
										"nameLocations": [
											"299:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1527,
										"src": "299:8:12"
									},
									"id": 1219,
									"nodeType": "InheritanceSpecifier",
									"src": "299:8:12"
								},
								{
									"baseName": {
										"id": 1220,
										"name": "IICleanable",
										"nameLocations": [
											"309:11:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 905,
										"src": "309:11:12"
									},
									"id": 1221,
									"nodeType": "InheritanceSpecifier",
									"src": "309:11:12"
								}
							],
							"canonicalName": "IIVPToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1265,
							"linearizedBaseContracts": [
								1265,
								905,
								1527,
								1768
							],
							"name": "IIVPToken",
							"nameLocation": "286:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "327:148:12",
										"text": " Set the contract that is allowed to set cleanupBlockNumber.\n Usually this will be an instance of CleanupBlockNumberManager."
									},
									"functionSelector": "7f4fcaa9",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setCleanupBlockNumberManager",
									"nameLocation": "489:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "_cleanupBlockNumberManager",
												"nameLocation": "526:26:12",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "518:34:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:36:12"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:12"
									},
									"scope": 1265,
									"src": "480:83:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "573:163:12",
										"text": " Sets new governance vote power contract that allows token owners to participate in governance voting\n and delegate governance vote power. "
									},
									"functionSelector": "9ca2231a",
									"id": 1234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setGovernanceVotePower",
									"nameLocation": "750:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "_governanceVotePower",
												"nameLocation": "795:20:12",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "773:42:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IIGovernanceVotePower_$978",
													"typeString": "contract IIGovernanceVotePower"
												},
												"typeName": {
													"id": 1230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1229,
														"name": "IIGovernanceVotePower",
														"nameLocations": [
															"773:21:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 978,
														"src": "773:21:12"
													},
													"referencedDeclaration": 978,
													"src": "773:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IIGovernanceVotePower_$978",
														"typeString": "contract IIGovernanceVotePower"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:44:12"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:12"
									},
									"scope": 1265,
									"src": "741:85:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "836:421:12",
										"text": " @notice Get the total vote power at block `_blockNumber` using cache.\n   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n   Can only be used if `_blockNumber` is in the past, otherwise reverts.    \n @param _blockNumber The block number at which to fetch.\n @return The total vote power at the block (sum of all accounts' vote powers)."
									},
									"functionSelector": "caeb942b",
									"id": 1242,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVotePowerAtCached",
									"nameLocation": "1271:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "1302:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1294:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1294:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1293:22:12"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1333:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1332:9:12"
									},
									"scope": 1265,
									"src": "1262:80:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "1352:450:12",
										"text": " @notice Get the vote power of `_owner` at block `_blockNumber` using cache.\n   It tries to read the cached value and if not found, reads the actual value and stores it in cache.\n   Can only be used if _blockNumber is in the past, otherwise reverts.    \n @param _owner The address to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_owner` at `_blockNumber`."
									},
									"functionSelector": "e587497e",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAtCached",
									"nameLocation": "1816:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1844:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1836:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "1860:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1852:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:38:12"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "1891:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1890:9:12"
									},
									"scope": 1265,
									"src": "1807:93:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "1906:240:12",
										"text": " Return vote powers for several addresses in a batch.\n @param _owners The list of addresses to fetch vote power of.\n @param _blockNumber The block number at which to fetch.\n @return A list of vote powers."
									},
									"functionSelector": "49e3c7e5",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchVotePowerOfAt",
									"nameLocation": "2164:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "_owners",
												"nameLocation": "2209:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2192:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1254,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2192:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1255,
													"nodeType": "ArrayTypeName",
													"src": "2192:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2235:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2227:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:71:12"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2276:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1260,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2276:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1261,
													"nodeType": "ArrayTypeName",
													"src": "2276:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:18:12"
									},
									"scope": 1265,
									"src": "2155:139:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1266,
							"src": "276:2020:12",
							"usedErrors": []
						}
					],
					"src": "32:2265:12"
				},
				"id": 12
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol",
					"exportedSymbols": {
						"IVPContractEvents": [
							1290
						]
					},
					"id": 1291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1267,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVPContractEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 1290,
							"linearizedBaseContracts": [
								1290
							],
							"name": "IVPContractEvents",
							"nameLocation": "73:17:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "97:329:13",
										"text": " Event triggered when an account delegates or undelegates another account. \n Definition: `votePowerFromTo(from, to)` is `changed` from `priorVotePower` to `newVotePower`.\n For undelegation, `newVotePower` is 0.\n Note: the event is always emitted from VPToken's `writeVotePowerContract`."
									},
									"eventSelector": "500599802164a08023e87ffc3eed0ba3ae60697b3083ba81d046683679d81c6b",
									"id": 1278,
									"name": "Delegate",
									"nameLocation": "437:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "462:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "446:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "484:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "468:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"indexed": false,
												"mutability": "mutable",
												"name": "priorVotePower",
												"nameLocation": "496:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "488:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"indexed": false,
												"mutability": "mutable",
												"name": "newVotePower",
												"nameLocation": "520:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "512:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "445:88:13"
									},
									"src": "431:103:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "544:292:13",
										"text": " Event triggered only when account `delegator` revokes delegation to `delegatee`\n for a single block in the past (typically the current vote block).\n Note: the event is always emitted from VPToken's `writeVotePowerContract` and/or `readVotePowerContract`."
									},
									"eventSelector": "d6f80c7d68e3e62bd7a51c3d37e575c1cfbc311c07487b69ef4eb570bc21cb68",
									"id": 1289,
									"name": "Revoke",
									"nameLocation": "847:6:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegator",
												"nameLocation": "870:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "854:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatee",
												"nameLocation": "897:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "881:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"indexed": false,
												"mutability": "mutable",
												"name": "votePower",
												"nameLocation": "916:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "908:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockNumber",
												"nameLocation": "935:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "927:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "853:94:13"
									},
									"src": "841:107:13"
								}
							],
							"scope": 1291,
							"src": "63:887:13",
							"usedErrors": []
						}
					],
					"src": "32:919:13"
				},
				"id": 13
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPToken.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						],
						"IGovernanceVotePower": [
							631
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						]
					},
					"id": 1528,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1292,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:14"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 1769,
							"src": "63:79:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1293,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1768,
										"src": "71:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/governance/userInterfaces/IGovernanceVotePower.sol",
							"file": "../../../governance/userInterfaces/IGovernanceVotePower.sol",
							"id": 1295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 632,
							"src": "143:69:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/token/userInterfaces/IVPContractEvents.sol",
							"file": "./IVPContractEvents.sol",
							"id": 1296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1528,
							"sourceUnit": 1291,
							"src": "213:33:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1297,
										"name": "IERC20",
										"nameLocations": [
											"270:6:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1768,
										"src": "270:6:14"
									},
									"id": 1298,
									"nodeType": "InheritanceSpecifier",
									"src": "270:6:14"
								}
							],
							"canonicalName": "IVPToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1527,
							"linearizedBaseContracts": [
								1527,
								1768
							],
							"name": "IVPToken",
							"nameLocation": "258:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "283:366:14",
										"text": " @notice Delegate by percentage `_bips` of voting power to `_to` from `msg.sender`.\n @param _to The address of the recipient\n @param _bips The percentage of voting power to be delegated expressed in basis points (1/100 of one percent).\n   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*"
									},
									"functionSelector": "026e402b",
									"id": 1306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "663:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "680:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "672:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "693:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "685:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:28:14"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:0:14"
									},
									"scope": 1527,
									"src": "654:55:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "719:448:14",
										"text": " @notice Undelegate all percentage delegations from the sender and then delegate corresponding \n   `_bips` percentage of voting power from the sender to each member of `_delegatees`.\n @param _delegatees The addresses of the new recipients.\n @param _bips The percentages of voting power to be delegated expressed in basis points (1/100 of one percent).\n   Total of all `_bips` values must be at most 10000.*"
									},
									"functionSelector": "dc4fcda7",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "batchDelegate",
									"nameLocation": "1181:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "_delegatees",
												"nameLocation": "1212:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1195:28:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1308,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1195:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1309,
													"nodeType": "ArrayTypeName",
													"src": "1195:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "1242:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1225:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1311,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1225:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1312,
													"nodeType": "ArrayTypeName",
													"src": "1225:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:54:14"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1257:0:14"
									},
									"scope": 1527,
									"src": "1172:86:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "1272:317:14",
										"text": " @notice Explicitly delegate `_amount` of voting power to `_to` from `msg.sender`.\n @param _to The address of the recipient\n @param _amount An explicit vote power amount to be delegated.\n   Not cumulative - every call resets the delegation value (and value of 0 undelegates `to`).*"
									},
									"functionSelector": "d06dc3ad",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegateExplicit",
									"nameLocation": "1607:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1632:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "1624:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1642:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "1637:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1637:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:27:14"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:14"
									},
									"scope": 1527,
									"src": "1598:62:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "1666:560:14",
										"text": " @notice Revoke all delegation from sender to `_who` at given block. \n    Only affects the reads via `votePowerOfAtCached()` in the block `_blockNumber`.\n    Block `_blockNumber` must be in the past. \n    This method should be used only to prevent rogue delegate voting in the current voting block.\n    To stop delegating use delegate/delegateExplicit with value of 0 or undelegateAll/undelegateAllExplicit.\n @param _who Address of the delegatee\n @param _blockNumber The block number at which to revoke delegation."
									},
									"functionSelector": "bbd6fbf8",
									"id": 1332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeDelegationAt",
									"nameLocation": "2240:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "2267:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2259:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "2278:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2273:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2273:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:33:14"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2300:0:14"
									},
									"scope": 1527,
									"src": "2231:70:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "2311:197:14",
										"text": " @notice Undelegate all voting power for delegates of `msg.sender`\n    Can only be used with percentage delegation.\n    Does not reset delegation mode back to NOTSET.*"
									},
									"functionSelector": "b302f393",
									"id": 1336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegateAll",
									"nameLocation": "2522:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2535:2:14"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2546:0:14"
									},
									"scope": 1527,
									"src": "2513:34:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "2557:432:14",
										"text": " @notice Undelegate all explicit vote power by amount delegates for `msg.sender`.\n    Can only be used with explicit delegation.\n    Does not reset delegation mode back to NOTSET.\n @param _delegateAddresses Explicit delegation does not store delegatees' addresses, \n   so the caller must supply them.\n @return The amount still delegated (in case the list of delegates was incomplete)."
									},
									"functionSelector": "5d6d11eb",
									"id": 1345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegateAllExplicit",
									"nameLocation": "3003:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_delegateAddresses",
												"nameLocation": "3042:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "3025:35:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1338,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3025:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1339,
													"nodeType": "ArrayTypeName",
													"src": "3025:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3024:37:14"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "3080:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3079:9:14"
									},
									"scope": 1527,
									"src": "2994:95:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "3096:62:14",
										"text": " @dev Should be compatible with ERC20 method"
									},
									"functionSelector": "06fdde03",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3172:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3176:2:14"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "3202:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3202:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:15:14"
									},
									"scope": 1527,
									"src": "3163:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "3223:62:14",
										"text": " @dev Should be compatible with ERC20 method"
									},
									"functionSelector": "95d89b41",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3299:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3305:2:14"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "3331:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3331:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:15:14"
									},
									"scope": 1527,
									"src": "3290:56:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "3352:62:14",
										"text": " @dev Should be compatible with ERC20 method"
									},
									"functionSelector": "313ce567",
									"id": 1363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3428:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3436:2:14"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "3462:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1360,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3462:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3461:7:14"
									},
									"scope": 1527,
									"src": "3419:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1364,
										"nodeType": "StructuredDocumentation",
										"src": "3480:216:14",
										"text": " @notice Total amount of tokens at a specific `_blockNumber`.\n @param _blockNumber The block number when the totalSupply is queried\n @return The total amount of tokens at `_blockNumber`*"
									},
									"functionSelector": "981b24d0",
									"id": 1371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyAt",
									"nameLocation": "3710:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "3729:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3724:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3724:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:19:14"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "3765:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3765:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:9:14"
									},
									"scope": 1527,
									"src": "3701:73:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "3780:286:14",
										"text": " @dev Queries the token balance of `_owner` at a specific `_blockNumber`.\n @param _owner The address from which the balance will be retrieved.\n @param _blockNumber The block number when the balance is queried.\n @return The balance at `_blockNumber`.*"
									},
									"functionSelector": "4ee2cd7e",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAt",
									"nameLocation": "4080:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4100:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "4092:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "4113:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "4108:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4108:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4091:35:14"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "4150:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:9:14"
									},
									"scope": 1527,
									"src": "4071:88:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "4170:140:14",
										"text": " @notice Get the current total vote power.\n @return The current total vote power (sum of all accounts' vote powers)."
									},
									"functionSelector": "f5f3d4f7",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVotePower",
									"nameLocation": "4324:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4338:2:14"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4363:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4363:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4362:9:14"
									},
									"scope": 1527,
									"src": "4315:57:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "4382:220:14",
										"text": " @notice Get the total vote power at block `_blockNumber`\n @param _blockNumber The block number at which to fetch.\n @return The total vote power at the block  (sum of all accounts' vote powers)."
									},
									"functionSelector": "3e5aa26a",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalVotePowerAt",
									"nameLocation": "4616:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "4638:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4633:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4633:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4632:19:14"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "4674:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4674:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4673:9:14"
									},
									"scope": 1527,
									"src": "4607:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1396,
										"nodeType": "StructuredDocumentation",
										"src": "4689:167:14",
										"text": " @notice Get the current vote power of `_owner`.\n @param _owner The address to get voting power.\n @return Current vote power of `_owner`."
									},
									"functionSelector": "142d1018",
									"id": 1403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOf",
									"nameLocation": "4870:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4890:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4882:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4882:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4881:16:14"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "4920:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:9:14"
									},
									"scope": 1527,
									"src": "4861:68:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "4939:250:14",
										"text": " @notice Get the vote power of `_owner` at block `_blockNumber`\n @param _owner The address to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_owner` at `_blockNumber`."
									},
									"functionSelector": "92bfe6d8",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAt",
									"nameLocation": "5203:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5225:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "5217:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "5241:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "5233:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5233:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:38:14"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "5277:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5277:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5276:9:14"
									},
									"scope": 1527,
									"src": "5194:92:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "5292:344:14",
										"text": " @notice Get the vote power of `_owner` at block `_blockNumber`, ignoring revocation information (and cache).\n @param _owner The address to get voting power.\n @param _blockNumber The block number at which to fetch.\n @return Vote power of `_owner` at `_blockNumber`. Result doesn't change if vote power is revoked."
									},
									"functionSelector": "04bb4e43",
									"id": 1423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerOfAtIgnoringRevocation",
									"nameLocation": "5650:31:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "5690:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5682:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "5706:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5698:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5698:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:38:14"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "5742:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5742:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5741:9:14"
									},
									"scope": 1527,
									"src": "5641:110:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "5757:398:14",
										"text": " @notice Get the delegation mode for '_who'. This mode determines whether vote power is\n  allocated by percentage or by explicit value. Once the delegation mode is set, \n  it never changes, even if all delegations are removed.\n @param _who The address to get delegation mode.\n @return delegation mode: 0 = NOTSET, 1 = PERCENTAGE, 2 = AMOUNT (i.e. explicit)"
									},
									"functionSelector": "f6837767",
									"id": 1431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationModeOf",
									"nameLocation": "6169:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "6194:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "6186:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6185:14:14"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "6222:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6222:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6221:9:14"
									},
									"scope": 1527,
									"src": "6160:71:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "6245:220:14",
										"text": " @notice Get current delegated vote power `_from` delegator delegated `_to` delegatee.\n @param _from Address of delegator\n @param _to Address of delegatee\n @return The delegated vote power."
									},
									"functionSelector": "be0ca747",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerFromTo",
									"nameLocation": "6479:15:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6503:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6495:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6495:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6518:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6510:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6510:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6494:28:14"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6545:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6545:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6544:9:14"
									},
									"scope": 1527,
									"src": "6470:84:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "6564:296:14",
										"text": " @notice Get delegated the vote power `_from` delegator delegated `_to` delegatee at `_blockNumber`.\n @param _from Address of delegator\n @param _to Address of delegatee\n @param _blockNumber The block number at which to fetch.\n @return The delegated vote power."
									},
									"functionSelector": "e64767aa",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votePowerFromToAt",
									"nameLocation": "6874:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6900:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "6892:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6915:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "6907:11:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6907:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "6925:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "6920:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6920:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6891:47:14"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "6961:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6961:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6960:9:14"
									},
									"scope": 1527,
									"src": "6865:105:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "6980:201:14",
										"text": " @notice Compute the current undelegated vote power of `_owner`\n @param _owner The address to get undelegated voting power.\n @return The unallocated vote power of `_owner`"
									},
									"functionSelector": "d6aa0b77",
									"id": 1461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegatedVotePowerOf",
									"nameLocation": "7195:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7226:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "7218:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7218:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7217:16:14"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "7256:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7256:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7255:9:14"
									},
									"scope": 1527,
									"src": "7186:79:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "7275:325:14",
										"text": " @notice Get the undelegated vote power of `_owner` at given block.\n @param _owner The address to get undelegated voting power.\n @param _blockNumber The block number at which to fetch.\n @return The undelegated vote power of `_owner` (= owner's own balance minus all delegations from owner)"
									},
									"functionSelector": "83035a82",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegatedVotePowerOfAt",
									"nameLocation": "7614:24:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "7647:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "7639:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7639:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "7663:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "7655:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7655:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7638:38:14"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "7699:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7699:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7698:9:14"
									},
									"scope": 1527,
									"src": "7605:103:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "7718:522:14",
										"text": " @notice Get the vote power delegation `delegationAddresses` \n  and `_bips` of `_who`. Returned in two separate positional arrays.\n @param _who The address to get delegations.\n @return _delegateAddresses Positional array of delegation addresses.\n @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n @return _count The number of delegates.\n @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
									},
									"functionSelector": "7de5b8ed",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatesOf",
									"nameLocation": "8254:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "8274:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "8266:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8266:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8265:14:14"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "_delegateAddresses",
												"nameLocation": "8350:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "8333:35:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1476,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8333:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1477,
													"nodeType": "ArrayTypeName",
													"src": "8333:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "8399:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "8382:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1479,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8382:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1480,
													"nodeType": "ArrayTypeName",
													"src": "8382:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "_count",
												"nameLocation": "8426:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "8418:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8418:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "_delegationMode",
												"nameLocation": "8455:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "8447:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8447:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8319:161:14"
									},
									"scope": 1527,
									"src": "8245:236:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "8495:600:14",
										"text": " @notice Get the vote power delegation `delegationAddresses` \n  and `pcts` of `_who`. Returned in two separate positional arrays.\n @param _who The address to get delegations.\n @param _blockNumber The block for which we want to know the delegations.\n @return _delegateAddresses Positional array of delegation addresses.\n @return _bips Positional array of delegation percents specified in basis points (1/100 or 1 percent)\n @return _count The number of delegates.\n @return _delegationMode The mode of the delegation (NOTSET=0, PERCENTAGE=1, AMOUNT=2)."
									},
									"functionSelector": "ed475a79",
									"id": 1505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatesOfAt",
									"nameLocation": "9109:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "_who",
												"nameLocation": "9131:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9123:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9123:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "_blockNumber",
												"nameLocation": "9145:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9137:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9137:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9122:36:14"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "_delegateAddresses",
												"nameLocation": "9229:18:14",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9212:35:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1494,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "9212:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1495,
													"nodeType": "ArrayTypeName",
													"src": "9212:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "_bips",
												"nameLocation": "9279:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9262:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1497,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9262:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1498,
													"nodeType": "ArrayTypeName",
													"src": "9262:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_count",
												"nameLocation": "9307:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9299:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9299:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "_delegationMode",
												"nameLocation": "9336:15:14",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "9328:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9328:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9198:163:14"
									},
									"scope": 1527,
									"src": "9100:262:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "9368:721:14",
										"text": " Returns VPContract used for readonly operations (view methods).\n The only non-view method that might be called on it is `revokeDelegationAt`.\n @notice `readVotePowerContract` is almost always equal to `writeVotePowerContract`\n except during upgrade from one VPContract to a new version (which should happen\n rarely or never and will be anounced before).\n @notice You shouldn't call any methods on VPContract directly, all are exposed\n via VPToken (and state changing methods are forbidden from direct calls). \n This is the reason why this method returns `IVPContractEvents` - it should only be used\n for listening to events (`Revoke` only)."
									},
									"functionSelector": "9b3baa0e",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readVotePowerContract",
									"nameLocation": "10103:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10124:2:14"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "10150:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVPContractEvents_$1290",
													"typeString": "contract IVPContractEvents"
												},
												"typeName": {
													"id": 1509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1508,
														"name": "IVPContractEvents",
														"nameLocations": [
															"10150:17:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1290,
														"src": "10150:17:14"
													},
													"referencedDeclaration": 1290,
													"src": "10150:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVPContractEvents_$1290",
														"typeString": "contract IVPContractEvents"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10149:19:14"
									},
									"scope": 1527,
									"src": "10094:75:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "10175:961:14",
										"text": " Returns VPContract used for state changing operations (non-view methods).\n The only non-view method that might be called on it is `revokeDelegationAt`.\n @notice `writeVotePowerContract` is almost always equal to `readVotePowerContract`\n except during upgrade from one VPContract to a new version (which should happen\n rarely or never and will be anounced before). In the case of upgrade,\n `writeVotePowerContract` will be replaced first to establish delegations, and\n after some perio (e.g. after a reward epoch ends) `readVotePowerContract` will be set equal to it.\n @notice You shouldn't call any methods on VPContract directly, all are exposed\n via VPToken (and state changing methods are forbidden from direct calls). \n This is the reason why this method returns `IVPContractEvents` - it should only be used\n for listening to events (`Delegate` and `Revoke` only)."
									},
									"functionSelector": "1fec092a",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "writeVotePowerContract",
									"nameLocation": "11150:22:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11172:2:14"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "11198:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IVPContractEvents_$1290",
													"typeString": "contract IVPContractEvents"
												},
												"typeName": {
													"id": 1516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1515,
														"name": "IVPContractEvents",
														"nameLocations": [
															"11198:17:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1290,
														"src": "11198:17:14"
													},
													"referencedDeclaration": 1290,
													"src": "11198:17:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVPContractEvents_$1290",
														"typeString": "contract IVPContractEvents"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11197:19:14"
									},
									"scope": 1527,
									"src": "11141:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "11227:127:14",
										"text": " When set, allows token owners to participate in governance voting\n and delegate governance vote power."
									},
									"functionSelector": "8c2b8ae1",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "governanceVotePower",
									"nameLocation": "11368:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11387:2:14"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "11413:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IGovernanceVotePower_$631",
													"typeString": "contract IGovernanceVotePower"
												},
												"typeName": {
													"id": 1523,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1522,
														"name": "IGovernanceVotePower",
														"nameLocations": [
															"11413:20:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 631,
														"src": "11413:20:14"
													},
													"referencedDeclaration": 631,
													"src": "11413:20:14",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IGovernanceVotePower_$631",
														"typeString": "contract IGovernanceVotePower"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11412:22:14"
									},
									"scope": 1527,
									"src": "11359:76:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1528,
							"src": "248:11189:14",
							"usedErrors": []
						}
					],
					"src": "32:11406:14"
				},
				"id": 14
			},
			"lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol": {
				"ast": {
					"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol",
					"exportedSymbols": {
						"IFlareContractRegistry": [
							1577
						]
					},
					"id": 1578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1529,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6",
								"<",
								"0.9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:29:15"
						},
						{
							"id": 1530,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "62:19:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IFlareContractRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1577,
							"linearizedBaseContracts": [
								1577
							],
							"name": "IFlareContractRegistry",
							"nameLocation": "93:22:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "122:145:15",
										"text": " @notice Returns contract address for the given name - might be address(0)\n @param _name             name of the contract"
									},
									"functionSelector": "82760fca",
									"id": 1538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractAddressByName",
									"nameLocation": "281:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "322:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "306:21:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1532,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "306:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:23:15"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "351:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:15"
									},
									"scope": 1577,
									"src": "272:88:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "366:184:15",
										"text": " @notice Returns contract address for the given name hash - might be address(0)\n @param _nameHash         hash of the contract name (keccak256(abi.encode(name))"
									},
									"functionSelector": "159354a2",
									"id": 1546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractAddressByHash",
									"nameLocation": "564:24:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "_nameHash",
												"nameLocation": "597:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "589:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1540,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "588:19:15"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "630:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "629:9:15"
									},
									"scope": 1577,
									"src": "555:84:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "645:150:15",
										"text": " @notice Returns contract addresses for the given names - might be address(0)\n @param _names            names of the contracts"
									},
									"functionSelector": "76d2b1af",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractAddressesByName",
									"nameLocation": "809:26:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_names",
												"nameLocation": "854:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "836:24:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "836:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "836:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:26:15"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "884:16:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "884:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "884:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:18:15"
									},
									"scope": 1577,
									"src": "800:102:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "908:191:15",
										"text": " @notice Returns contract addresses for the given name hashes - might be address(0)\n @param _nameHashes       hashes of the contract names (keccak256(abi.encode(name))"
									},
									"functionSelector": "5e11e2d1",
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getContractAddressesByHash",
									"nameLocation": "1113:26:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_nameHashes",
												"nameLocation": "1159:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1140:30:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1558,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1140:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1559,
													"nodeType": "ArrayTypeName",
													"src": "1140:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1139:32:15"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "1194:16:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1562,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1194:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1563,
													"nodeType": "ArrayTypeName",
													"src": "1194:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:18:15"
									},
									"scope": 1577,
									"src": "1104:108:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "1218:81:15",
										"text": " @notice Returns all contract names and corresponding addresses"
									},
									"functionSelector": "18d3ce96",
									"id": 1576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAllContracts",
									"nameLocation": "1313:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:15"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_names",
												"nameLocation": "1369:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1353:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1569,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1353:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1570,
													"nodeType": "ArrayTypeName",
													"src": "1353:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "1394:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1377:27:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1572,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1377:7:15",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1573,
													"nodeType": "ArrayTypeName",
													"src": "1377:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1352:53:15"
									},
									"scope": 1577,
									"src": "1304:102:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1578,
							"src": "83:1325:15",
							"usedErrors": []
						}
					],
					"src": "32:1377:15"
				},
				"id": 15
			},
			"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1790
						],
						"Ownable": [
							1690
						]
					},
					"id": 1691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:16"
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1691,
							"sourceUnit": 1791,
							"src": "127:30:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1582,
										"name": "Context",
										"nameLocations": [
											"683:7:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1790,
										"src": "683:7:16"
									},
									"id": 1583,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:16"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1581,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:16",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1690,
							"linearizedBaseContracts": [
								1690,
								1790
							],
							"name": "Ownable",
							"nameLocation": "672:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1585,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 1690,
									"src": "697:22:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1584,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1591,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "753:29:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "784:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:16"
									},
									"src": "726:84:16"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "926:49:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1596,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "955:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1595,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "936:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "936:32:16"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:16",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1601,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:16"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:16"
									},
									"scope": 1690,
									"src": "912:63:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "1084:41:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1604,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "1094:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:16"
											},
											{
												"id": 1607,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:16"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:16",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1609,
									"name": "onlyOwner",
									"nameLocation": "1072:9:16",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:16"
									},
									"src": "1063:62:16",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "1256:30:16",
										"statements": [
											{
												"expression": {
													"id": 1615,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1585,
													"src": "1273:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1614,
												"id": 1616,
												"nodeType": "Return",
												"src": "1266:13:16"
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:16",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:16"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "1247:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:16"
									},
									"scope": 1690,
									"src": "1201:85:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "1404:85:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1623,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "1422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1625,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1780,
																	"src": "1433:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:16"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:16",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:16"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:16"
									},
									"scope": 1690,
									"src": "1359:130:16",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "1878:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1639,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1638,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "1888:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:16"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:16",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1635,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1609,
												"src": "1868:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:16"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:16"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:16"
									},
									"scope": 1690,
									"src": "1824:101:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "2144:128:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1655,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "2162:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1656,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1663,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "2256:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1664,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1689,
														"src": "2237:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:16"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:16",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1651,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1609,
												"src": "2134:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:16"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "2101:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:16"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:16"
									},
									"scope": 1690,
									"src": "2074:198:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "2489:124:16",
										"statements": [
											{
												"assignments": [
													1676
												],
												"declarations": [
													{
														"constant": false,
														"id": 1676,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:16",
														"nodeType": "VariableDeclaration",
														"scope": 1688,
														"src": "2499:16:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1675,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:16",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1678,
												"initialValue": {
													"id": 1677,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1585,
													"src": "2518:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:16"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1679,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "2534:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1672,
														"src": "2543:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1684,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1676,
															"src": "2587:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1685,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "2597:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1683,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "2566:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "EmitStatement",
												"src": "2561:45:16"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:16",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "2454:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:16"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:16"
									},
									"scope": 1690,
									"src": "2426:187:16",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1691,
							"src": "654:1961:16",
							"usedErrors": []
						}
					],
					"src": "102:2514:16"
				},
				"id": 16
			},
			"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1768
						]
					},
					"id": 1769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1693,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:17",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1768,
							"linearizedBaseContracts": [
								1768
							],
							"name": "IERC20",
							"nameLocation": "212:6:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:17",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1702,
									"name": "Transfer",
									"nameLocation": "394:8:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "403:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "425:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "445:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:17"
									},
									"src": "388:72:17"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:17",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1711,
									"name": "Approval",
									"nameLocation": "625:8:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "634:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "657:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "682:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:17"
									},
									"src": "619:78:17"
								},
								{
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:17",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:17"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "820:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:17"
									},
									"scope": 1768,
									"src": "774:55:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:17",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "931:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:17"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "971:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:17"
									},
									"scope": 1768,
									"src": "912:68:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:17",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1211:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1223:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:17"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "1257:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:17"
									},
									"scope": 1768,
									"src": "1193:70:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:17",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1557:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1572:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:17"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1612:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:17"
									},
									"scope": 1768,
									"src": "1538:83:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:17",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2291:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2308:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:17"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2342:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:17"
									},
									"scope": 1768,
									"src": "2274:74:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:17",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2668:12:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:17",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2682:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2694:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:17"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "2728:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:17"
									},
									"scope": 1768,
									"src": "2646:88:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1769,
							"src": "202:2534:17",
							"usedErrors": []
						}
					],
					"src": "106:2631:17"
				},
				"id": 17
			},
			"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1790
						]
					},
					"id": 1791,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:18"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1771,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:18",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1790,
							"linearizedBaseContracts": [
								1790
							],
							"name": "Context",
							"nameLocation": "626:7:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "702:34:18",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1776,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:18",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1775,
												"id": 1778,
												"nodeType": "Return",
												"src": "712:17:18"
											}
										]
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:18"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "693:7:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:18"
									},
									"scope": 1790,
									"src": "640:96:18",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "809:32:18",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1785,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:18",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1784,
												"id": 1787,
												"nodeType": "Return",
												"src": "819:15:18"
											}
										]
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:18"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "793:14:18",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:18"
									},
									"scope": 1790,
									"src": "742:99:18",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1791,
							"src": "608:235:18",
							"usedErrors": []
						}
					],
					"src": "86:758:18"
				},
				"id": 18
			},
			"src/UnfuckGPTPriceData.sol": {
				"ast": {
					"absolutePath": "src/UnfuckGPTPriceData.sol",
					"exportedSymbols": {
						"Context": [
							1790
						],
						"IERC20": [
							1768
						],
						"IFlareContractRegistry": [
							1577
						],
						"IFtso": [
							406
						],
						"IFtsoGenesis": [
							195
						],
						"IFtsoRegistry": [
							581
						],
						"IFtsoRegistryGenesis": [
							209
						],
						"IGovernanceVotePower": [
							631
						],
						"IICleanable": [
							905
						],
						"IIFtso": [
							170
						],
						"IIGovernanceVotePower": [
							978
						],
						"IIVPContract": [
							1210
						],
						"IIVPToken": [
							1265
						],
						"IPChainStakeMirror": [
							732
						],
						"IPChainStakeMirrorVerifier": [
							752
						],
						"IPChainVotePower": [
							884
						],
						"IVPContractEvents": [
							1290
						],
						"IVPToken": [
							1527
						],
						"Ownable": [
							1690
						],
						"UnfuckGPTPriceData": [
							1903
						]
					},
					"id": 1904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1792,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:19"
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol",
							"file": "@flarenetwork/flare-periphery-contracts/coston2/util-contracts/userInterfaces/IFlareContractRegistry.sol",
							"id": 1793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 1578,
							"src": "58:114:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/flare-foundry-periphery-package/src/coston2/ftso/userInterfaces/IFtsoRegistry.sol",
							"file": "@flarenetwork/flare-periphery-contracts/coston2/ftso/userInterfaces/IFtsoRegistry.sol",
							"id": 1794,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 582,
							"src": "173:95:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
							"file": "openzeppelin-contracts/contracts/access/Ownable.sol",
							"id": 1795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 1691,
							"src": "269:61:19",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1796,
										"name": "Ownable",
										"nameLocations": [
											"526:7:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1690,
										"src": "526:7:19"
									},
									"id": 1797,
									"nodeType": "InheritanceSpecifier",
									"src": "526:7:19"
								}
							],
							"canonicalName": "UnfuckGPTPriceData",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1903,
							"linearizedBaseContracts": [
								1903,
								1690,
								1790
							],
							"name": "UnfuckGPTPriceData",
							"nameLocation": "504:18:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1800,
									"mutability": "constant",
									"name": "FLARE_CONTRACT_REGISTRY",
									"nameLocation": "565:23:19",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "540:101:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1798,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:19",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861443637464536363636304662386446453964366231623432343064383635306533304636303139",
										"id": 1799,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "599:42:19",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xaD67FE66660Fb8dFE9d6b1b4240d8650e30F6019"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1806,
									"mutability": "mutable",
									"name": "contractRegistry",
									"nameLocation": "671:16:19",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "648:97:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IFlareContractRegistry_$1577",
										"typeString": "contract IFlareContractRegistry"
									},
									"typeName": {
										"id": 1802,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1801,
											"name": "IFlareContractRegistry",
											"nameLocations": [
												"648:22:19"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1577,
											"src": "648:22:19"
										},
										"referencedDeclaration": 1577,
										"src": "648:22:19",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFlareContractRegistry_$1577",
											"typeString": "contract IFlareContractRegistry"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1804,
												"name": "FLARE_CONTRACT_REGISTRY",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1800,
												"src": "721:23:19",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1803,
											"name": "IFlareContractRegistry",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1577,
											"src": "698:22:19",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IFlareContractRegistry_$1577_$",
												"typeString": "type(contract IFlareContractRegistry)"
											}
										},
										"id": 1805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "698:47:19",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IFlareContractRegistry_$1577",
											"typeString": "contract IFlareContractRegistry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "34ece79d",
									"id": 1811,
									"mutability": "mutable",
									"name": "currentPriceInfo",
									"nameLocation": "803:16:19",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "752:67:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceInfo_$422_storage_$",
										"typeString": "mapping(uint256 => struct IFtsoRegistry.PriceInfo)"
									},
									"typeName": {
										"id": 1810,
										"keyType": {
											"id": 1807,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "760:7:19",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "752:43:19",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceInfo_$422_storage_$",
											"typeString": "mapping(uint256 => struct IFtsoRegistry.PriceInfo)"
										},
										"valueType": {
											"id": 1809,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1808,
												"name": "IFtsoRegistry.PriceInfo",
												"nameLocations": [
													"771:13:19",
													"785:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "771:23:19"
											},
											"referencedDeclaration": 422,
											"src": "771:23:19",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PriceInfo_$422_storage_ptr",
												"typeString": "struct IFtsoRegistry.PriceInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16638d59",
									"id": 1813,
									"mutability": "mutable",
									"name": "priceInfosCount",
									"nameLocation": "841:15:19",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "826:30:19",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1812,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "826:7:19",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "877:2:19",
										"statements": []
									},
									"id": 1817,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:2:19"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:0:19"
									},
									"scope": 1903,
									"src": "863:16:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "929:435:19",
										"statements": [
											{
												"assignments": [
													1824
												],
												"declarations": [
													{
														"constant": false,
														"id": 1824,
														"mutability": "mutable",
														"name": "ftsoRegistry",
														"nameLocation": "953:12:19",
														"nodeType": "VariableDeclaration",
														"scope": 1871,
														"src": "939:26:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
															"typeString": "contract IFtsoRegistry"
														},
														"typeName": {
															"id": 1823,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1822,
																"name": "IFtsoRegistry",
																"nameLocations": [
																	"939:13:19"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 581,
																"src": "939:13:19"
															},
															"referencedDeclaration": 581,
															"src": "939:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
																"typeString": "contract IFtsoRegistry"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1831,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "4674736f5265676973747279",
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1037:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f",
																		"typeString": "literal_string \"FtsoRegistry\""
																	},
																	"value": "FtsoRegistry"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f",
																		"typeString": "literal_string \"FtsoRegistry\""
																	}
																],
																"expression": {
																	"id": 1826,
																	"name": "contractRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "995:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IFlareContractRegistry_$1577",
																		"typeString": "contract IFlareContractRegistry"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1012:24:19",
																"memberName": "getContractAddressByName",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1538,
																"src": "995:41:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view external returns (address)"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "995:57:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1825,
														"name": "IFtsoRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "968:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFtsoRegistry_$581_$",
															"typeString": "type(contract IFtsoRegistry)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:94:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
														"typeString": "contract IFtsoRegistry"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "939:123:19"
											},
											{
												"assignments": [
													1837
												],
												"declarations": [
													{
														"constant": false,
														"id": 1837,
														"mutability": "mutable",
														"name": "_priceInfos",
														"nameLocation": "1106:11:19",
														"nodeType": "VariableDeclaration",
														"scope": 1871,
														"src": "1073:44:19",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IFtsoRegistry.PriceInfo[]"
														},
														"typeName": {
															"baseType": {
																"id": 1835,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1834,
																	"name": "IFtsoRegistry.PriceInfo",
																	"nameLocations": [
																		"1073:13:19",
																		"1087:9:19"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 422,
																	"src": "1073:23:19"
																},
																"referencedDeclaration": 422,
																"src": "1073:23:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceInfo_$422_storage_ptr",
																	"typeString": "struct IFtsoRegistry.PriceInfo"
																}
															},
															"id": 1836,
															"nodeType": "ArrayTypeName",
															"src": "1073:25:19",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_storage_$dyn_storage_ptr",
																"typeString": "struct IFtsoRegistry.PriceInfo[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1841,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1838,
															"name": "ftsoRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "1120:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
																"typeString": "contract IFtsoRegistry"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1146:19:19",
														"memberName": "getAllCurrentPrices",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 518,
														"src": "1120:45:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (struct IFtsoRegistry.PriceInfo memory[] memory)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1120:47:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IFtsoRegistry.PriceInfo memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1073:94:19"
											},
											{
												"expression": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1842,
														"name": "priceInfosCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "1178:15:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1843,
															"name": "_priceInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "1196:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IFtsoRegistry.PriceInfo memory[] memory"
															}
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1208:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1196:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1178:36:19",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "1178:36:19"
											},
											{
												"body": {
													"id": 1869,
													"nodeType": "Block",
													"src": "1274:84:19",
													"statements": [
														{
															"expression": {
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1858,
																		"name": "currentPriceInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "1288:16:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceInfo_$422_storage_$",
																			"typeString": "mapping(uint256 => struct IFtsoRegistry.PriceInfo storage ref)"
																		}
																	},
																	"id": 1863,
																	"indexExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1859,
																				"name": "_priceInfos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1837,
																				"src": "1305:11:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IFtsoRegistry.PriceInfo memory[] memory"
																				}
																			},
																			"id": 1861,
																			"indexExpression": {
																				"id": 1860,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1848,
																				"src": "1317:1:19",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1305:14:19",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PriceInfo_$422_memory_ptr",
																				"typeString": "struct IFtsoRegistry.PriceInfo memory"
																			}
																		},
																		"id": 1862,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1320:9:19",
																		"memberName": "ftsoIndex",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 415,
																		"src": "1305:24:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1288:42:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceInfo_$422_storage",
																		"typeString": "struct IFtsoRegistry.PriceInfo storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1864,
																		"name": "_priceInfos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "1333:11:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IFtsoRegistry.PriceInfo memory[] memory"
																		}
																	},
																	"id": 1866,
																	"indexExpression": {
																		"id": 1865,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1848,
																		"src": "1345:1:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1333:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PriceInfo_$422_memory_ptr",
																		"typeString": "struct IFtsoRegistry.PriceInfo memory"
																	}
																},
																"src": "1288:59:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PriceInfo_$422_storage",
																	"typeString": "struct IFtsoRegistry.PriceInfo storage ref"
																}
															},
															"id": 1868,
															"nodeType": "ExpressionStatement",
															"src": "1288:59:19"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1851,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "1245:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1852,
															"name": "_priceInfos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "1249:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PriceInfo_$422_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IFtsoRegistry.PriceInfo memory[] memory"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1261:6:19",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1249:18:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1245:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1870,
												"initializationExpression": {
													"assignments": [
														1848
													],
													"declarations": [
														{
															"constant": false,
															"id": 1848,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1238:1:19",
															"nodeType": "VariableDeclaration",
															"scope": 1870,
															"src": "1230:9:19",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1847,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1230:7:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1850,
													"initialValue": {
														"hexValue": "30",
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1242:1:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1230:13:19"
												},
												"loopExpression": {
													"expression": {
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1269:3:19",
														"subExpression": {
															"id": 1855,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "1269:1:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1857,
													"nodeType": "ExpressionStatement",
													"src": "1269:3:19"
												},
												"nodeType": "ForStatement",
												"src": "1225:133:19"
											}
										]
									},
									"functionSelector": "068b6bd5",
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1820,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1819,
												"name": "onlyOwner",
												"nameLocations": [
													"919:9:19"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1609,
												"src": "919:9:19"
											},
											"nodeType": "ModifierInvocation",
											"src": "919:9:19"
										}
									],
									"name": "refreshPrices",
									"nameLocation": "894:13:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:19"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:19"
									},
									"scope": 1903,
									"src": "885:479:19",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "1491:239:19",
										"statements": [
											{
												"assignments": [
													1882
												],
												"declarations": [
													{
														"constant": false,
														"id": 1882,
														"mutability": "mutable",
														"name": "ftsoRegistry",
														"nameLocation": "1516:12:19",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "1502:26:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
															"typeString": "contract IFtsoRegistry"
														},
														"typeName": {
															"id": 1881,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1880,
																"name": "IFtsoRegistry",
																"nameLocations": [
																	"1502:13:19"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 581,
																"src": "1502:13:19"
															},
															"referencedDeclaration": 581,
															"src": "1502:13:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
																"typeString": "contract IFtsoRegistry"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1889,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "4674736f5265676973747279",
																	"id": 1886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1600:14:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f",
																		"typeString": "literal_string \"FtsoRegistry\""
																	},
																	"value": "FtsoRegistry"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_2751d350b91ccc0d59e1824e87b5da60b9483c795d034dceabe6fd4269bb745f",
																		"typeString": "literal_string \"FtsoRegistry\""
																	}
																],
																"expression": {
																	"id": 1884,
																	"name": "contractRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1806,
																	"src": "1558:16:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IFlareContractRegistry_$1577",
																		"typeString": "contract IFlareContractRegistry"
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1575:24:19",
																"memberName": "getContractAddressByName",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1538,
																"src": "1558:41:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (string memory) view external returns (address)"
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1558:57:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1883,
														"name": "IFtsoRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "1531:13:19",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IFtsoRegistry_$581_$",
															"typeString": "type(contract IFtsoRegistry)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:94:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
														"typeString": "contract IFtsoRegistry"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1502:123:19"
											},
											{
												"assignments": [
													1891
												],
												"declarations": [
													{
														"constant": false,
														"id": 1891,
														"mutability": "mutable",
														"name": "_idx",
														"nameLocation": "1643:4:19",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "1635:12:19",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1890,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1635:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"initialValue": {
													"arguments": [
														{
															"id": 1894,
															"name": "_symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "1676:7:19",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1892,
															"name": "ftsoRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "1650:12:19",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IFtsoRegistry_$581",
																"typeString": "contract IFtsoRegistry"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1663:12:19",
														"memberName": "getFtsoIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 464,
														"src": "1650:25:19",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) view external returns (uint256)"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:34:19",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1635:49:19"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1897,
														"name": "currentPriceInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "1701:16:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PriceInfo_$422_storage_$",
															"typeString": "mapping(uint256 => struct IFtsoRegistry.PriceInfo storage ref)"
														}
													},
													"id": 1899,
													"indexExpression": {
														"id": 1898,
														"name": "_idx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1891,
														"src": "1718:4:19",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1701:22:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceInfo_$422_storage",
														"typeString": "struct IFtsoRegistry.PriceInfo storage ref"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1900,
												"nodeType": "Return",
												"src": "1694:29:19"
											}
										]
									},
									"functionSelector": "3d44abf1",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "latestPriceForToken",
									"nameLocation": "1379:19:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "1422:7:19",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "1408:21:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1873,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1408:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:37:19"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "1459:30:19",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PriceInfo_$422_memory_ptr",
													"typeString": "struct IFtsoRegistry.PriceInfo"
												},
												"typeName": {
													"id": 1877,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1876,
														"name": "IFtsoRegistry.PriceInfo",
														"nameLocations": [
															"1459:13:19",
															"1473:9:19"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 422,
														"src": "1459:23:19"
													},
													"referencedDeclaration": 422,
													"src": "1459:23:19",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PriceInfo_$422_storage_ptr",
														"typeString": "struct IFtsoRegistry.PriceInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:32:19"
									},
									"scope": 1903,
									"src": "1370:360:19",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1904,
							"src": "495:1237:19",
							"usedErrors": []
						}
					],
					"src": "32:1701:19"
				},
				"id": 19
			}
		}
	}
}