{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_wormholeRelayer",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "MembershipChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "members",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "membershipChangeOnHostChain",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nftContracts",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "payload",
						"type": "bytes"
					},
					{
						"internalType": "bytes[]",
						"name": "",
						"type": "bytes[]"
					},
					{
						"internalType": "bytes32",
						"name": "sourceAddress",
						"type": "bytes32"
					},
					{
						"internalType": "uint16",
						"name": "sourceChain",
						"type": "uint16"
					},
					{
						"internalType": "bytes32",
						"name": "deliveryHash",
						"type": "bytes32"
					}
				],
				"name": "receiveWormholeMessages",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "seenDeliveryVaaHashes",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_chainId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_contract",
						"type": "address"
					}
				],
				"name": "setNftContractAddressOnChain",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wormholeRelayer",
				"outputs": [
					{
						"internalType": "contract IWormholeRelayer",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/UnfuckGPT.sol": "UnfuckGPT"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [
			":@flarenetwork/flare-periphery-contracts/=lib/flare-foundry-periphery-package/src/",
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":forge-std/=lib/forge-std/src/",
			":openzeppelin-contracts/=lib/openzeppelin-contracts/",
			":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"
		]
	},
	"sources": {
		"lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"lib/wormhole-solidity-sdk/src/interfaces/IWormholeReceiver.sol": {
			"keccak256": "0x795d0ddb313e097be7a16d7ff0cce2b50f93955a05cdc68bf6cf7df8ee23cfc1",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://803421c2d0cf4f0727a3fa3450921973004865f161476a0f1869ae396ff2689a",
				"dweb:/ipfs/QmXWHXY2NgLHN9ebGXCzqwH3n53EWT4z9MdGtrFdPHm4Di"
			]
		},
		"lib/wormhole-solidity-sdk/src/interfaces/IWormholeRelayer.sol": {
			"keccak256": "0x1517fe326d98cf485334ae07709fe7065b517a09305891d7961a53c5d30fb089",
			"license": "Apache 2",
			"urls": [
				"bzz-raw://cea6bb6d686e003e3c2e91e9270926fed0c94a9c48dbeebf68af7c1231fa8aa7",
				"dweb:/ipfs/Qmato7ZRk8Ro3we6Kj7SdkqB5uGUrBhT7tvBnYg3CNQXe9"
			]
		},
		"src/UnfuckGPT.sol": {
			"keccak256": "0x9fa1cf39e95d0ad0f8b7a6af92a669f6f297524e61ec43bbed381bbb1462c130",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4e8f133485defe2b17277312eb2fef66c7cd9e412bfbcbc64d2cd094b567624",
				"dweb:/ipfs/Qmas5drqg8BACRQdi55BEyXKLGv4KAXGmEBb9vpgKPUsaq"
			]
		}
	},
	"version": 1
}